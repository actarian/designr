{"version":3,"file":"designr-control.js","sources":["ng://@designr/control/lib/control/control-option.ts","ng://@designr/control/lib/control/checkbox/control-checkbox.ts","ng://@designr/control/lib/control/control.component.html","ng://@designr/control/lib/control/control.component.ts","ng://@designr/control/lib/control/checkbox/control-checkbox.component.html","ng://@designr/control/lib/control/checkbox/control-checkbox.component.ts","ng://@designr/control/lib/control/email/control-email.ts","ng://@designr/control/lib/control/email/control-email.component.html","ng://@designr/control/lib/control/email/control-email.component.ts","ng://@designr/control/lib/control/group/control-group.ts","ng://@designr/control/lib/control/group/control-group.component.html","ng://@designr/control/lib/control/group/control-group.component.ts","ng://@designr/control/lib/control/info/control-info.ts","ng://@designr/control/lib/control/info/control-info.component.html","ng://@designr/control/lib/control/info/control-info.component.ts","ng://@designr/control/lib/control/markdown/control-markdown.ts","ng://@designr/control/lib/control/markdown/control-markdown.component.html","ng://@designr/control/lib/control/markdown/control-markdown.component.ts","ng://@designr/control/lib/control/number/control-number.ts","ng://@designr/control/lib/control/number/control-number.component.html","ng://@designr/control/lib/control/number/control-number.component.ts","ng://@designr/control/lib/control/password/control-password.ts","ng://@designr/control/lib/control/password/control-password.component.html","ng://@designr/control/lib/control/password/control-password.component.ts","ng://@designr/control/lib/control/radio/control-radio.ts","ng://@designr/control/lib/control/radio/control-radio.component.html","ng://@designr/control/lib/control/radio/control-radio.component.ts","ng://@designr/control/lib/control/select/control-select.ts","ng://@designr/control/lib/control/select/control-select.component.html","ng://@designr/control/lib/control/select/control-select.component.ts","ng://@designr/control/lib/control/text/control-text.ts","ng://@designr/control/lib/control/text/control-text.component.html","ng://@designr/control/lib/control/text/control-text.component.ts","ng://@designr/control/lib/control/textarea/control-textarea.ts","ng://@designr/control/lib/control/textarea/control-textarea.component.html","ng://@designr/control/lib/control/textarea/control-textarea.component.ts","ng://@designr/control/lib/config/control.config.ts","ng://@designr/control/lib/control-module.component.ts","ng://@designr/control/lib/directives/exists.validator.ts","ng://@designr/control/lib/directives/match.validator.ts","ng://@designr/control/lib/control/control.service.ts","ng://@designr/control/lib/control/control-outlet.component.html","ng://@designr/control/lib/control/control-outlet.component.ts","ng://@designr/control/lib/control/control.accessor.ts","ng://@designr/control/lib/control/controls.component.html","ng://@designr/control/lib/control/controls.component.ts","ng://@designr/control/lib/directives/exists.directive.ts","ng://@designr/control/lib/directives/match.directive.ts","ng://@designr/control/lib/directives/uppercase.directive.ts","ng://@designr/control/lib/form/form.service.ts","ng://@designr/control/lib/control.module.ts","ng://@designr/control/designr-control.ts"],"sourcesContent":["\n// let UNIQUE_ID: number = 0;\n\nexport interface IControlOption<T> {\n\tschema: string;\n\tvalue?: T;\n\torder?: number;\n\tkey?: string;\n\tlabel?: string;\n\tplaceholder?: string;\n\ttitle?: string;\n\tabstract?: string;\n\tdescription?: string;\n\thidden?: boolean;\n\tdisabled?: boolean;\n\trequired?: boolean;\n\texists?: Function;\n\tmatch?: string;\n\treverse?: boolean;\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n\t[x: string]: any;\n}\n\nexport class ControlOption<T> {\n\tschema: string = 'text';\n\tvalue?: T;\n\torder?: number;\n\tkey?: string;\n\tlabel?: string;\n\tplaceholder?: string;\n\ttitle?: string;\n\tabstract?: string;\n\tdescription?: string;\n\thidden?: boolean;\n\tdisabled?: boolean;\n\trequired?: boolean;\n\texists?: Function;\n\tmatch?: string;\n\treverse?: boolean;\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n\n\tconstructor(options?: IControlOption<T>) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t}\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlCheckbox extends ControlOption<boolean> {\n\tschema: string = 'checkbox';\n\trequiredTrue?: boolean;\n}\n","<ng-container [formGroup]=\"form\">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<input class=\"control__input\" placeholder=\"{{ context.option.placeholder | label }}\" [id]=\"context.option.key\" [formControlName]=\"context.option.key\" type=\"text\">\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet=\"context.inputRef || inputDef; context: { $implicit: context }\"></ng-container>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class=\"control__error\" *ngIf=\"context.control.invalid && (context.control.dirty || context.control.touched)\">\r\n\t\t\t<div *ngIf=\"context.control.errors.required\">{{ 'errors.required' | label }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.minlength\">{{ 'errors.minlength' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.maxlength\">{{ 'errors.maxlength' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.pattern\">{{ 'errors.pattern' | label }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.match\">{{ 'errors.match' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet=\"context.errorRef || errorDef; context: { $implicit: context }\"></ng-container>\r\n</ng-container>\r\n","import { NgForOfContext } from '@angular/common';\nimport { Component, ContentChild, Input, TemplateRef } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { DisposableComponent } from '@designr/core';\nimport { IControlOption } from './control-option';\n\n@Component({\n\tselector: 'control-component',\n\ttemplateUrl: 'control.component.html',\n})\nexport class ControlComponent extends DisposableComponent {\n\n\t// @ContentChild('controlRef') controlRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t// @ContentChild('labelRef') labelRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ContentChild('inputRef', /* TODO: add static flag */ {}) inputRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ContentChild('errorRef', /* TODO: add static flag */ {}) errorRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\n\t@Input() option: IControlOption<any>;\n\t@Input() form: FormGroup;\n\n\tget context(): ControlComponent {\n\t\treturn this;\n\t}\n\n\tget control(): AbstractControl {\n\t\t// console.log('control', this.option.key, this.form.controls);\n\t\treturn this.form.controls[this.option.key];\n\t}\n\n\tget isValid(): boolean {\n\t\treturn this.control.valid;\n\t}\n\n\tget classes(): {\n\t\tvalid?: boolean,\n\t\tinvalid?: boolean,\n\t\tdirty?: boolean,\n\t\tempty?: boolean,\n\t\trequired?: boolean,\n\t\tdisabled?: boolean\n\t} {\n\t\treturn {\n\t\t\tvalid: this.control.valid,\n\t\t\tinvalid: this.control.invalid,\n\t\t\tdirty: this.control.dirty,\n\t\t\tempty: Boolean(this.control.value == null),\n\t\t\trequired: Boolean(this.option.required || this.option.requiredTrue),\n\t\t\tdisabled: this.option.disabled,\n\t\t};\n\t}\n\n}\n","<ng-container [formGroup]=\"form\">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<label class=\"control__group control__group--checkbox\">\r\n\t\t\t<input class=\"control__checkbox\" type=\"checkbox\" [id]=\"context.option.key\" [formControlName]=\"context.option.key\">\r\n\t\t\t<span class=\"control__info\">{{ context.option.info | label }}</span>\r\n\t\t</label>\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class=\"control__error control__error--checkbox\" *ngIf=\"context.control.invalid && (context.control.dirty || context.control.touched)\">\r\n\t\t\t<div *ngIf=\"context.control.errors.required\">{{ 'errors.required' | label }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.requiredTrue\">{{ 'errors.required' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet=\"context.inputRef || inputDef; context: { $implicit: context }\"></ng-container>\r\n\t<ng-container *ngTemplateOutlet=\"context.errorRef || errorDef; context: { $implicit: context }\"></ng-container>\r\n</ng-container>\r\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlCheckbox } from './control-checkbox';\n\n@Component({\n\tselector: 'control-checkbox-component',\n\ttemplateUrl: 'control-checkbox.component.html',\n})\nexport class ControlCheckboxComponent extends ControlComponent {\n\n\t@Input() option: ControlCheckbox;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlEmail extends ControlOption<string> {\n\tschema: string = 'email';\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp = '[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}';\n}\n","<ng-container [formGroup]=\"form\">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<input class=\"control__input control__input--email\" placeholder=\"{{ context.option.placeholder | label }}\" [id]=\"context.option.key\" [formControlName]=\"context.option.key\" type=\"email\">\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class=\"control__error control__error--email\" *ngIf=\"context.control.invalid && (context.control.dirty || context.control.touched)\">\r\n\t\t\t<div *ngIf=\"context.control.errors.required\">{{ 'errors.required' | label }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.email\">{{ 'errors.email' | label }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.minlength\">{{ 'errors.minlength' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.maxlength\">{{ 'errors.maxlength' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.pattern\">{{ 'errors.pattern' | label }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.match\">{{ 'errors.match' | label }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.exists\">{{ 'errors.exists' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet=\"context.inputRef || inputDef; context: { $implicit: context }\"></ng-container>\r\n\t<ng-container *ngTemplateOutlet=\"context.errorRef || errorDef; context: { $implicit: context }\"></ng-container>\r\n</ng-container>\r\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlEmail } from './control-email';\n\n@Component({\n\tselector: 'control-email-component',\n\ttemplateUrl: 'control-email.component.html',\n})\nexport class ControlEmailComponent extends ControlComponent {\n\n\t@Input() option: ControlEmail;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlGroup extends ControlOption<any[]> {\n\tschema: string = 'group';\n\ttitle?: string;\n\tabstract?: string;\n\toptions?: ControlOption<any>[];\n}\n","<ng-container [formGroup]=\"form\">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<div class=\"control__title\" *ngIf=\"context.option.title\">{{ context.option.title | label }}</div>\r\n\t\t<div class=\"control__abstract\" *ngIf=\"context.option.abstract\">{{ context.option.abstract | label }}</div>\r\n\t\t<div class=\"fieldset\" *ngIf=\"context.option.options.length\">\r\n\t\t\t<ng-container *ngFor=\"let option of context.option.options\">\r\n\t\t\t\t<control-outlet class=\"fieldset__field fieldset__field--{{option.schema}}\" [option]=\"option\" [form]=\"context.control\"></control-outlet>\r\n\t\t\t</ng-container>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context></ng-template>\r\n\t<ng-container *ngTemplateOutlet=\"context.inputRef || inputDef; context: { $implicit: context }\"></ng-container>\r\n\t<ng-container *ngTemplateOutlet=\"context.errorRef || errorDef; context: { $implicit: context }\"></ng-container>\r\n</ng-container>\r\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlGroup } from './control-group';\n\n@Component({\n\tselector: 'control-group-component',\n\ttemplateUrl: 'control-group.component.html',\n})\nexport class ControlGroupComponent extends ControlComponent {\n\t@Input() option: ControlGroup;\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlInfo extends ControlOption<any[]> {\n\tschema: string = 'info';\n\ttitle?: string;\n\tabstract?: string;\n}\n","<ng-container [formGroup]=\"form\">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<div class=\"control__title\" *ngIf=\"context.option.title\">{{ context.option.title | label }}</div>\r\n\t\t<div class=\"control__abstract\" *ngIf=\"context.option.abstract\">{{ context.option.abstract | label }}</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet=\"context.inputRef || inputDef; context: { $implicit: context }\"></ng-container>\r\n</ng-container>\r\n","import { Component, Input } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { ControlComponent } from '../control.component';\nimport { ControlInfo } from './control-info';\n\n@Component({\n\tselector: 'control-info-component',\n\ttemplateUrl: 'control-info.component.html',\n})\nexport class ControlInfoComponent extends ControlComponent {\n\n\t@Input() option: ControlInfo;\n\n\tget control(): AbstractControl {\n\t\treturn null;\n\t}\n\n\tget isValid() {\n\t\treturn true;\n\t}\n\n\tget classes(): {\n\t\tvalid?: boolean,\n\t\tinvalid?: boolean,\n\t\tdirty?: boolean,\n\t\tempty?: boolean,\n\t\trequired?: boolean,\n\t\tdisabled?: boolean\n\t} {\n\t\treturn {};\n\t}\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlMarkdown extends ControlOption<string> {\n\tschema: string = 'markdown';\n}\n","<ng-container [formGroup]=\"form\">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<textarea class=\"control__input control__input--markdown\" placeholder=\"{{ context.option.placeholder | label }}\" [id]=\"context.option.key\" [formControlName]=\"context.option.key\" rows=\"4\"></textarea>\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class=\"control__error control__error--markdown\" *ngIf=\"context.control.invalid && (context.control.dirty || context.control.touched)\">\r\n\t\t\t<div *ngIf=\"context.control.errors.required\">{{ 'errors.required' | label }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.minlength\">{{ 'errors.minlength' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.maxlength\">{{ 'errors.maxlength' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet=\"context.inputRef || inputDef; context: { $implicit: context }\"></ng-container>\r\n\t<ng-container *ngTemplateOutlet=\"context.errorRef || errorDef; context: { $implicit: context }\"></ng-container>\r\n</ng-container>\r\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlMarkdown } from './control-markdown';\n\n@Component({\n\tselector: 'control-markdown-component',\n\ttemplateUrl: 'control-markdown.component.html',\n})\nexport class ControlMarkdownComponent extends ControlComponent {\n\n\t@Input() option: ControlMarkdown;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlNumber extends ControlOption<string> {\n\tschema: string = 'number';\n\tmin?: number;\n\tmax?: number;\n\tstep?: number;\n}\n","<ng-container [formGroup]=\"form\">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<input class=\"control__input control__input--number\" placeholder=\"{{ context.option.placeholder | label }}\" [id]=\"context.option.key\" [formControlName]=\"context.option.key\" type=\"number\" [attr.step]=\"context.option.step\">\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class=\"control__error control__error--number\" *ngIf=\"context.control.invalid && (context.control.dirty || context.control.touched)\">\r\n\t\t\t<div *ngIf=\"context.control.errors.required\">{{ 'errors.required' | label }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.min\">{{ 'errors.min' | label : null : { min: context.option.min } }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.max\">{{ 'errors.max' | label : null : { max: context.option.max } }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet=\"context.inputRef || inputDef; context: { $implicit: context }\"></ng-container>\r\n\t<ng-container *ngTemplateOutlet=\"context.errorRef || errorDef; context: { $implicit: context }\"></ng-container>\r\n</ng-container>\r\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlNumber } from './control-number';\n\n@Component({\n\tselector: 'control-number-component',\n\ttemplateUrl: 'control-number.component.html',\n})\nexport class ControlNumberComponent extends ControlComponent {\n\n\t@Input() option: ControlNumber;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlPassword extends ControlOption<string> {\n\tschema: string = 'password';\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n}\n","<ng-container [formGroup]=\"form\">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<div class=\"control__group control__group--password\">\r\n\t\t\t<input class=\"control__input control__input--password\" placeholder=\"{{ context.option.placeholder | label }}\" [formControlName]=\"context.option.key\" type=\"password\" #password>\r\n\t\t\t<div class=\"control__addon\">\r\n\t\t\t\t<input class=\"control__checkbox\" type=\"checkbox\" [attr.aria-label]=\"context.option.label | label\" (input)=\"password.setAttribute('type', reveal.checked ? 'text' : 'password')\" #reveal>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class=\"control__error control__error--password\" *ngIf=\"context.control.invalid && (context.control.dirty || context.control.touched)\">\r\n\t\t\t<div *ngIf=\"context.control.errors.required\">{{ 'errors.required' | label }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.minlength\">{{ 'errors.minlength' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.maxlength\">{{ 'errors.maxlength' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.pattern\">{{ 'errors.pattern' | label }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.match\">{{ 'errors.match' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet=\"context.inputRef || inputDef; context: { $implicit: context }\"></ng-container>\r\n\t<ng-container *ngTemplateOutlet=\"context.errorRef || errorDef; context: { $implicit: context }\"></ng-container>\r\n</ng-container>\r\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlPassword } from './control-password';\n\n@Component({\n\tselector: 'control-password-component',\n\ttemplateUrl: 'control-password.component.html',\n})\nexport class ControlPasswordComponent extends ControlComponent {\n\n\treveal: { checked: boolean } = { checked: false };\n\n\t@Input() option: ControlPassword;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlRadio extends ControlOption<boolean> {\n\tschema: string = 'radio';\n}\n","<ng-container [formGroup]=\"form\">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<label class=\"control__group control__group--radio\">\r\n\t\t\t<input class=\"control__radio\" type=\"radio\" [id]=\"context.option.key\" [formControlName]=\"context.option.key\">\r\n\t\t\t<span class=\"control__info\">{{ context.option.info | label }}</span>\r\n\t\t</label>\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class=\"control__error control__error--radio\" *ngIf=\"context.control.invalid && (context.control.dirty || context.control.touched)\">\r\n\t\t\t<div *ngIf=\"context.control.errors.required\">{{ 'errors.required' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet=\"context.inputRef || inputDef; context: { $implicit: context }\"></ng-container>\r\n\t<ng-container *ngTemplateOutlet=\"context.errorRef || errorDef; context: { $implicit: context }\"></ng-container>\r\n</ng-container>\r\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlRadio } from './control-radio';\n\n@Component({\n\tselector: 'control-radio-component',\n\ttemplateUrl: 'control-radio.component.html',\n})\nexport class ControlRadioComponent extends ControlComponent {\n\n\t@Input() option: ControlRadio;\n\n}\n","import { Observable } from 'rxjs';\nimport { ControlOption } from '../control-option';\n\nexport interface ControlSelectOption {\n\tid: any;\n\tname: string;\n}\n\nexport class ControlSelect extends ControlOption<string> {\n\tschema: string = 'select';\n\toptions?: ControlSelectOption[] | Observable<ControlSelectOption[]>;\n\tasObject: boolean;\n}\n","<ng-container [formGroup]=\"form\">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<div class=\"control__input control__input--select\">\r\n\t\t\t<select [id]=\"context.option.key\" [formControlName]=\"context.option.key\" [compareWith]=\"context.compareWith\">\r\n\t\t\t\t<option *ngFor=\"let item of options\" [ngValue]=\"context.getValue(item)\">{{item?.name | label}}</option>\r\n\t\t\t</select>\r\n\t\t\t<!-- control__accessory -->\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class=\"control__error control__error--select\" *ngIf=\"context.control.invalid && (context.control.dirty || context.control.touched)\">\r\n\t\t\t<div *ngIf=\"context.control.errors.required\">{{ 'errors.required' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet=\"context.inputRef || inputDef; context: { $implicit: context }\"></ng-container>\r\n\t<ng-container *ngTemplateOutlet=\"context.errorRef || errorDef; context: { $implicit: context }\"></ng-container>\r\n</ng-container>\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { isObservable, Observable, of } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { ControlComponent } from '../control.component';\nimport { ControlSelect, ControlSelectOption } from './control-select';\n\n@Component({\n\tselector: 'control-select-component',\n\ttemplateUrl: 'control-select.component.html',\n})\nexport class ControlSelectComponent extends ControlComponent implements OnInit {\n\n\t@Input() option: ControlSelect;\n\toptions: ControlSelectOption[] = [];\n\tgetValue: Function = this.getValue_.bind(this);\n\tcompareWith: Function = this.compareWith_.bind(this);\n\n\tngOnInit() {\n\t\tthis.options$().pipe(\n\t\t\ttakeUntil(this.unsubscribe),\n\t\t\ttap(options => {\n\t\t\t\tif (this.option.asObject && this.control.value === null) {\n\t\t\t\t\tconst firstNullOptions = options.find(x => x.id === null);\n\t\t\t\t\tif (firstNullOptions !== undefined) {\n\t\t\t\t\t\tthis.control.setValue(firstNullOptions);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t).subscribe(options => this.options = options);\n\t}\n\n\toptions$(): Observable<ControlSelectOption[]> {\n\t\tconst options = this.option.options;\n\t\tif (options) {\n\t\t\tif (isObservable(options)) {\n\t\t\t\treturn options;\n\t\t\t} else if (Array.isArray(options)) {\n\t\t\t\treturn of(options);\n\t\t\t} else {\n\t\t\t\treturn of([]);\n\t\t\t}\n\t\t} else {\n\t\t\treturn of([]);\n\t\t}\n\t}\n\n\tgetValue_(item: ControlSelectOption): any {\n\t\treturn this.option.asObject ? item : item.id;\n\t}\n\n\tcompareWith_(a: ControlSelectOption | string | number, b: ControlSelectOption | string | number) {\n\t\tif (this.option.asObject) {\n\t\t\ta = a as ControlSelectOption;\n\t\t\tb = b as ControlSelectOption;\n\t\t\treturn (b && b.id !== undefined) ? a.id === b.id : a.id === b;\n\t\t} else {\n\t\t\treturn b ? a === b : a === null;\n\t\t}\n\t}\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlText extends ControlOption<string> {\n\tschema: string = 'text';\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n}\n","<ng-container [formGroup]=\"form\">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<input class=\"control__input control__input--text\" placeholder=\"{{ context.option.placeholder | label }}\" [id]=\"context.option.key\" [formControlName]=\"context.option.key\" type=\"text\">\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet=\"context.inputRef || inputDef; context: { $implicit: context }\"></ng-container>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class=\"control__error control__error--text\" *ngIf=\"context.control.invalid && (context.control.dirty || context.control.touched)\">\r\n\t\t\t<div *ngIf=\"context.control.errors.required\">{{ 'errors.required' | label }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.minlength\">{{ 'errors.minlength' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.maxlength\">{{ 'errors.maxlength' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.pattern\">{{ 'errors.pattern' | label }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.match\">{{ 'errors.match' | label }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.exists\">{{ 'errors.exists' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet=\"context.errorRef || errorDef; context: { $implicit: context }\"></ng-container>\r\n</ng-container>\r\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlText } from './control-text';\n\n@Component({\n\tselector: 'control-text-component',\n\ttemplateUrl: 'control-text.component.html',\n})\nexport class ControlTextComponent extends ControlComponent {\n\n\t@Input() option: ControlText;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlTextarea extends ControlOption<string> {\n\tschema: string = 'textarea';\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n}\n","<ng-container [formGroup]=\"form\">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<textarea class=\"control__input control__input--textarea\" placeholder=\"{{ context.option.placeholder | label }}\" [id]=\"context.option.key\" [formControlName]=\"context.option.key\" rows=\"4\"></textarea>\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class=\"control__error control__error--textarea\" *ngIf=\"context.control.invalid && (context.control.dirty || context.control.touched)\">\r\n\t\t\t<div *ngIf=\"context.control.errors.required\">{{ 'errors.required' | label }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.minlength\">{{ 'errors.minlength' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf=\"context.control.errors.maxlength\">{{ 'errors.maxlength' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet=\"context.inputRef || inputDef; context: { $implicit: context }\"></ng-container>\r\n\t<ng-container *ngTemplateOutlet=\"context.errorRef || errorDef; context: { $implicit: context }\"></ng-container>\r\n</ng-container>\r\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlTextarea } from './control-textarea';\n\n@Component({\n\tselector: 'control-textarea-component',\n\ttemplateUrl: 'control-textarea.component.html',\n})\nexport class ControlTextareaComponent extends ControlComponent {\n\n\t@Input() option: ControlTextarea;\n\n}\n","import { InjectionToken, Type } from '@angular/core';\nimport { ControlCheckbox } from '../control/checkbox/control-checkbox';\nimport { ControlCheckboxComponent } from '../control/checkbox/control-checkbox.component';\nimport { IControlOption } from '../control/control-option';\nimport { ControlComponent } from '../control/control.component';\nimport { ControlEmail } from '../control/email/control-email';\nimport { ControlEmailComponent } from '../control/email/control-email.component';\nimport { ControlGroup } from '../control/group/control-group';\nimport { ControlGroupComponent } from '../control/group/control-group.component';\nimport { ControlInfo } from '../control/info/control-info';\nimport { ControlInfoComponent } from '../control/info/control-info.component';\nimport { ControlMarkdown } from '../control/markdown/control-markdown';\nimport { ControlMarkdownComponent } from '../control/markdown/control-markdown.component';\nimport { ControlNumber } from '../control/number/control-number';\nimport { ControlNumberComponent } from '../control/number/control-number.component';\nimport { ControlPassword } from '../control/password/control-password';\nimport { ControlPasswordComponent } from '../control/password/control-password.component';\nimport { ControlRadio } from '../control/radio/control-radio';\nimport { ControlRadioComponent } from '../control/radio/control-radio.component';\nimport { ControlSelect } from '../control/select/control-select';\nimport { ControlSelectComponent } from '../control/select/control-select.component';\nimport { ControlText } from '../control/text/control-text';\nimport { ControlTextComponent } from '../control/text/control-text.component';\nimport { ControlTextarea } from '../control/textarea/control-textarea';\nimport { ControlTextareaComponent } from '../control/textarea/control-textarea.component';\n\nexport interface ControlInterface {\n\tcomponent: Type<ControlComponent>;\n\tmodel: Type<IControlOption<any>>;\n}\n\nexport interface Controls { [key: string]: ControlInterface; }\n\nexport const entryComponents = [\n\tControlCheckboxComponent,\n\tControlEmailComponent,\n\tControlGroupComponent,\n\tControlInfoComponent,\n\tControlMarkdownComponent,\n\tControlNumberComponent,\n\tControlPasswordComponent,\n\tControlRadioComponent,\n\tControlSelectComponent,\n\tControlTextComponent,\n\tControlTextareaComponent,\n];\n\nexport const controls: Controls = {\n\t'checkbox': {\n\t\tcomponent: ControlCheckboxComponent,\n\t\tmodel: ControlCheckbox\n\t},\n\t'email': {\n\t\tcomponent: ControlEmailComponent,\n\t\tmodel: ControlEmail\n\t},\n\t'group': {\n\t\tcomponent: ControlGroupComponent,\n\t\tmodel: ControlGroup\n\t},\n\t'info': {\n\t\tcomponent: ControlInfoComponent,\n\t\tmodel: ControlInfo\n\t},\n\t'markdown': {\n\t\tcomponent: ControlMarkdownComponent,\n\t\tmodel: ControlMarkdown\n\t},\n\t'number': {\n\t\tcomponent: ControlNumberComponent,\n\t\tmodel: ControlNumber\n\t},\n\t'password': {\n\t\tcomponent: ControlPasswordComponent,\n\t\tmodel: ControlPassword\n\t},\n\t'radio': {\n\t\tcomponent: ControlRadioComponent,\n\t\tmodel: ControlRadio\n\t},\n\t'select': {\n\t\tcomponent: ControlSelectComponent,\n\t\tmodel: ControlSelect\n\t},\n\t'text': {\n\t\tcomponent: ControlTextComponent,\n\t\tmodel: ControlText\n\t},\n\t'textarea': {\n\t\tcomponent: ControlTextareaComponent,\n\t\tmodel: ControlTextarea\n\t},\n};\n\nexport class ControlConfig {\n\n\tcontrols?: Controls = {};\n\n\tconstructor(options?: ControlConfig) {\n\t\t// console.log('ControlConfig', options);\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t\tthis.controls = {\n\t\t\t\t...controls,\n\t\t\t\t...(options.controls || {})\n\t\t\t};\n\t\t}\n\t}\n}\n\nexport const CONTROL_CONFIG = new InjectionToken<ControlConfig>('control.config');\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'control-module',\n\ttemplate: `<span class=\"control-module\">control {{version}}</span>`,\n\tstyles: []\n})\nexport class ControlModuleComponent implements OnInit {\n\n\tversion: string = '0.0.12';\n\n\tconstructor() { }\n\n\tngOnInit() {\n\t}\n\n}\n","import { AbstractControl, AsyncValidatorFn, ValidationErrors } from '@angular/forms';\nimport { isObservable, Observable, of } from 'rxjs';\nimport { catchError, debounceTime, map, take } from 'rxjs/operators';\n\nconst DEBOUNCE_TIME: number = 250;\n\nfunction exists$(value: any, exists?: Function): Observable<ValidationErrors | null> {\n\tif (typeof exists === 'function') {\n\t\tconst oservableOrValue = exists(value);\n\t\tif (isObservable(oservableOrValue)) {\n\t\t\treturn oservableOrValue.pipe(\n\t\t\t\tmap(exists => {\n\t\t\t\t\treturn exists ? { exists: true } : null;\n\t\t\t\t})\n\t\t\t);\n\t\t} else {\n\t\t\treturn of(oservableOrValue ? { exists: true } : null);\n\t\t}\n\t} else {\n\t\treturn of(null);\n\t}\n}\n\nexport function existsValidator(exists?: Function): AsyncValidatorFn {\n\treturn (control: AbstractControl): Observable<ValidationErrors | null> => {\n\t\treturn exists$(control.value, exists).pipe(\n\t\t\tdebounceTime(DEBOUNCE_TIME),\n\t\t\tcatchError((error) => {\n\t\t\t\tconsole.log('existsValidator.catchError', error);\n\t\t\t\treturn of(null);\n\t\t\t}),\n\t\t\ttake(1),\n\t\t);\n\t};\n}\n","import { AbstractControl, FormGroup, ValidationErrors, ValidatorFn } from '@angular/forms';\n\nexport function matchValidator(otherKey: string, reverse: boolean = false, group: FormGroup): ValidatorFn {\n\treturn (control: AbstractControl): ValidationErrors | null => {\n\t\tconst otherControl = group.controls[otherKey];\n\t\tconst value = control.value;\n\t\t// value not equal\n\t\tif (otherControl && value !== otherControl.value && !reverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\t\t// value equal and reverse\n\t\tif (otherControl && value === otherControl.value && reverse) {\n\t\t\tif (otherControl.errors) {\n\t\t\t\tdelete otherControl.errors['match'];\n\t\t\t\tif (!Object.keys(otherControl.errors).length) {\n\t\t\t\t\totherControl.setErrors(null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (otherControl && value !== otherControl.value && reverse) {\n\t\t\totherControl.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t};\n}\n","import { Inject, Injectable, Type } from '@angular/core';\nimport { AbstractControl, AsyncValidatorFn, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { ControlConfig, CONTROL_CONFIG } from '../config/control.config';\nimport { existsValidator } from '../directives/exists.validator';\nimport { matchValidator } from '../directives/match.validator';\nimport { ControlOption, IControlOption } from './control-option';\nimport { ControlComponent } from './control.component';\nimport { ControlGroup } from './group/control-group';\nimport { ControlInfo } from './info/control-info';\n\nexport function noopValidator(): ValidatorFn {\n\treturn (control: AbstractControl): ValidationErrors | null => {\n\t\tconsole.log(control);\n\t\treturn null;\n\t};\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ControlService {\n\n\tpublic options: ControlConfig;\n\n\tconstructor(\n\t\t@Inject(CONTROL_CONFIG) options: ControlConfig\n\t) {\n\t\t// console.log('ControlService', options);\n\t\tthis.options = new ControlConfig(options || {});\n\t}\n\n\ttoFormGroup(options: IControlOption<any>[]): FormGroup {\n\t\tconst controls: { [key: string]: FormControl | FormGroup } = {};\n\t\toptions.forEach((option: ControlOption<any>) => {\n\t\t\t// group[x.key] = new FormControl(x.value, this.getValidators(x, group));\n\t\t\tif (option instanceof ControlGroup) {\n\t\t\t\tconst group: FormGroup = this.toFormGroup(option.options);\n\t\t\t\tcontrols[option.key] = group;\n\t\t\t} else if (!(option instanceof ControlInfo)) {\n\t\t\t\tconst validators = this.getValidators(option);\n\t\t\t\tconst asyncValidators = this.getAsyncValidators(option);\n\t\t\t\tconst control: FormControl = new FormControl(option.value, {\n\t\t\t\t\tvalidators: validators.length ? validators : undefined,\n\t\t\t\t\tasyncValidators: asyncValidators.length ? asyncValidators : undefined,\n\t\t\t\t});\n\t\t\t\tif (option.disabled) {\n\t\t\t\t\tcontrol.disable();\n\t\t\t\t}\n\t\t\t\tcontrols[option.key] = control;\n\t\t\t\t// control.updateValueAndValidity();\n\t\t\t\t// x.setControl(control); // !!!\n\t\t\t}\n\t\t});\n\t\tconst group: FormGroup = new FormGroup(controls);\n\t\tgroup.markAsDirty();\n\t\t// console.log(group);\n\t\toptions.forEach((option: ControlOption<any>) => {\n\t\t\tif (!(option instanceof ControlInfo)) {\n\t\t\t\tconst groupValidators = this.getGroupValidators(option, group);\n\t\t\t\tif (groupValidators.length) {\n\t\t\t\t\t// console.log(validators);\n\t\t\t\t\tgroup.controls[option.key].setValidators(groupValidators);\n\t\t\t\t\t// group.controls[option.key].updateValueAndValidity();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn group;\n\t}\n\n\tgetValidators(option: IControlOption<any>): ValidatorFn[] {\n\t\tconst validators: ValidatorFn[] = [];\n\t\tif (option.min) {\n\t\t\tvalidators.push(Validators.min(option.min));\n\t\t}\n\t\tif (option.max) {\n\t\t\tvalidators.push(Validators.max(option.max));\n\t\t}\n\t\tif (option.required) {\n\t\t\tvalidators.push(Validators.required);\n\t\t}\n\t\tif (option.requiredTrue) {\n\t\t\tvalidators.push(Validators.requiredTrue);\n\t\t}\n\t\tif (option.minlength) {\n\t\t\tvalidators.push(Validators.minLength(option.minlength));\n\t\t}\n\t\tif (option.maxlength) {\n\t\t\tvalidators.push(Validators.maxLength(option.maxlength));\n\t\t}\n\t\tif (option.pattern) {\n\t\t\tvalidators.push(Validators.pattern(option.pattern));\n\t\t}\n\t\tif (option.schema === 'email') {\n\t\t\tvalidators.push(Validators.email);\n\t\t}\n\t\treturn validators;\n\t}\n\n\tgetAsyncValidators(option: IControlOption<any>): AsyncValidatorFn[] {\n\t\tconst validators: AsyncValidatorFn[] = [];\n\t\tif (option.exists) {\n\t\t\tvalidators.push(existsValidator(option.exists));\n\t\t}\n\t\treturn validators;\n\t}\n\n\tgetGroupValidators(option: IControlOption<any>, group: FormGroup): ValidatorFn[] {\n\t\tconst validators: ValidatorFn[] = [];\n\t\tif (option.match) {\n\t\t\tvalidators.push(matchValidator(option.match, option.reverse, group));\n\t\t}\n\t\treturn validators;\n\t}\n\n\tresolve(option: IControlOption<any>): Type<ControlComponent> {\n\t\tlet component: Type<ControlComponent>;\n\t\tif (option) {\n\t\t\tcomponent = this.options.controls[option.schema].component || ControlComponent;\n\t\t} else {\n\t\t\tcomponent = ControlComponent;\n\t\t}\n\t\treturn component;\n\t}\n\n}\n","<ng-template #labelDef let-context>\r\n\t<label class=\"control__label control__label--{{context.option.schema}}\" [attr.for]=\"context.option.key\">{{ context.option.label | label }}</label>\r\n</ng-template>\r\n<ng-template #descriptionDef let-context>\r\n\t<div class=\"control__description control__description--{{context.option.schema}}\" *ngIf=\"context.option.description\">\r\n\t\t{{ context.option.description | label }}\r\n\t</div>\r\n</ng-template>\r\n<div class=\"control control--{{context.option.schema}}\" [ngClass]=\"context.classes\">\r\n\t<ng-container *ngTemplateOutlet=\"context.labelRef || labelDef; context: { $implicit: context }\"></ng-container>\r\n\t<ng-template #outlet></ng-template>\r\n</div>\r\n<ng-container *ngTemplateOutlet=\"context.descriptionRef || descriptionDef; context: { $implicit: context }\"></ng-container>\r\n","import { NgForOfContext } from '@angular/common';\nimport { AfterViewInit, Component, ComponentFactory, ComponentFactoryResolver, ComponentRef, ContentChild, Input, OnDestroy, OnInit, TemplateRef, Type, ViewChild, ViewContainerRef } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { IControlOption } from './control-option';\nimport { ControlComponent } from './control.component';\nimport { ControlService } from './control.service';\n\n@Component({\n\tselector: 'control-outlet',\n\ttemplateUrl: 'control-outlet.component.html',\n})\nexport class ControlOutletComponent implements OnInit, OnDestroy, AfterViewInit {\n\n\t@ContentChild('inputRef', { static: true }) inputRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ContentChild('errorRef', { static: true }) errorRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ContentChild('labelRef', { static: true }) labelRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ContentChild('descriptionRef', { static: true }) descriptionRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ViewChild('descriptionDef', { static: true }) descriptionDef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ViewChild('labelDef', { static: true }) labelDef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ViewChild('outlet', { read: ViewContainerRef, static: true }) viewContainerRef: ViewContainerRef;\n\n\t@Input() option: IControlOption<any>;\n\t@Input() form: FormGroup;\n\n\tprivate componentRef: ComponentRef<ControlComponent>;\n\n\tget context(): ControlOutletComponent {\n\t\treturn this;\n\t}\n\n\tget classes(): { [key: string]: boolean } {\n\t\t// console.log('control', this.option.key, this.form.controls);\n\t\treturn this.componentRef ? this.componentRef.instance.classes : null;\n\t}\n\n\tget control(): AbstractControl {\n\t\t// console.log('control', this.option.key, this.form.controls);\n\t\treturn this.componentRef ? this.componentRef.instance.control : null;\n\t}\n\n\tconstructor(\n\t\tprivate componentFactoryResolver: ComponentFactoryResolver,\n\t\tprivate controlService: ControlService,\n\t) { }\n\n\tngAfterViewInit() {\n\t}\n\n\tngOnInit() {\n\t\tconst component: Type<ControlComponent> = this.controlService.resolve(this.option);\n\t\tconst factory: ComponentFactory<ControlComponent> = this.componentFactoryResolver.resolveComponentFactory(component);\n\t\tthis.viewContainerRef.clear();\n\t\tconst componentRef = this.viewContainerRef.createComponent(factory);\n\t\tconst instance = componentRef.instance;\n\t\tinstance.option = this.option;\n\t\tinstance.form = this.form;\n\t\tinstance.inputRef = this.inputRef;\n\t\tinstance.errorRef = this.errorRef;\n\t\t// instance.labelRef = this.labelRef || this.labelDef;\n\t\tif (typeof instance['ControlInit'] === 'function') {\n\t\t\tinstance['ControlInit']();\n\t\t}\n\t\tthis.componentRef = componentRef;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.componentRef.destroy();\n\t}\n\n}\n","\nimport { Directive, ElementRef, forwardRef, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const CONTROL_VALUE_ACCESSOR: any = {\n\tprovide: NG_VALUE_ACCESSOR,\n\t// tslint:disable-next-line:no-use-before-declare\n\tuseExisting: forwardRef(() => ControlAccessor),\n\tmulti: true\n};\n\n@Directive({\n\tselector:\n\t\t'input[designr-accessor][formControlName],input[designr-accessor][formControl],input[designr-accessor][ngModel]',\n\t// tslint:disable-next-line:use-host-property-decorator\n\thost: {\n\t\t'(change)': 'onChange($event.target.value)',\n\t\t'(input)': 'onChange($event.target.value)',\n\t\t'(blur)': 'onTouched()'\n\t},\n\tproviders: [CONTROL_VALUE_ACCESSOR]\n})\n// tslint:disable-next-line:directive-class-suffix\nexport class ControlAccessor<T> implements ControlValueAccessor {\n\n\tconstructor(\n\t\tprotected renderer: Renderer2,\n\t\tprotected element: ElementRef\n\t) { }\n\n\tprotected formatValue(value: T): string {\n\t\treturn value.toString();\n\t}\n\n\tprotected parseValue(value: any): T {\n\t\treturn value && value !== '' ? value : null;\n\t}\n\n\tonChange = (value: any) => { };\n\tonTouched = () => { };\n\n\twriteValue(value: T): void {\n\t\tconst formattedValue = this.formatValue(value);\n\t\tthis.renderer.setProperty(this.element.nativeElement, 'value', formattedValue);\n\t}\n\n\tregisterOnChange(callback: (x: T | null) => void): void {\n\t\tthis.onChange = (value: any) => {\n\t\t\tconst parsedValue = this.parseValue(value);\n\t\t\tconst formattedValue = this.formatValue(parsedValue);\n\t\t\tthis.renderer.setProperty(this.element.nativeElement, 'value', formattedValue);\n\t\t\tcallback(parsedValue);\n\t\t};\n\t}\n\n\tregisterOnTouched(callback: () => void): void {\n\t\tthis.onTouched = callback;\n\t}\n\n\tsetDisabledState(isDisabled: boolean): void {\n\t\tthis.renderer.setProperty(this.element.nativeElement, 'disabled', isDisabled);\n\t}\n\n}\n","<ng-container *ngFor=\"let option of options\">\r\n\t<control-outlet class=\"fieldset__field fieldset__field--{{option.schema}}\" [option]=\"option\" [form]=\"form\">\r\n\t\t<!--\r\n\t\t<ng-template #errorRef let-context>\r\n\t\t\t<div class=\"control__error control__error--{{context.option.schema}}\">\r\n\t\t\t\tAAA\r\n\t\t\t</div>\r\n\t\t</ng-template>\r\n\t\t-->\r\n\t</control-outlet>\r\n</ng-container>\r\n","\nimport { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { DisposableComponent } from '@designr/core';\nimport { IControlOption } from './control-option';\n\n@Component({\n\tselector: 'controls-component',\n\ttemplateUrl: 'controls.component.html',\n})\nexport class ControlsComponent extends DisposableComponent {\n\t@Input() options: IControlOption<any>[];\n\t@Input() form: FormGroup;\n}\n","import { Directive, forwardRef, Input } from '@angular/core';\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { isObservable, Observable, of } from 'rxjs';\nimport { catchError, debounceTime, map, take } from 'rxjs/operators';\n\nconst DEBOUNCE_TIME: number = 250;\n\n@Directive({\n\tselector: '[exists][formControlName],[exists][formControl],[exists][ngModel]',\n\tproviders: [\n\t\t{ provide: NG_ASYNC_VALIDATORS, useExisting: forwardRef(() => ExistsValidator), multi: true },\n\t]\n})\nexport class ExistsValidator implements AsyncValidator {\n\n\t@Input() exists: Function;\n\n\texists$(value: string): Observable<ValidationErrors | null> {\n\t\tif (typeof this.exists === 'function') {\n\t\t\tconst oservableOrValue = this.exists(value);\n\t\t\tif (isObservable(oservableOrValue)) {\n\t\t\t\treturn oservableOrValue.pipe(\n\t\t\t\t\tmap(exists => {\n\t\t\t\t\t\treturn exists ? { exists: true } : null;\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn of(oservableOrValue ? { exists: true } : null);\n\t\t\t}\n\t\t} else {\n\t\t\treturn of(null);\n\t\t}\n\t}\n\n\tvalidate(control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n\t\treturn this.exists$(control.value).pipe(\n\t\t\tdebounceTime(DEBOUNCE_TIME),\n\t\t\tcatchError((response) => {\n\t\t\t\tconsole.log('ExistsValidator.debounced$.catchError', response);\n\t\t\t\treturn of(null);\n\t\t\t}),\n\t\t\ttake(1),\n\t\t);\n\t}\n\n}\n","import { Attribute, Directive, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n@Directive({\n\tselector: '[match][formControlName],[match][formControl],[match][ngModel]',\n\tproviders: [\n\t\t{ provide: NG_VALIDATORS, useExisting: forwardRef(() => MatchValidator), multi: true }\n\t]\n})\nexport class MatchValidator implements Validator {\n\n\tconstructor(\n\t\t@Attribute('match') public match: string,\n\t\t@Attribute('reverse') public reverse: string\n\t) { }\n\n\tprivate get isReverse() {\n\t\tif (!this.reverse) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.reverse === 'true' ? true : false;\n\t}\n\n\tvalidate(control: AbstractControl): { [key: string]: any } {\n\t\t// self value\n\t\tconst value = control.value;\n\t\t// control value\n\t\tconst input = control.root.get(this.match);\n\t\t// value not equal\n\t\tif (input && value !== input.value && !this.isReverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\t\t// value equal and reverse\n\t\tif (input && value === input.value && this.isReverse) {\n\t\t\tdelete input.errors['match'];\n\t\t\tif (!Object.keys(input.errors).length) {\n\t\t\t\tinput.setErrors(null);\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (input && value !== input.value && this.isReverse) {\n\t\t\tinput.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n\n}\n","import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n\tselector: '[ngModel][uppercase]'\n})\nexport class UppercaseDirective {\n\n\t@Output() ngModelChange: EventEmitter<any> = new EventEmitter();\n\tvalue: any;\n\n\t@HostListener('input', ['$event']) onInputChange($event) {\n\t\tthis.value = $event.target.value.toUpperCase();\n\t\tthis.ngModelChange.emit(this.value);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ControlInterface } from '../config/control.config';\nimport { ControlOption, IControlOption } from '../control/control-option';\nimport { ControlService } from '../control/control.service';\nimport { ControlGroup } from '../control/group/control-group';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FormService {\n\n\tconstructor(\n\t\tprotected controlService: ControlService,\n\t) { }\n\n\tgetOptions(data: IControlOption<any>[]): ControlOption<any>[] {\n\t\tconst options: ControlOption<any>[] = data.map((option: IControlOption<any>) => {\n\t\t\tconst control: ControlInterface = this.controlService.options.controls[option.schema];\n\t\t\tif (control) {\n\t\t\t\tconst optionModel: Type<ControlOption<any>> = control.model;\n\t\t\t\tconst optionModelInstance: ControlOption<any> = new optionModel(option);\n\t\t\t\tif (optionModelInstance instanceof ControlGroup) {\n\t\t\t\t\tconst options = this.getOptions(optionModelInstance.options);\n\t\t\t\t\toptions.sort((a, b) => a.order - b.order);\n\t\t\t\t\toptionModelInstance.options = options;\n\t\t\t\t}\n\t\t\t\treturn optionModelInstance;\n\t\t\t} else {\n\t\t\t\tconsole.error(`missing option for key ${option.schema}`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}).filter(x => x);\n\t\toptions.sort((a, b) => a.order - b.order);\n\t\treturn options;\n\t}\n\n\tgetFormGroup(options: ControlOption<any>[]): FormGroup {\n\t\treturn this.controlService.toFormGroup(options);\n\t}\n\n\tgetFormGroupFromOptions(options: IControlOption<any>[]): FormGroup {\n\t\treturn this.getFormGroup(this.getOptions(options));\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CoreModule } from '@designr/core';\r\nimport { ControlConfig, CONTROL_CONFIG, entryComponents } from './config/control.config';\r\nimport { ControlModuleComponent } from './control-module.component';\r\nimport { ControlOutletComponent } from './control/control-outlet.component';\r\nimport { ControlAccessor } from './control/control.accessor';\r\nimport { ControlComponent } from './control/control.component';\r\nimport { ControlService } from './control/control.service';\r\nimport { ControlsComponent } from './control/controls.component';\r\nimport { ExistsValidator } from './directives/exists.directive';\r\nimport { MatchValidator } from './directives/match.directive';\r\nimport { UppercaseDirective } from './directives/uppercase.directive';\r\nimport { FormService } from './form/form.service';\r\n\r\nconst services = [\r\n\tControlService,\r\n\tFormService,\r\n];\r\n\r\nconst components = [\r\n\tControlsComponent,\r\n\tControlModuleComponent,\r\n\tControlOutletComponent,\r\n\tControlComponent,\r\n\t...entryComponents,\r\n];\r\n\r\nconst directives = [\r\n\tUppercaseDirective,\r\n\tControlAccessor,\r\n];\r\n\r\nconst pipes = [\r\n];\r\n\r\nconst validators = [\r\n\tExistsValidator,\r\n\tMatchValidator,\r\n];\r\n\r\nconst guards = [\r\n];\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tCoreModule,\r\n\t],\r\n\tproviders: [\r\n\t\t...services,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\tdeclarations: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\tentryComponents: [\r\n\t\t...entryComponents,\r\n\t],\r\n\texports: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n})\r\n\r\nexport class ControlModule {\r\n\r\n\tconstructor(\r\n\t\t@Optional() @SkipSelf() parentModule: ControlModule\r\n\t) {\r\n\t\t/*\r\n\t\tif (parentModule) {\r\n\t\t\tthrow new Error('ControlModule is already loaded. Import it in the AppModule only');\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\r\n\tpublic static forRoot(\r\n\t\tconfig?: ControlConfig,\r\n\t): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: ControlModule,\r\n\t\t\tproviders: [{\r\n\t\t\t\tprovide: CONTROL_CONFIG, useValue: config\r\n\t\t\t}]\r\n\t\t};\r\n\t}\r\n\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i0.ɵɵelement","i0.ɵɵpropertyInterpolate","i0.ɵɵproperty","i0.ɵɵelementContainer","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵclassMapInterpolate1","i0.ɵɵattribute","i0.ɵɵlistener","i0.ɵɵtextInterpolate1","DEBOUNCE_TIME"],"mappings":"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"}