{"version":3,"file":"designr-control.js.map","sources":["ng://@designr/control/lib/control/base/control-base.ts","ng://@designr/control/lib/control/checkbox/control-checkbox.ts","ng://@designr/control/lib/control/base/control-base.component.ts","ng://@designr/control/lib/control/checkbox/control-checkbox.component.ts","ng://@designr/control/lib/control/email/control-email.ts","ng://@designr/control/lib/control/email/control-email.component.ts","ng://@designr/control/lib/control/markdown/control-markdown.ts","ng://@designr/control/lib/control/markdown/control-markdown.component.ts","ng://@designr/control/lib/control/number/control-number.ts","ng://@designr/control/lib/control/number/control-number.component.ts","ng://@designr/control/lib/control/password/control-password.ts","ng://@designr/control/lib/control/password/control-password.component.ts","ng://@designr/control/lib/control/radio/control-radio.ts","ng://@designr/control/lib/control/radio/control-radio.component.ts","ng://@designr/control/lib/control/select/control-select.ts","ng://@designr/control/lib/control/select/control-select.component.ts","ng://@designr/control/lib/control/text/control-text.ts","ng://@designr/control/lib/control/text/control-text.component.ts","ng://@designr/control/lib/control/textarea/control-textarea.ts","ng://@designr/control/lib/control/textarea/control-textarea.component.ts","ng://@designr/control/lib/config/control.config.ts","ng://@designr/control/lib/control-module.component.ts","ng://@designr/control/lib/directives/match.validator.ts","ng://@designr/control/lib/control/control.service.ts","ng://@designr/control/lib/control/control-outlet.component.ts","ng://@designr/control/lib/control/controls.component.ts","ng://@designr/control/lib/directives/exists.directive.ts","ng://@designr/control/lib/directives/match.directive.ts","ng://@designr/control/lib/directives/uppercase.directive.ts","ng://@designr/control/lib/form/form.service.ts","ng://@designr/control/lib/control.module.ts","ng://@designr/control/lib/control/control-value.accessor.ts"],"sourcesContent":["\nexport class ControlBaseOptions<T> {\n\tvalue?: T;\n\tkey?: string;\n\tlabel?: string;\n\tplaceholder?: string;\n\t// order\n\torder?: number;\n\tschema?: string;\n\ttype?: string;\n\t// validators\n\tmin?: number;\n\tmax?: number;\n\trequired?: boolean;\n\trequiredTrue?: boolean;\n\temail?: boolean;\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n\tmatch?: string;\n\t// options\n\treverse?: boolean;\n\toptions?: { key: string, value: string }[];\n\t// state\n\tdisabled?: boolean;\n\t// formatters\n\tstep?: number;\n\tformat?: string;\n}\n\nexport class ControlBase<T> {\n\t// export class ControlBase<T> implements ControlValueAccessor {\n\n\tstatic uid: number = 0;\n\n\treadonly component: string = 'ControlBaseComponent';\n\treadonly schema: string = 'base';\n\n\tprivate _originalValue: T;\n\tvalue: T;\n\tkey: string;\n\t//\n\tlabel: string;\n\tplaceholder: string;\n\t// order\n\torder: number;\n\ttype: string;\n\t// validators\n\tmin: number;\n\tmax: number;\n\trequired: boolean;\n\trequiredTrue: boolean;\n\temail: boolean;\n\tminlength: number;\n\tmaxlength: number;\n\tpattern: string | RegExp;\n\tmatch: string;\n\t// options\n\treverse: boolean;\n\toptions: { key: string, value: string }[];\n\t// state\n\tdisabled: boolean;\n\t// formatters\n\tstep: number;\n\tformat: string;\n\n\tconstructor(options: ControlBaseOptions<T> = {}) {\n\t\tthis._originalValue = options.value;\n\t\tthis.value = options.value;\n\t\tthis.key = options.key;\n\t\t//\n\t\tconst name = `${options.key || 'Control'} ${++ControlBase.uid}`;\n\t\tthis.label = options.label || name;\n\t\tthis.placeholder = options.placeholder || name;\n\t\t// order\n\t\tthis.order = options.order === undefined ? 1 : options.order;\n\t\tthis.schema = options.schema || 'text';\n\t\tthis.type = options.type || this.schema;\n\t\t// validators\n\t\tthis.min = options.min || null;\n\t\tthis.max = options.max || null;\n\t\tthis.required = !!options.required;\n\t\tthis.requiredTrue = !!options.requiredTrue;\n\t\tthis.email = !!options.email;\n\t\tthis.minlength = options.minlength || null;\n\t\tthis.maxlength = options.maxlength || null;\n\t\tthis.pattern = options.pattern || null;\n\t\tthis.match = options.match || null;\n\t\t// options\n\t\tthis.reverse = !!options.reverse;\n\t\tthis.options = options.options || [];\n\t\t// state\n\t\tthis.disabled = !!options.disabled;\n\t\t// formatters\n\t\tthis.step = options.step || null;\n\t\tthis.format = options.format || null;\n\t}\n\n}\n","import { ControlBase, ControlBaseOptions } from '../base/control-base';\n\nexport class ControlCheckbox extends ControlBase<boolean> {\n\n\treadonly component: string = 'ControlCheckboxComponent';\n\treadonly schema: string = 'checkbox';\n\n\tconstructor(options: ControlBaseOptions<boolean> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBase } from './control-base';\n\n@Component({\n\tselector: 'control-base-component',\n\ttemplateUrl: './control-base.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlBaseComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlBaseComponent implements ControlValueAccessor {\n\n\t@Input() control: ControlBase<any>;\n\t@Input() form: FormGroup;\n\n\tprotected element: any;\n\tprotected blurred: boolean;\n\tprotected innervalue: any;\n\n\treveal: { checked: boolean } = { checked: false };\n\n\tconstructor(\n\t\tprotected renderer: Renderer2\n\t) { }\n\n\tget controlRef(): AbstractControl {\n\t\t// console.log('controlRef', this.control.key, this.form.controls);\n\t\treturn this.form.controls[this.control.key];\n\t}\n\n\tget isValid() { return this.controlRef.valid; }\n\n\tprotected onChange = (value: any) => { };\n\n\tprotected onTouched = () => { };\n\n\tprotected formatValue(value: any): void {\n\t\t// console.log('ControlBaseComponent.formatValue', value);\n\t\tthis.renderer.setProperty(this.element, 'value', value);\n\t\t// console.log('ControlEditableComponent.writeValue', value);\n\t}\n\n\tprotected parseValue(value: any) {\n\t\t// console.log('ControlBaseComponent.parseValue', value);\n\t\tconst parsed = this.innervalue;\n\t\tthis.onChange(parsed);\n\t}\n\n\tonInput(event: Event): void {\n\t\tthis.element = event.target;\n\t\tthis.onChange(this.element.value);\n\t}\n\n\tonFocus(event: Event): void {\n\t\tthis.blurred = false;\n\t\tthis.element = event.target;\n\t\t// this.element.value = this.controlRef.value;\n\t\tthis.renderer.setProperty(this.element, 'value', this.controlRef.value);\n\t\t// console.log('ControlBaseComponent.onFocus', this.controlRef);\n\t}\n\n\tonBlur(event: Event): void {\n\t\tthis.blurred = true;\n\t\tthis.element = event.target;\n\t\t// this.element.value = this.controlRef.value;\n\t\tthis.renderer.setProperty(this.element, 'value', this.controlRef.value);\n\t\t// console.log('ControlBaseComponent.onBlur', this.controlRef);\n\t\t/*\n\t\tif (this.innervalue) {\n\t\t\tthis.control.patchValue(this.innervalue + ' H', { emitEvent: false });\n\t\t}\n\t\t*/\n\t}\n\n\tgetFormattedValue(): any {\n\t\t// console.log('ControlBaseComponent.getFormattedValue', this.controlRef.value);\n\t\treturn this.controlRef.value;\n\t}\n\n\t// ControlValueAccessor\n\n\twriteValue(value: any): void {\n\t\tthis.formatValue(value);\n\t}\n\n\tregisterOnChange(method: any): void {\n\t\tthis.onChange = method;\n\t\t// console.log('ControlEditableComponent.registerOnChange');\n\t}\n\n\tregisterOnTouched(method: any): void {\n\t\tthis.onTouched = method;\n\t\t// console.log('ControlEditableComponent.registerOnTouched');\n\t}\n\n\tsetDisabledState(isDisabled: boolean): void {\n\t\t// const node = this.textarea.nativeElement;\n\t\t/*\n\t\tif (isDisabled) {\n\t\t\tthis.renderer.addClass(this.element, 'disabled');\n\t\t} else {\n\t\t\tthis.renderer.removeClass(this.element, 'disabled');\n\t\t}\n\t\t// console.log('ControlEditableComponent.setDisabledState', isDisabled);\n\t\t*/\n\t}\n\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBaseComponent } from '../base/control-base.component';\nimport { ControlCheckbox } from './control-checkbox';\n\n@Component({\n\tselector: 'control-checkbox-component',\n\ttemplateUrl: './control-checkbox.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlCheckboxComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlCheckboxComponent extends ControlBaseComponent implements ControlValueAccessor {\n\n\t@Input() control: ControlCheckbox;\n\n\tconstructor(\n\t\tprotected renderer: Renderer2\n\t) {\n\t\tsuper(renderer);\n\t}\n\n}\n","import { ControlBase, ControlBaseOptions } from '../base/control-base';\n\nexport class ControlEmail extends ControlBase<string> {\n\n\treadonly component: string = 'ControlEmailComponent';\n\treadonly schema: string = 'email';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t\tthis.email = true;\n\t\tthis.pattern = options.pattern || '[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}';\n\t}\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBaseComponent } from '../base/control-base.component';\nimport { ControlEmail } from './control-email';\n\n@Component({\n\tselector: 'control-email-component',\n\ttemplateUrl: './control-email.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlEmailComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlEmailComponent extends ControlBaseComponent implements ControlValueAccessor {\n\n\t@Input() control: ControlEmail;\n\n\tconstructor(\n\t\tprotected renderer: Renderer2\n\t) {\n\t\tsuper(renderer);\n\t}\n\n}\n","import { ControlBase, ControlBaseOptions } from '../base/control-base';\n\nexport class ControlMarkdown extends ControlBase<string> {\n\n\treadonly component: string = 'ControlMarkdownComponent';\n\treadonly schema: string = 'markdown';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBaseComponent } from '../base/control-base.component';\nimport { ControlMarkdown } from './control-markdown';\n\n@Component({\n\tselector: 'control-markdown-component',\n\ttemplateUrl: './control-markdown.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlMarkdownComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlMarkdownComponent extends ControlBaseComponent implements ControlValueAccessor {\n\n\t@Input() control: ControlMarkdown;\n\n\tconstructor(\n\t\tprotected renderer: Renderer2\n\t) {\n\t\tsuper(renderer);\n\t}\n\n}\n","import { ControlBase, ControlBaseOptions } from '../base/control-base';\n\nexport class ControlNumber extends ControlBase<string> {\n\n\treadonly component: string = 'ControlNumberComponent';\n\treadonly schema: string = 'number';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBaseComponent } from '../base/control-base.component';\nimport { ControlNumber } from './control-number';\n\n@Component({\n\tselector: 'control-number-component',\n\ttemplateUrl: './control-number.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlNumberComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlNumberComponent extends ControlBaseComponent implements ControlValueAccessor {\n\n\t@Input() control: ControlNumber;\n\n\tconstructor(\n\t\tprotected renderer: Renderer2\n\t) {\n\t\tsuper(renderer);\n\t}\n\n}\n","import { ControlBase, ControlBaseOptions } from '../base/control-base';\n\nexport class ControlPassword extends ControlBase<string> {\n\n\treadonly component: string = 'ControlPasswordComponent';\n\treadonly schema: string = 'password';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBaseComponent } from '../base/control-base.component';\nimport { ControlPassword } from './control-password';\n\n@Component({\n\tselector: 'control-password-component',\n\ttemplateUrl: './control-password.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlPasswordComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlPasswordComponent extends ControlBaseComponent implements ControlValueAccessor {\n\n\t@Input() control: ControlPassword;\n\n\tconstructor(\n\t\tprotected renderer: Renderer2\n\t) {\n\t\tsuper(renderer);\n\t}\n\n}\n","import { ControlBase, ControlBaseOptions } from '../base/control-base';\n\nexport class ControlRadio extends ControlBase<boolean> {\n\n\treadonly component: string = 'ControlRadioComponent';\n\treadonly schema: string = 'radio';\n\n\tconstructor(options: ControlBaseOptions<boolean> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBaseComponent } from '../base/control-base.component';\nimport { ControlRadio } from './control-radio';\n\n@Component({\n\tselector: 'control-radio-component',\n\ttemplateUrl: './control-radio.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlRadioComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlRadioComponent extends ControlBaseComponent implements ControlValueAccessor {\n\n\t@Input() control: ControlRadio;\n\n\tconstructor(\n\t\tprotected renderer: Renderer2\n\t) {\n\t\tsuper(renderer);\n\t}\n\n}\n","import { ControlBase, ControlBaseOptions } from '../base/control-base';\n\nexport class ControlSelect extends ControlBase<string> {\n\n\treadonly component: string = 'ControlSelectComponent';\n\treadonly schema: string = 'select';\n\n\toptions: { key: string, value: string }[] = [];\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.options = options.options || [];\n\t}\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBaseComponent } from '../base/control-base.component';\nimport { ControlSelect } from './control-select';\n\n@Component({\n\tselector: 'control-select-component',\n\ttemplateUrl: './control-select.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlSelectComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlSelectComponent extends ControlBaseComponent implements ControlValueAccessor {\n\n\t@Input() control: ControlSelect;\n\n\tconstructor(\n\t\tprotected renderer: Renderer2\n\t) {\n\t\tsuper(renderer);\n\t}\n\n}\n","import { ControlBase, ControlBaseOptions } from '../base/control-base';\n\nexport class ControlText extends ControlBase<string> {\n\n\treadonly component: string = 'ControlTextComponent';\n\treadonly schema: string = 'text';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBaseComponent } from '../base/control-base.component';\nimport { ControlText } from './control-text';\n\n@Component({\n\tselector: 'control-text-component',\n\ttemplateUrl: './control-text.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlTextComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlTextComponent extends ControlBaseComponent implements ControlValueAccessor {\n\n\t@Input() control: ControlText;\n\n\tconstructor(\n\t\tprotected renderer: Renderer2\n\t) {\n\t\tsuper(renderer);\n\t}\n\n}\n","import { ControlBase, ControlBaseOptions } from '../base/control-base';\n\nexport class ControlTextarea extends ControlBase<string> {\n\n\treadonly component: string = 'ControlTextareaComponent';\n\treadonly schema: string = 'textarea';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBaseComponent } from '../base/control-base.component';\nimport { ControlTextarea } from './control-textarea';\n\n@Component({\n\tselector: 'control-textarea-component',\n\ttemplateUrl: './control-textarea.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlTextareaComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlTextareaComponent extends ControlBaseComponent implements ControlValueAccessor {\n\n\t@Input() control: ControlTextarea;\n\n\tconstructor(\n\t\tprotected renderer: Renderer2\n\t) {\n\t\tsuper(renderer);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\nimport { ControlCheckbox } from '../control/checkbox/control-checkbox';\nimport { ControlCheckboxComponent } from '../control/checkbox/control-checkbox.component';\nimport { Controls } from '../control/controls';\nimport { ControlEmail } from '../control/email/control-email';\nimport { ControlEmailComponent } from '../control/email/control-email.component';\nimport { ControlMarkdown } from '../control/markdown/control-markdown';\nimport { ControlMarkdownComponent } from '../control/markdown/control-markdown.component';\nimport { ControlNumber } from '../control/number/control-number';\nimport { ControlNumberComponent } from '../control/number/control-number.component';\nimport { ControlPassword } from '../control/password/control-password';\nimport { ControlPasswordComponent } from '../control/password/control-password.component';\nimport { ControlRadio } from '../control/radio/control-radio';\nimport { ControlRadioComponent } from '../control/radio/control-radio.component';\nimport { ControlSelect } from '../control/select/control-select';\nimport { ControlSelectComponent } from '../control/select/control-select.component';\nimport { ControlText } from '../control/text/control-text';\nimport { ControlTextComponent } from '../control/text/control-text.component';\nimport { ControlTextarea } from '../control/textarea/control-textarea';\nimport { ControlTextareaComponent } from '../control/textarea/control-textarea.component';\n\nexport const entryComponents = [\n\tControlCheckboxComponent,\n\tControlEmailComponent,\n\tControlMarkdownComponent,\n\tControlNumberComponent,\n\tControlPasswordComponent,\n\tControlRadioComponent,\n\tControlSelectComponent,\n\tControlTextComponent,\n\tControlTextareaComponent,\n];\n\nexport const BaseControls: Controls = {\n\t'checkbox': {\n\t\tcomponent: ControlCheckboxComponent,\n\t\tmodel: ControlCheckbox\n\t},\n\t'email': {\n\t\tcomponent: ControlEmailComponent,\n\t\tmodel: ControlEmail\n\t},\n\t'markdown': {\n\t\tcomponent: ControlMarkdownComponent,\n\t\tmodel: ControlMarkdown\n\t},\n\t'number': {\n\t\tcomponent: ControlNumberComponent,\n\t\tmodel: ControlNumber\n\t},\n\t'password': {\n\t\tcomponent: ControlPasswordComponent,\n\t\tmodel: ControlPassword\n\t},\n\t'radio': {\n\t\tcomponent: ControlRadioComponent,\n\t\tmodel: ControlRadio\n\t},\n\t'select': {\n\t\tcomponent: ControlSelectComponent,\n\t\tmodel: ControlSelect\n\t},\n\t'text': {\n\t\tcomponent: ControlTextComponent,\n\t\tmodel: ControlText\n\t},\n\t'textarea': {\n\t\tcomponent: ControlTextareaComponent,\n\t\tmodel: ControlTextarea\n\t},\n};\n\nexport class ControlConfig {\n\n\tcontrols?: Controls = {};\n\n\tconstructor(options?: ControlConfig) {\n\t\t// console.log('ControlConfig', options);\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t\tthis.controls = {\n\t\t\t\t...BaseControls,\n\t\t\t\t...(options.controls || {})\n\t\t\t};\n\t\t}\n\t}\n}\n\nexport const CONTROL_CONFIG = new InjectionToken<ControlConfig>('control.config');\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'control-module',\n\ttemplate: `<span class=\"control-module\">control {{version}}</span>`,\n\tstyles: []\n})\nexport class ControlModuleComponent implements OnInit {\n\n\tversion: string = '0.0.3';\n\n\tconstructor() { }\n\n\tngOnInit() {\n\t}\n\n}\n","import { FormControl, FormGroup, ValidatorFn } from '@angular/forms';\n\nexport function matchValidator(otherKey: string, reverse: boolean = false, group: FormGroup): ValidatorFn {\n\treturn (control: FormControl) => {\n\t\tconst otherControl = group.controls[otherKey];\n\n\t\tconst value = control.value;\n\n\t\t// value not equal\n\t\tif (otherControl && value !== otherControl.value && !reverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (otherControl && value === otherControl.value && reverse) {\n\t\t\tif (otherControl.errors) {\n\t\t\t\tdelete otherControl.errors['match'];\n\t\t\t\tif (!Object.keys(otherControl.errors).length) {\n\t\t\t\t\totherControl.setErrors(null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (otherControl && value !== otherControl.value && reverse) {\n\t\t\totherControl.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t};\n}\n\n/*\nexport function __matchValidator(key: string, otherKey: string, group: FormGroup): ValidatorFn {\n\treturn (control: FormControl) => {\n\n\t\t// const control = group.controls[key];\n\t\tconst otherControl = group.controls[otherKey];\n\n\t\t// console.log(control.touched, otherControl.touched);\n\n\t\tif (control.touched && otherControl.touched) {\n\t\t\tconst match = control.value === otherControl.value;\n\t\t\tif (!match && control.valid && otherControl.valid) {\n\t\t\t\tcontrol.setErrors({\n\t\t\t\t\tmatch: otherKey\n\t\t\t\t});\n\t\t\t\treturn {\n\t\t\t\t\tmatch: otherKey + ' != ' + key\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (match && control.hasError('match')) {\n\t\t\t\tcontrol.setErrors(null);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n}\n*/\n\n/*\nvalidate(control: AbstractControl): { [key: string]: any } {\n\t\t// self value\n\t\tconst value = control.value;\n\n\t\t// control value\n\t\tconst input = control.root.get(this.match);\n\n\t\t// value not equal\n\t\tif (input && value !== input.value && !this.isReverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (input && value === input.value && this.isReverse) {\n\t\t\tdelete input.errors['match'];\n\t\t\tif (!Object.keys(input.errors).length) {\n\t\t\t\tinput.setErrors(null);\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (input && value !== input.value && this.isReverse) {\n\t\t\tinput.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n*/\n/*\nstatic isValidString(control: FormControl) {\n\tif (!control.value || typeof control.value !== 'string') {\n\t\treturn {isNotValidString: true};\n\t}\n\treturn null;\n}\n\nstatic isValidName(control: FormControl) {\n\tif (control.valid && control.value !== 'John Doe') {\n\t\treturn {isNotValidName: true};\n\t}\n\treturn null;\n}\n*/\n","import { Inject, Injectable, Type } from '@angular/core';\nimport { FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { ControlConfig, CONTROL_CONFIG } from '../config/control.config';\nimport { matchValidator } from '../directives/match.validator';\nimport { ControlBase } from './base/control-base';\nimport { ControlBaseComponent } from './base/control-base.component';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ControlService {\n\n\tpublic options: ControlConfig;\n\n\tconstructor(\n\t\t@Inject(CONTROL_CONFIG) options: ControlConfig\n\t) {\n\t\t// console.log('ControlService', options);\n\t\toptions = options || {};\n\t\tthis.options = new ControlConfig(options);\n\t}\n\n\tresolve(control: ControlBase<any>): Type<ControlBaseComponent> {\n\t\tlet component: Type<ControlBaseComponent>;\n\t\tif (control) {\n\t\t\tcomponent = this.options.controls[control.schema].component || ControlBaseComponent;\n\t\t} else {\n\t\t\tcomponent = ControlBaseComponent;\n\t\t}\n\t\treturn component;\n\t}\n\n\tgetValidators(control: ControlBase<any>, group: FormGroup): ValidatorFn[] {\n\t\tconst validators: ValidatorFn[] = [];\n\t\tif (control.min) {\n\t\t\tvalidators.push(Validators.min(control.min));\n\t\t}\n\t\tif (control.max) {\n\t\t\tvalidators.push(Validators.max(control.max));\n\t\t}\n\t\tif (control.required) {\n\t\t\tvalidators.push(Validators.required);\n\t\t}\n\t\tif (control.requiredTrue) {\n\t\t\tvalidators.push(Validators.requiredTrue);\n\t\t}\n\t\tif (control.email) {\n\t\t\tvalidators.push(Validators.email);\n\t\t}\n\t\tif (control.minlength) {\n\t\t\tvalidators.push(Validators.minLength(control.minlength));\n\t\t}\n\t\tif (control.maxlength) {\n\t\t\tvalidators.push(Validators.maxLength(control.maxlength));\n\t\t}\n\t\tif (control.pattern) {\n\t\t\tvalidators.push(Validators.pattern(control.pattern));\n\t\t}\n\t\tif (control.match) {\n\t\t\tvalidators.push(matchValidator(control.match, control.reverse, group));\n\t\t}\n\t\t// console.log(control.key, validators);\n\t\treturn validators;\n\t}\n\n\ttoFormGroup(controls: ControlBase<any>[]): FormGroup {\n\t\tconst options: any = {};\n\t\tcontrols.forEach(x => {\n\t\t\t// group[x.key] = new FormControl(x.value, this.getValidators(x, group));\n\t\t\tconst formControl: FormControl = new FormControl(x.value);\n\t\t\tif (x.disabled) {\n\t\t\t\tformControl.disable();\n\t\t\t}\n\t\t\toptions[x.key] = formControl;\n\t\t\t// x.setControl(formControl); // !!!\n\t\t});\n\t\tconst group: FormGroup = new FormGroup(options);\n\t\t// console.log(group);\n\t\tcontrols.forEach(x => {\n\t\t\tconst validators = this.getValidators(x, group);\n\t\t\t// console.log(validators);\n\t\t\tgroup.controls[x.key].setValidators(validators);\n\t\t});\n\t\treturn group;\n\t}\n\n}\n","import { Component, ComponentFactory, ComponentFactoryResolver, ComponentRef, Input, OnDestroy, OnInit, Type, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { DisposableComponent } from '@designr/core';\nimport { ControlBase } from './base/control-base';\nimport { ControlBaseComponent } from './base/control-base.component';\nimport { ControlService } from './control.service';\n\n@Component({\n\tselector: 'control-outlet',\n\ttemplate: '<ng-template #outlet></ng-template>',\n})\nexport class ControlOutletComponent extends DisposableComponent implements OnInit, OnDestroy {\n\n\t@Input() control: ControlBase<any>;\n\t@Input() form: FormGroup;\n\n\t@ViewChild('outlet', { read: ViewContainerRef }) viewContainerRef: ViewContainerRef;\n\tprivate componentRef: ComponentRef<ControlBaseComponent>;\n\n\tconstructor(\n\t\tprivate componentFactoryResolver: ComponentFactoryResolver,\n\t\tprivate controlService: ControlService,\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tconst component: Type<ControlBaseComponent> = this.controlService.resolve(this.control);\n\t\tconst factory: ComponentFactory<ControlBaseComponent> = this.componentFactoryResolver.resolveComponentFactory(component);\n\t\tthis.viewContainerRef.clear();\n\t\tconst componentRef = this.viewContainerRef.createComponent(factory);\n\t\tconst instance = componentRef.instance;\n\t\tinstance.control = this.control;\n\t\tinstance.form = this.form;\n\t\tif (typeof instance['ControlInit'] === 'function') {\n\t\t\tinstance['ControlInit']();\n\t\t}\n\t\tthis.componentRef = componentRef;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.componentRef.destroy();\n\t}\n\n}\n","\nimport { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { DisposableComponent } from '@designr/core';\nimport { ControlBase } from './base/control-base';\n\n@Component({\n\tselector: 'controls-component',\n\ttemplate: `<ng-container *ngFor=\"let control of controls\">\n\t<control-outlet class=\"form-group\" [control]=\"control\" [form]=\"form\"></control-outlet>\n</ng-container>`,\n})\nexport class ControlsComponent extends DisposableComponent {\n\n\t@Input() controls: ControlBase<any>[];\n\t@Input() form: FormGroup;\n\n}\n","import { Directive, forwardRef, Input } from '@angular/core';\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { catchError, debounceTime, switchMap, take } from 'rxjs/operators';\n\nconst DEBOUNCE_TIME: number = 250;\n\n@Directive({\n\tselector: '[exists][formControlName],[exists][formControl],[exists][ngModel]',\n\tproviders: [\n\t\t{ provide: NG_ASYNC_VALIDATORS, useExisting: forwardRef(() => ExistsValidator), multi: true },\n\t]\n})\nexport class ExistsValidator implements AsyncValidator {\n\n\tprivate values = new BehaviorSubject<string>(null);\n\tset value(value: string) {\n\t\tif (value && value.trim() !== '') {\n\t\t\tthis.values.next(value);\n\t\t}\n\t}\n\tprivate debounced$: Observable<ValidationErrors | null> = this.values.pipe(\n\t\tdebounceTime(DEBOUNCE_TIME),\n\t\tswitchMap((value: string) => {\n\t\t\t// console.log('ExistsValidator.debounced$', value);\n\t\t\treturn this.exists$(value);\n\t\t}),\n\t\tcatchError((response) => {\n\t\t\tconsole.log('ExistsValidator.debounced$.catchError', response);\n\t\t\treturn of(null);\n\t\t}),\n\t\ttake(1),\n\t);\n\n\t@Input() exists: Function;\n\n\texists$(value: string): Observable<ValidationErrors | null> {\n\t\tif (typeof this.exists === 'function') {\n\t\t\t// console.log('ExistsValidator.exists$', value);\n\t\t\treturn this.exists(value).pipe(\n\t\t\t\tswitchMap(exists => {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\treturn of({\n\t\t\t\t\t\t\texists: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn of(null);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t} else {\n\t\t\treturn of(null);\n\t\t}\n\t}\n\n\tvalidate(control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n\t\tthis.value = control.value;\n\t\treturn this.debounced$;\n\t}\n\n}\n","import { Attribute, Directive, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n@Directive({\n\tselector: '[match][formControlName],[match][formControl],[match][ngModel]',\n\tproviders: [\n\t\t{ provide: NG_VALIDATORS, useExisting: forwardRef(() => MatchValidator), multi: true }\n\t]\n})\nexport class MatchValidator implements Validator {\n\n\tconstructor(\n\t\t@Attribute('match') public match: string,\n\t\t@Attribute('reverse') public reverse: string\n\t) { }\n\n\tprivate get isReverse() {\n\t\tif (!this.reverse) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.reverse === 'true' ? true : false;\n\t}\n\n\tvalidate(control: AbstractControl): { [key: string]: any } {\n\n\t\t// self value\n\t\tconst value = control.value;\n\n\t\t// control value\n\t\tconst input = control.root.get(this.match);\n\n\t\t// value not equal\n\t\tif (input && value !== input.value && !this.isReverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (input && value === input.value && this.isReverse) {\n\t\t\tdelete input.errors['match'];\n\t\t\tif (!Object.keys(input.errors).length) {\n\t\t\t\tinput.setErrors(null);\n\t\t\t}\n\t\t}\n\n\t\t// value not equal and reverse\n\t\tif (input && value !== input.value && this.isReverse) {\n\t\t\tinput.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n\n}\n","import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n\tselector: '[ngModel][uppercase]'\n})\nexport class UppercaseDirective {\n\n\t@Output() ngModelChange: EventEmitter<any> = new EventEmitter();\n\tvalue: any;\n\n\t@HostListener('input', ['$event']) onInputChange($event) {\n\t\tthis.value = $event.target.value.toUpperCase();\n\t\tthis.ngModelChange.emit(this.value);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ControlBase, ControlBaseOptions } from '../control/base/control-base';\nimport { ControlService } from '../control/control.service';\nimport { ControlInterface } from '../control/controls';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FormService {\n\n\tconstructor(\n\t\tprivate controlService: ControlService\n\t) { }\n\n\tgetControlsFromOptions(options: ControlBaseOptions<any>[]): ControlBase<any>[] {\n\t\tconst controls: ControlBase<any>[] = options.map(o => {\n\t\t\tconst control: ControlInterface = this.controlService.options.controls[o.schema];\n\t\t\tif (control) {\n\t\t\t\tconst controlBase: Type<ControlBase<any>> = control.model;\n\t\t\t\treturn new controlBase(o);\n\t\t\t} else {\n\t\t\t\tconsole.error(`missing control for key ${o.schema}`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}).filter(x => x);\n\t\tcontrols.sort((a, b) => a.order - b.order);\n\t\treturn controls;\n\t}\n\n\tgetGroupFromOptions(options: ControlBaseOptions<any>[]): FormGroup {\n\t\tconst controls: ControlBase<any>[] = this.getControlsFromOptions(options);\n\t\tconst group = this.controlService.toFormGroup(controls);\n\t\treturn group;\n\t}\n\n\tgetGroupFromControls(controls: ControlBase<any>[]): FormGroup {\n\t\tconst group = this.controlService.toFormGroup(controls);\n\t\treturn group;\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CoreModule } from '@designr/core';\r\nimport { ControlConfig, CONTROL_CONFIG, entryComponents } from './config/control.config';\r\nimport { ControlModuleComponent } from './control-module.component';\r\nimport { ControlBaseComponent } from './control/base/control-base.component';\r\nimport { ControlOutletComponent } from './control/control-outlet.component';\r\nimport { ControlService } from './control/control.service';\r\nimport { ControlsComponent } from './control/controls.component';\r\nimport { ExistsValidator } from './directives/exists.directive';\r\nimport { MatchValidator } from './directives/match.directive';\r\nimport { UppercaseDirective } from './directives/uppercase.directive';\r\nimport { FormService } from './form/form.service';\r\n\r\nconst services = [\r\n\tControlService,\r\n\tFormService,\r\n];\r\n\r\nconst components = [\r\n\tControlsComponent,\r\n\tControlModuleComponent,\r\n\tControlOutletComponent,\r\n\tControlBaseComponent,\r\n\t...entryComponents,\r\n];\r\n\r\nconst directives = [\r\n\tUppercaseDirective,\r\n];\r\n\r\nconst pipes = [\r\n];\r\n\r\nconst validators = [\r\n\tExistsValidator,\r\n\tMatchValidator,\r\n];\r\n\r\nconst guards = [\r\n];\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tCoreModule,\r\n\t],\r\n\tproviders: [\r\n\t\t...services,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\tdeclarations: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\tentryComponents: [\r\n\t\t...entryComponents,\r\n\t],\r\n\texports: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n})\r\n\r\nexport class ControlModule {\r\n\r\n\tconstructor(\r\n\t\t@Optional() @SkipSelf() parentModule: ControlModule\r\n\t) {\r\n\t\t/*\r\n\t\tif (parentModule) {\r\n\t\t\tthrow new Error('ControlModule is already loaded. Import it in the AppModule only');\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\r\n\tpublic static forRoot(\r\n\t\tconfig?: ControlConfig,\r\n\t): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: ControlModule,\r\n\t\t\tproviders: [{\r\n\t\t\t\tprovide: CONTROL_CONFIG, useValue: config\r\n\t\t\t}]\r\n\t\t};\r\n\t}\r\n\r\n}\r\n","\nimport { ControlValueAccessor } from '@angular/forms';\n\nexport class ValueAccessorBase<T> implements ControlValueAccessor {\n\tprivate innerValue: T;\n\n\tprivate changed = new Array<(value: T) => void>();\n\tprivate touched = new Array<() => void>();\n\n\tget value(): T {\n\t\treturn this.innerValue;\n\t}\n\n\tset value(value: T) {\n\t\tif (this.innerValue !== value) {\n\t\t\tthis.innerValue = value;\n\t\t\tthis.changed.forEach(f => f(value));\n\t\t}\n\t}\n\n\ttouch() {\n\t\tthis.touched.forEach(f => f());\n\t}\n\n\twriteValue(value: T) {\n\t\tthis.innerValue = value;\n\t}\n\n\tregisterOnChange(fn: (value: T) => void) {\n\t\tthis.changed.push(fn);\n\t}\n\n\tregisterOnTouched(fn: () => void) {\n\t\tthis.touched.push(fn);\n\t}\n}\n"],"names":[],"mappings":"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"}
