{"version":3,"file":"designr-control.js.map","sources":["ng://@designr/control/lib/control/control-option.ts","ng://@designr/control/lib/control/checkbox/control-checkbox.ts","ng://@designr/control/lib/control/control.component.ts","ng://@designr/control/lib/control/checkbox/control-checkbox.component.ts","ng://@designr/control/lib/control/email/control-email.ts","ng://@designr/control/lib/control/email/control-email.component.ts","ng://@designr/control/lib/control/group/control-group.ts","ng://@designr/control/lib/control/group/control-group.component.ts","ng://@designr/control/lib/control/info/control-info.ts","ng://@designr/control/lib/control/info/control-info.component.ts","ng://@designr/control/lib/control/markdown/control-markdown.ts","ng://@designr/control/lib/control/markdown/control-markdown.component.ts","ng://@designr/control/lib/control/number/control-number.ts","ng://@designr/control/lib/control/number/control-number.component.ts","ng://@designr/control/lib/control/password/control-password.ts","ng://@designr/control/lib/control/password/control-password.component.ts","ng://@designr/control/lib/control/radio/control-radio.ts","ng://@designr/control/lib/control/radio/control-radio.component.ts","ng://@designr/control/lib/control/select/control-select.ts","ng://@designr/control/lib/control/select/control-select.component.ts","ng://@designr/control/lib/control/text/control-text.ts","ng://@designr/control/lib/control/text/control-text.component.ts","ng://@designr/control/lib/control/textarea/control-textarea.ts","ng://@designr/control/lib/control/textarea/control-textarea.component.ts","ng://@designr/control/lib/config/control.config.ts","ng://@designr/control/lib/control-module.component.ts","ng://@designr/control/lib/directives/match.validator.ts","ng://@designr/control/lib/control/control.service.ts","ng://@designr/control/lib/control/control-outlet.component.ts","ng://@designr/control/lib/control/control.accessor.ts","ng://@designr/control/lib/control/controls.component.ts","ng://@designr/control/lib/directives/exists.directive.ts","ng://@designr/control/lib/directives/match.directive.ts","ng://@designr/control/lib/directives/uppercase.directive.ts","ng://@designr/control/lib/form/form.service.ts","ng://@designr/control/lib/control.module.ts"],"sourcesContent":["\n// let UNIQUE_ID: number = 0;\n\nexport interface IControlOption<T> {\n\tschema: string;\n\tvalue?: T;\n\torder?: number;\n\tkey?: string;\n\tlabel?: string;\n\tplaceholder?: string;\n\ttitle?: string;\n\tabstract?: string;\n\tdescription?: string;\n\thidden?: boolean;\n\tdisabled?: boolean;\n\trequired?: boolean;\n\texists?: Function;\n\tmatch?: string;\n\treverse?: boolean;\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n\t[x: string]: any;\n}\n\nexport class ControlOption<T> {\n\tschema: string = 'text';\n\tvalue?: T;\n\torder?: number;\n\tkey?: string;\n\tlabel?: string;\n\tplaceholder?: string;\n\ttitle?: string;\n\tabstract?: string;\n\tdescription?: string;\n\thidden?: boolean;\n\tdisabled?: boolean;\n\trequired?: boolean;\n\texists?: Function;\n\tmatch?: string;\n\treverse?: boolean;\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n\n\tconstructor(options?: IControlOption<T>) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t}\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlCheckbox extends ControlOption<boolean> {\n\tschema: string = 'checkbox';\n\trequiredTrue?: boolean;\n}\n","import { NgForOfContext } from '@angular/common';\nimport { Component, ContentChild, Input, TemplateRef } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { DisposableComponent } from '@designr/core';\nimport { IControlOption } from './control-option';\n\n@Component({\n\tselector: 'control-component',\n\ttemplateUrl: 'control.component.html',\n})\nexport class ControlComponent extends DisposableComponent {\n\n\t// @ContentChild('controlRef') controlRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t// @ContentChild('labelRef') labelRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ContentChild('inputRef') inputRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ContentChild('errorRef') errorRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\n\t@Input() option: IControlOption<any>;\n\t@Input() form: FormGroup;\n\n\tget context(): ControlComponent {\n\t\treturn this;\n\t}\n\n\tget control(): AbstractControl {\n\t\t// console.log('control', this.option.key, this.form.controls);\n\t\treturn this.form.controls[this.option.key];\n\t}\n\n\tget isValid() { return this.control.valid; }\n\n\tget classes(): {\n\t\tvalid?: boolean,\n\t\tinvalid?: boolean,\n\t\tdirty?: boolean,\n\t\tempty?: boolean,\n\t\trequired?: boolean,\n\t\tdisabled?: boolean\n\t} {\n\t\treturn {\n\t\t\tvalid: this.control.valid,\n\t\t\tinvalid: this.control.invalid,\n\t\t\tdirty: this.control.dirty,\n\t\t\tempty: (this.control.value == null),\n\t\t\trequired: Boolean(this.option.required || this.option.requiredTrue),\n\t\t\tdisabled: this.option.disabled,\n\t\t};\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlCheckbox } from './control-checkbox';\n\n@Component({\n\tselector: 'control-checkbox-component',\n\ttemplateUrl: 'control-checkbox.component.html',\n})\nexport class ControlCheckboxComponent extends ControlComponent {\n\n\t@Input() option: ControlCheckbox;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlEmail extends ControlOption<string> {\n\tschema: string = 'email';\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp = '[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}';\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlEmail } from './control-email';\n\n@Component({\n\tselector: 'control-email-component',\n\ttemplateUrl: 'control-email.component.html',\n})\nexport class ControlEmailComponent extends ControlComponent {\n\n\t@Input() option: ControlEmail;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlGroup extends ControlOption<any[]> {\n\tschema: string = 'group';\n\ttitle?: string;\n\tabstract?: string;\n\toptions?: ControlOption<any>[];\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlGroup } from './control-group';\n\n@Component({\n\tselector: 'control-group-component',\n\ttemplateUrl: 'control-group.component.html',\n})\nexport class ControlGroupComponent extends ControlComponent {\n\t@Input() option: ControlGroup;\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlInfo extends ControlOption<any[]> {\n\tschema: string = 'info';\n\ttitle?: string;\n\tabstract?: string;\n}\n","import { Component, Input } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { ControlComponent } from '../control.component';\nimport { ControlInfo } from './control-info';\n\n@Component({\n\tselector: 'control-info-component',\n\ttemplateUrl: 'control-info.component.html',\n})\nexport class ControlInfoComponent extends ControlComponent {\n\n\t@Input() option: ControlInfo;\n\n\tget control(): AbstractControl {\n\t\treturn null;\n\t}\n\n\tget isValid() {\n\t\treturn true;\n\t}\n\n\tget classes(): {\n\t\tvalid?: boolean,\n\t\tinvalid?: boolean,\n\t\tdirty?: boolean,\n\t\tempty?: boolean,\n\t\trequired?: boolean,\n\t\tdisabled?: boolean\n\t} {\n\t\treturn {};\n\t}\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlMarkdown extends ControlOption<string> {\n\tschema: string = 'markdown';\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlMarkdown } from './control-markdown';\n\n@Component({\n\tselector: 'control-markdown-component',\n\ttemplateUrl: 'control-markdown.component.html',\n})\nexport class ControlMarkdownComponent extends ControlComponent {\n\n\t@Input() option: ControlMarkdown;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlNumber extends ControlOption<string> {\n\tschema: string = 'number';\n\tmin?: number;\n\tmax?: number;\n\tstep?: number;\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlNumber } from './control-number';\n\n@Component({\n\tselector: 'control-number-component',\n\ttemplateUrl: 'control-number.component.html',\n})\nexport class ControlNumberComponent extends ControlComponent {\n\n\t@Input() option: ControlNumber;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlPassword extends ControlOption<string> {\n\tschema: string = 'password';\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlPassword } from './control-password';\n\n@Component({\n\tselector: 'control-password-component',\n\ttemplateUrl: 'control-password.component.html',\n})\nexport class ControlPasswordComponent extends ControlComponent {\n\n\treveal: { checked: boolean } = { checked: false };\n\n\t@Input() option: ControlPassword;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlRadio extends ControlOption<boolean> {\n\tschema: string = 'radio';\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlRadio } from './control-radio';\n\n@Component({\n\tselector: 'control-radio-component',\n\ttemplateUrl: 'control-radio.component.html',\n})\nexport class ControlRadioComponent extends ControlComponent {\n\n\t@Input() option: ControlRadio;\n\n}\n","import { Observable } from 'rxjs';\nimport { ControlOption } from '../control-option';\n\nexport interface ControlSelectOption {\n\tid: any;\n\tname: string;\n}\n\nexport class ControlSelect extends ControlOption<string> {\n\tschema: string = 'select';\n\toptions?: ControlSelectOption[] | Observable<ControlSelectOption[]>;\n\tasObject: boolean;\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { isObservable, Observable, of } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { ControlComponent } from '../control.component';\nimport { ControlSelect, ControlSelectOption } from './control-select';\n\n@Component({\n\tselector: 'control-select-component',\n\ttemplateUrl: 'control-select.component.html',\n})\nexport class ControlSelectComponent extends ControlComponent implements OnInit {\n\n\t@Input() option: ControlSelect;\n\toptions: ControlSelectOption[] = [];\n\tgetValue: Function = this.getValue_.bind(this);\n\tcompareWith: Function = this.compareWith_.bind(this);\n\n\tconstructor(\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.options$().pipe(\n\t\t\ttakeUntil(this.unsubscribe),\n\t\t\ttap(options => {\n\t\t\t\tif (this.option.asObject && this.control.value === null) {\n\t\t\t\t\tconst firstNullOptions = options.find(x => x.id === null);\n\t\t\t\t\tif (firstNullOptions !== undefined) {\n\t\t\t\t\t\tthis.control.setValue(firstNullOptions);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t).subscribe(options => this.options = options);\n\t}\n\n\toptions$(): Observable<ControlSelectOption[]> {\n\t\tconst options = this.option.options;\n\t\tif (options) {\n\t\t\tif (isObservable(options)) {\n\t\t\t\treturn options;\n\t\t\t} else if (Array.isArray(options)) {\n\t\t\t\treturn of(options);\n\t\t\t} else {\n\t\t\t\treturn of([]);\n\t\t\t}\n\t\t} else {\n\t\t\treturn of([]);\n\t\t}\n\t}\n\n\tgetValue_(item: ControlSelectOption): any {\n\t\treturn this.option.asObject ? item : item.id;\n\t}\n\n\tcompareWith_(a: ControlSelectOption | string | number, b: ControlSelectOption | string | number) {\n\t\tif (this.option.asObject) {\n\t\t\ta = a as ControlSelectOption;\n\t\t\tb = b as ControlSelectOption;\n\t\t\treturn (b && b.id !== undefined) ? a.id === b.id : a.id === b;\n\t\t} else {\n\t\t\treturn b ? a === b : a === null;\n\t\t}\n\t}\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlText extends ControlOption<string> {\n\tschema: string = 'text';\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlText } from './control-text';\n\n@Component({\n\tselector: 'control-text-component',\n\ttemplateUrl: 'control-text.component.html',\n})\nexport class ControlTextComponent extends ControlComponent {\n\n\t@Input() option: ControlText;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlTextarea extends ControlOption<string> {\n\tschema: string = 'textarea';\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlTextarea } from './control-textarea';\n\n@Component({\n\tselector: 'control-textarea-component',\n\ttemplateUrl: 'control-textarea.component.html',\n})\nexport class ControlTextareaComponent extends ControlComponent {\n\n\t@Input() option: ControlTextarea;\n\n}\n","import { InjectionToken, Type } from '@angular/core';\nimport { ControlCheckbox } from '../control/checkbox/control-checkbox';\nimport { ControlCheckboxComponent } from '../control/checkbox/control-checkbox.component';\nimport { IControlOption } from '../control/control-option';\nimport { ControlComponent } from '../control/control.component';\nimport { ControlEmail } from '../control/email/control-email';\nimport { ControlEmailComponent } from '../control/email/control-email.component';\nimport { ControlGroup } from '../control/group/control-group';\nimport { ControlGroupComponent } from '../control/group/control-group.component';\nimport { ControlInfo } from '../control/info/control-info';\nimport { ControlInfoComponent } from '../control/info/control-info.component';\nimport { ControlMarkdown } from '../control/markdown/control-markdown';\nimport { ControlMarkdownComponent } from '../control/markdown/control-markdown.component';\nimport { ControlNumber } from '../control/number/control-number';\nimport { ControlNumberComponent } from '../control/number/control-number.component';\nimport { ControlPassword } from '../control/password/control-password';\nimport { ControlPasswordComponent } from '../control/password/control-password.component';\nimport { ControlRadio } from '../control/radio/control-radio';\nimport { ControlRadioComponent } from '../control/radio/control-radio.component';\nimport { ControlSelect } from '../control/select/control-select';\nimport { ControlSelectComponent } from '../control/select/control-select.component';\nimport { ControlText } from '../control/text/control-text';\nimport { ControlTextComponent } from '../control/text/control-text.component';\nimport { ControlTextarea } from '../control/textarea/control-textarea';\nimport { ControlTextareaComponent } from '../control/textarea/control-textarea.component';\n\nexport interface ControlInterface {\n\tcomponent: Type<ControlComponent>;\n\tmodel: Type<IControlOption<any>>;\n}\n\nexport interface Controls { [key: string]: ControlInterface; }\n\nexport const entryComponents = [\n\tControlCheckboxComponent,\n\tControlEmailComponent,\n\tControlGroupComponent,\n\tControlInfoComponent,\n\tControlMarkdownComponent,\n\tControlNumberComponent,\n\tControlPasswordComponent,\n\tControlRadioComponent,\n\tControlSelectComponent,\n\tControlTextComponent,\n\tControlTextareaComponent,\n];\n\nexport const controls: Controls = {\n\t'checkbox': {\n\t\tcomponent: ControlCheckboxComponent,\n\t\tmodel: ControlCheckbox\n\t},\n\t'email': {\n\t\tcomponent: ControlEmailComponent,\n\t\tmodel: ControlEmail\n\t},\n\t'group': {\n\t\tcomponent: ControlGroupComponent,\n\t\tmodel: ControlGroup\n\t},\n\t'info': {\n\t\tcomponent: ControlInfoComponent,\n\t\tmodel: ControlInfo\n\t},\n\t'markdown': {\n\t\tcomponent: ControlMarkdownComponent,\n\t\tmodel: ControlMarkdown\n\t},\n\t'number': {\n\t\tcomponent: ControlNumberComponent,\n\t\tmodel: ControlNumber\n\t},\n\t'password': {\n\t\tcomponent: ControlPasswordComponent,\n\t\tmodel: ControlPassword\n\t},\n\t'radio': {\n\t\tcomponent: ControlRadioComponent,\n\t\tmodel: ControlRadio\n\t},\n\t'select': {\n\t\tcomponent: ControlSelectComponent,\n\t\tmodel: ControlSelect\n\t},\n\t'text': {\n\t\tcomponent: ControlTextComponent,\n\t\tmodel: ControlText\n\t},\n\t'textarea': {\n\t\tcomponent: ControlTextareaComponent,\n\t\tmodel: ControlTextarea\n\t},\n};\n\nexport class ControlConfig {\n\n\tcontrols?: Controls = {};\n\n\tconstructor(options?: ControlConfig) {\n\t\t// console.log('ControlConfig', options);\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t\tthis.controls = {\n\t\t\t\t...controls,\n\t\t\t\t...(options.controls || {})\n\t\t\t};\n\t\t}\n\t}\n}\n\nexport const CONTROL_CONFIG = new InjectionToken<ControlConfig>('control.config');\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'control-module',\n\ttemplate: `<span class=\"control-module\">control {{version}}</span>`,\n\tstyles: []\n})\nexport class ControlModuleComponent implements OnInit {\n\n\tversion: string = '0.0.9';\n\n\tconstructor() { }\n\n\tngOnInit() {\n\t}\n\n}\n","import { FormControl, FormGroup, ValidatorFn } from '@angular/forms';\n\nexport function matchValidator(otherKey: string, reverse: boolean = false, group: FormGroup): ValidatorFn {\n\treturn (control: FormControl) => {\n\t\tconst otherControl = group.controls[otherKey];\n\n\t\tconst value = control.value;\n\n\t\t// value not equal\n\t\tif (otherControl && value !== otherControl.value && !reverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (otherControl && value === otherControl.value && reverse) {\n\t\t\tif (otherControl.errors) {\n\t\t\t\tdelete otherControl.errors['match'];\n\t\t\t\tif (!Object.keys(otherControl.errors).length) {\n\t\t\t\t\totherControl.setErrors(null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (otherControl && value !== otherControl.value && reverse) {\n\t\t\totherControl.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t};\n}\n\n/*\nexport function __matchValidator(key: string, otherKey: string, group: FormGroup): ValidatorFn {\n\treturn (control: FormControl) => {\n\n\t\t// const control = group.controls[key];\n\t\tconst otherControl = group.controls[otherKey];\n\n\t\t// console.log(control.touched, otherControl.touched);\n\n\t\tif (control.touched && otherControl.touched) {\n\t\t\tconst match = control.value === otherControl.value;\n\t\t\tif (!match && control.valid && otherControl.valid) {\n\t\t\t\tcontrol.setErrors({\n\t\t\t\t\tmatch: otherKey\n\t\t\t\t});\n\t\t\t\treturn {\n\t\t\t\t\tmatch: otherKey + ' != ' + key\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (match && control.hasError('match')) {\n\t\t\t\tcontrol.setErrors(null);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n}\n*/\n\n/*\nvalidate(control: AbstractControl): { [key: string]: any } {\n\t\t// self value\n\t\tconst value = control.value;\n\n\t\t// control value\n\t\tconst input = control.root.get(this.match);\n\n\t\t// value not equal\n\t\tif (input && value !== input.value && !this.isReverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (input && value === input.value && this.isReverse) {\n\t\t\tdelete input.errors['match'];\n\t\t\tif (!Object.keys(input.errors).length) {\n\t\t\t\tinput.setErrors(null);\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (input && value !== input.value && this.isReverse) {\n\t\t\tinput.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n*/\n/*\nstatic isValidString(control: FormControl) {\n\tif (!control.value || typeof control.value !== 'string') {\n\t\treturn {isNotValidString: true};\n\t}\n\treturn null;\n}\n\nstatic isValidName(control: FormControl) {\n\tif (control.valid && control.value !== 'John Doe') {\n\t\treturn {isNotValidName: true};\n\t}\n\treturn null;\n}\n*/\n","import { Inject, Injectable, Type } from '@angular/core';\nimport { FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { ControlConfig, CONTROL_CONFIG } from '../config/control.config';\nimport { matchValidator } from '../directives/match.validator';\nimport { ControlOption, IControlOption } from './control-option';\nimport { ControlComponent } from './control.component';\nimport { ControlGroup } from './group/control-group';\nimport { ControlInfo } from './info/control-info';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ControlService {\n\n\tpublic options: ControlConfig;\n\n\tconstructor(\n\t\t@Inject(CONTROL_CONFIG) options: ControlConfig\n\t) {\n\t\t// console.log('ControlService', options);\n\t\tthis.options = new ControlConfig(options || {});\n\t}\n\n\ttoFormGroup(options: IControlOption<any>[]): FormGroup {\n\t\tconst controls: { [key: string]: FormControl | FormGroup } = {};\n\t\toptions.forEach((option: ControlOption<any>) => {\n\t\t\t// group[x.key] = new FormControl(x.value, this.getValidators(x, group));\n\t\t\tif (option instanceof ControlGroup) {\n\t\t\t\tconst group: FormGroup = this.toFormGroup(option.options);\n\t\t\t\tcontrols[option.key] = group;\n\t\t\t} else if (!(option instanceof ControlInfo)) {\n\t\t\t\tconst control: FormControl = new FormControl(option.value);\n\t\t\t\tif (option.disabled) {\n\t\t\t\t\tcontrol.disable();\n\t\t\t\t}\n\t\t\t\tcontrols[option.key] = control;\n\t\t\t\t// x.setControl(control); // !!!\n\t\t\t}\n\t\t});\n\t\tconst group: FormGroup = new FormGroup(controls);\n\t\t// console.log(group);\n\t\toptions.forEach((option: ControlOption<any>) => {\n\t\t\tif (!(option instanceof ControlInfo)) {\n\t\t\t\tconst validators = this.getValidators(option, group);\n\t\t\t\t// console.log(validators);\n\t\t\t\tgroup.controls[option.key].setValidators(validators);\n\t\t\t}\n\t\t});\n\t\treturn group;\n\t}\n\n\tgetValidators(options: IControlOption<any>, group: FormGroup): ValidatorFn[] {\n\t\tconst validators: ValidatorFn[] = [];\n\t\tif (options.min) {\n\t\t\tvalidators.push(Validators.min(options.min));\n\t\t}\n\t\tif (options.max) {\n\t\t\tvalidators.push(Validators.max(options.max));\n\t\t}\n\t\tif (options.required) {\n\t\t\tvalidators.push(Validators.required);\n\t\t}\n\t\tif (options.requiredTrue) {\n\t\t\tvalidators.push(Validators.requiredTrue);\n\t\t}\n\t\tif (options.minlength) {\n\t\t\tvalidators.push(Validators.minLength(options.minlength));\n\t\t}\n\t\tif (options.maxlength) {\n\t\t\tvalidators.push(Validators.maxLength(options.maxlength));\n\t\t}\n\t\tif (options.pattern) {\n\t\t\tvalidators.push(Validators.pattern(options.pattern));\n\t\t}\n\t\tif (options.match) {\n\t\t\tvalidators.push(matchValidator(options.match, options.reverse, group));\n\t\t}\n\t\tif (options.schema === 'email') {\n\t\t\tvalidators.push(Validators.email);\n\t\t}\n\t\t// console.log(options.key, validators);\n\t\treturn validators;\n\t}\n\n\tresolve(options: IControlOption<any>): Type<ControlComponent> {\n\t\tlet component: Type<ControlComponent>;\n\t\tif (options) {\n\t\t\tcomponent = this.options.controls[options.schema].component || ControlComponent;\n\t\t} else {\n\t\t\tcomponent = ControlComponent;\n\t\t}\n\t\treturn component;\n\t}\n\n}\n","import { NgForOfContext } from '@angular/common';\nimport { AfterViewInit, Component, ComponentFactory, ComponentFactoryResolver, ComponentRef, ContentChild, Input, OnDestroy, OnInit, TemplateRef, Type, ViewChild, ViewContainerRef } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { IControlOption } from './control-option';\nimport { ControlComponent } from './control.component';\nimport { ControlService } from './control.service';\n\n@Component({\n\tselector: 'control-outlet',\n\ttemplateUrl: 'control-outlet.component.html',\n})\nexport class ControlOutletComponent implements OnInit, OnDestroy, AfterViewInit {\n\n\t@ContentChild('inputRef') inputRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ContentChild('errorRef') errorRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ContentChild('labelRef') labelRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ContentChild('descriptionRef') descriptionRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ViewChild('descriptionDef') descriptionDef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ViewChild('labelDef') labelDef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ViewChild('outlet', { read: ViewContainerRef }) viewContainerRef: ViewContainerRef;\n\n\t@Input() option: IControlOption<any>;\n\t@Input() form: FormGroup;\n\n\tprivate componentRef: ComponentRef<ControlComponent>;\n\n\tget context(): ControlOutletComponent {\n\t\treturn this;\n\t}\n\n\tget classes(): { [key: string]: boolean } {\n\t\t// console.log('control', this.option.key, this.form.controls);\n\t\treturn this.componentRef ? this.componentRef.instance.classes : null;\n\t}\n\n\tget control(): AbstractControl {\n\t\t// console.log('control', this.option.key, this.form.controls);\n\t\treturn this.componentRef ? this.componentRef.instance.control : null;\n\t}\n\n\tconstructor(\n\t\tprivate componentFactoryResolver: ComponentFactoryResolver,\n\t\tprivate controlService: ControlService,\n\t) { }\n\n\tngAfterViewInit() {\n\t}\n\n\tngOnInit() {\n\t\tconst component: Type<ControlComponent> = this.controlService.resolve(this.option);\n\t\tconst factory: ComponentFactory<ControlComponent> = this.componentFactoryResolver.resolveComponentFactory(component);\n\t\tthis.viewContainerRef.clear();\n\t\tconst componentRef = this.viewContainerRef.createComponent(factory);\n\t\tconst instance = componentRef.instance;\n\t\tinstance.option = this.option;\n\t\tinstance.form = this.form;\n\t\tinstance.inputRef = this.inputRef;\n\t\tinstance.errorRef = this.errorRef;\n\t\t// instance.labelRef = this.labelRef || this.labelDef;\n\t\tif (typeof instance['ControlInit'] === 'function') {\n\t\t\tinstance['ControlInit']();\n\t\t}\n\t\tthis.componentRef = componentRef;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.componentRef.destroy();\n\t}\n\n}\n","\nimport { Directive, ElementRef, forwardRef, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const CONTROL_VALUE_ACCESSOR: any = {\n\tprovide: NG_VALUE_ACCESSOR,\n\t// tslint:disable-next-line:no-use-before-declare\n\tuseExisting: forwardRef(() => ControlAccessor),\n\tmulti: true\n};\n\n@Directive({\n\tselector:\n\t\t'input[designr-accessor][formControlName],input[designr-accessor][formControl],input[designr-accessor][ngModel]',\n\t// tslint:disable-next-line:use-host-property-decorator\n\thost: {\n\t\t'(change)': 'onChange($event.target.value)',\n\t\t'(input)': 'onChange($event.target.value)',\n\t\t'(blur)': 'onTouched()'\n\t},\n\tproviders: [CONTROL_VALUE_ACCESSOR]\n})\n// tslint:disable-next-line:directive-class-suffix\nexport class ControlAccessor<T> implements ControlValueAccessor {\n\n\tconstructor(\n\t\tprotected renderer: Renderer2,\n\t\tprotected element: ElementRef\n\t) { }\n\n\tprotected formatValue(value: T): string {\n\t\treturn value.toString();\n\t}\n\n\tprotected parseValue(value: any): T {\n\t\treturn value && value !== '' ? value : null;\n\t}\n\n\tonChange = (value: any) => { };\n\tonTouched = () => { };\n\n\twriteValue(value: T): void {\n\t\tconst formattedValue = this.formatValue(value);\n\t\tthis.renderer.setProperty(this.element.nativeElement, 'value', formattedValue);\n\t}\n\n\tregisterOnChange(callback: (x: T | null) => void): void {\n\t\tthis.onChange = (value: any) => {\n\t\t\tconst parsedValue = this.parseValue(value);\n\t\t\tconst formattedValue = this.formatValue(parsedValue);\n\t\t\tthis.renderer.setProperty(this.element.nativeElement, 'value', formattedValue);\n\t\t\tcallback(parsedValue);\n\t\t};\n\t}\n\n\tregisterOnTouched(callback: () => void): void {\n\t\tthis.onTouched = callback;\n\t}\n\n\tsetDisabledState(isDisabled: boolean): void {\n\t\tthis.renderer.setProperty(this.element.nativeElement, 'disabled', isDisabled);\n\t}\n\n}\n","\nimport { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { DisposableComponent } from '@designr/core';\nimport { IControlOption } from './control-option';\n\n@Component({\n\tselector: 'controls-component',\n\ttemplateUrl: 'controls.component.html',\n})\nexport class ControlsComponent extends DisposableComponent {\n\t@Input() options: IControlOption<any>[];\n\t@Input() form: FormGroup;\n}\n","import { Directive, forwardRef, Input } from '@angular/core';\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { BehaviorSubject, isObservable, Observable, of } from 'rxjs';\nimport { catchError, debounceTime, switchMap, take } from 'rxjs/operators';\n\nconst DEBOUNCE_TIME: number = 250;\n\n@Directive({\n\tselector: '[exists][formControlName],[exists][formControl],[exists][ngModel]',\n\tproviders: [\n\t\t{ provide: NG_ASYNC_VALIDATORS, useExisting: forwardRef(() => ExistsValidator), multi: true },\n\t]\n})\nexport class ExistsValidator implements AsyncValidator {\n\n\t@Input() exists: Function;\n\n\tprivate value$ = new BehaviorSubject<string>(null);\n\n\tprivate debounced$: Observable<ValidationErrors | null> = this.value$.pipe(\n\t\tdebounceTime(DEBOUNCE_TIME),\n\t\tswitchMap((value: string) => {\n\t\t\t// console.log('ExistsValidator.debounced$', value);\n\t\t\treturn this.exists$(value);\n\t\t}),\n\t\tcatchError((response) => {\n\t\t\tconsole.log('ExistsValidator.debounced$.catchError', response);\n\t\t\treturn of(null);\n\t\t}),\n\t\ttake(1),\n\t);\n\n\tset value(value: string) {\n\t\t// console.log('value', value);\n\t\tif (value && String(value).trim() !== '') {\n\t\t\tthis.value$.next(value);\n\t\t}\n\t}\n\n\texists$(value: string): Observable<ValidationErrors | null> {\n\t\tif (typeof this.exists === 'function') {\n\t\t\tconst exists = this.exists(value);\n\t\t\tif (isObservable(exists)) {\n\t\t\t\t// console.log('ExistsValidator.exists$', value);\n\t\t\t\treturn exists.pipe(\n\t\t\t\t\tswitchMap(exists => {\n\t\t\t\t\t\t// console.log('ExistsValidator.exists$', exists);\n\t\t\t\t\t\treturn of(this.getValidationError(Boolean(exists)));\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn of(this.getValidationError(Boolean(exists)));\n\t\t\t}\n\t\t} else {\n\t\t\treturn of(this.getValidationError(value ? true : false));\n\t\t}\n\t}\n\n\tgetValidationError(exists: boolean): ValidationErrors | null {\n\t\t// console.log('ExistsValidator.getValidationError', exists);\n\t\tif (exists) {\n\t\t\treturn {\n\t\t\t\texists: true,\n\t\t\t};\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tvalidate(control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n\t\tthis.value = control.value;\n\t\t// console.log('ExistsValidator.validate', control.value, control);\n\t\treturn this.debounced$;\n\t}\n\n}\n","import { Attribute, Directive, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n@Directive({\n\tselector: '[match][formControlName],[match][formControl],[match][ngModel]',\n\tproviders: [\n\t\t{ provide: NG_VALIDATORS, useExisting: forwardRef(() => MatchValidator), multi: true }\n\t]\n})\nexport class MatchValidator implements Validator {\n\n\tconstructor(\n\t\t@Attribute('match') public match: string,\n\t\t@Attribute('reverse') public reverse: string\n\t) { }\n\n\tprivate get isReverse() {\n\t\tif (!this.reverse) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.reverse === 'true' ? true : false;\n\t}\n\n\tvalidate(control: AbstractControl): { [key: string]: any } {\n\n\t\t// self value\n\t\tconst value = control.value;\n\n\t\t// control value\n\t\tconst input = control.root.get(this.match);\n\n\t\t// value not equal\n\t\tif (input && value !== input.value && !this.isReverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (input && value === input.value && this.isReverse) {\n\t\t\tdelete input.errors['match'];\n\t\t\tif (!Object.keys(input.errors).length) {\n\t\t\t\tinput.setErrors(null);\n\t\t\t}\n\t\t}\n\n\t\t// value not equal and reverse\n\t\tif (input && value !== input.value && this.isReverse) {\n\t\t\tinput.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n\n}\n","import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n\tselector: '[ngModel][uppercase]'\n})\nexport class UppercaseDirective {\n\n\t@Output() ngModelChange: EventEmitter<any> = new EventEmitter();\n\tvalue: any;\n\n\t@HostListener('input', ['$event']) onInputChange($event) {\n\t\tthis.value = $event.target.value.toUpperCase();\n\t\tthis.ngModelChange.emit(this.value);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ControlInterface } from '../config/control.config';\nimport { ControlOption, IControlOption } from '../control/control-option';\nimport { ControlService } from '../control/control.service';\nimport { ControlGroup } from '../control/group/control-group';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FormService {\n\n\tconstructor(\n\t\tprivate controlService: ControlService\n\t) { }\n\n\tgetOptions(data: IControlOption<any>[]): ControlOption<any>[] {\n\t\tconst options: ControlOption<any>[] = data.map((option: IControlOption<any>) => {\n\t\t\tconst control: ControlInterface = this.controlService.options.controls[option.schema];\n\t\t\tif (control) {\n\t\t\t\tconst optionModel: Type<ControlOption<any>> = control.model;\n\t\t\t\tconst optionModelInstance: ControlOption<any> = new optionModel(option);\n\t\t\t\tif (optionModelInstance instanceof ControlGroup) {\n\t\t\t\t\tconst options = this.getOptions(optionModelInstance.options);\n\t\t\t\t\toptions.sort((a, b) => a.order - b.order);\n\t\t\t\t\toptionModelInstance.options = options;\n\t\t\t\t}\n\t\t\t\treturn optionModelInstance;\n\t\t\t} else {\n\t\t\t\tconsole.error(`missing option for key ${option.schema}`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}).filter(x => x);\n\t\toptions.sort((a, b) => a.order - b.order);\n\t\treturn options;\n\t}\n\n\tgetFormGroup(options: ControlOption<any>[]): FormGroup {\n\t\treturn this.controlService.toFormGroup(options);\n\t}\n\n\tgetFormGroupFromOptions(options: IControlOption<any>[]): FormGroup {\n\t\treturn this.getFormGroup(this.getOptions(options));\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CoreModule } from '@designr/core';\r\nimport { ControlConfig, CONTROL_CONFIG, entryComponents } from './config/control.config';\r\nimport { ControlModuleComponent } from './control-module.component';\r\nimport { ControlOutletComponent } from './control/control-outlet.component';\r\nimport { ControlAccessor } from './control/control.accessor';\r\nimport { ControlComponent } from './control/control.component';\r\nimport { ControlService } from './control/control.service';\r\nimport { ControlsComponent } from './control/controls.component';\r\nimport { ExistsValidator } from './directives/exists.directive';\r\nimport { MatchValidator } from './directives/match.directive';\r\nimport { UppercaseDirective } from './directives/uppercase.directive';\r\nimport { FormService } from './form/form.service';\r\n\r\nconst services = [\r\n\tControlService,\r\n\tFormService,\r\n];\r\n\r\nconst components = [\r\n\tControlsComponent,\r\n\tControlModuleComponent,\r\n\tControlOutletComponent,\r\n\tControlComponent,\r\n\t...entryComponents,\r\n];\r\n\r\nconst directives = [\r\n\tUppercaseDirective,\r\n\tControlAccessor,\r\n];\r\n\r\nconst pipes = [\r\n];\r\n\r\nconst validators = [\r\n\tExistsValidator,\r\n\tMatchValidator,\r\n];\r\n\r\nconst guards = [\r\n];\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tCoreModule,\r\n\t],\r\n\tproviders: [\r\n\t\t...services,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\tdeclarations: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\tentryComponents: [\r\n\t\t...entryComponents,\r\n\t],\r\n\texports: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n})\r\n\r\nexport class ControlModule {\r\n\r\n\tconstructor(\r\n\t\t@Optional() @SkipSelf() parentModule: ControlModule\r\n\t) {\r\n\t\t/*\r\n\t\tif (parentModule) {\r\n\t\t\tthrow new Error('ControlModule is already loaded. Import it in the AppModule only');\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\r\n\tpublic static forRoot(\r\n\t\tconfig?: ControlConfig,\r\n\t): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: ControlModule,\r\n\t\t\tproviders: [{\r\n\t\t\t\tprovide: CONTROL_CONFIG, useValue: config\r\n\t\t\t}]\r\n\t\t};\r\n\t}\r\n\r\n}\r\n"],"names":["tslib_1.__extends","controls"],"mappings":"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"}
