!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/common"),require("@angular/common/http"),require("@designr/core"),require("rxjs"),require("rxjs/operators"),require("@angular/forms"),require("@angular/core")):"function"==typeof define&&define.amd?define("@designr/control",["exports","@angular/common","@angular/common/http","@designr/core","rxjs","rxjs/operators","@angular/forms","@angular/core"],n):n((t.designr=t.designr||{},t.designr.control={}),t.ng.common,t.ng.common.http,t.core,t.rxjs,t.rxjs.operators,t.ng.forms,t.ng.core)}(this,function(t,e,o,r,i,l,c,a){"use strict";var p=function(t,n){return(p=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)n.hasOwnProperty(e)&&(t[e]=n[e])})(t,n)};function s(t,n){function e(){this.constructor=t}p(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}var n=function(){return(n=Object.assign||function(t){for(var n,e=1,o=arguments.length;e<o;e++)for(var r in n=arguments[e])Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r]);return t}).apply(this,arguments)};function u(t,n){var e="function"==typeof Symbol&&t[Symbol.iterator];if(!e)return t;var o,r,i=e.call(t),l=[];try{for(;(void 0===n||0<n--)&&!(o=i.next()).done;)l.push(o.value)}catch(c){r={error:c}}finally{try{o&&!o.done&&(e=i["return"])&&e.call(i)}finally{if(r)throw r.error}}return l}function m(){for(var t=[],n=0;n<arguments.length;n++)t=t.concat(u(arguments[n]));return t}var f=function it(t){this.schema="text",t&&Object.assign(this,t)},d=function(n){function t(){var t=null!==n&&n.apply(this,arguments)||this;return t.schema="checkbox",t}return s(t,n),t}(f),g=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return s(n,t),Object.defineProperty(n.prototype,"context",{get:function(){return this},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"control",{get:function(){return this.form.controls[this.option.key]},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"isValid",{get:function(){return this.control.valid},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"classes",{get:function(){return{valid:this.control.valid,invalid:this.control.invalid,dirty:this.control.dirty,empty:Boolean(null==this.control.value),required:Boolean(this.option.required||this.option.requiredTrue),disabled:this.option.disabled}},enumerable:!0,configurable:!0}),n.decorators=[{type:a.Component,args:[{selector:"control-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<input class="control__input" placeholder="{{ context.option.placeholder | label }}" [id]="context.option.key" [formControlName]="context.option.key" type="text">\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="control__error" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.pattern">{{ \'errors.pattern\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.match">{{ \'errors.match\' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],n.propDecorators={inputRef:[{type:a.ContentChild,args:["inputRef"]}],errorRef:[{type:a.ContentChild,args:["errorRef"]}],option:[{type:a.Input}],form:[{type:a.Input}]},n}(r.DisposableComponent),x=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return s(n,t),n.decorators=[{type:a.Component,args:[{selector:"control-checkbox-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<label class="control__group control__group--checkbox">\r\n\t\t\t<input class="control__checkbox" type="checkbox" [id]="context.option.key" [formControlName]="context.option.key">\r\n\t\t\t<span class="control__info">{{ context.option.info | label }}</span>\r\n\t\t</label>\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="control__error control__error--checkbox" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.requiredTrue">{{ \'errors.required\' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],n.propDecorators={option:[{type:a.Input}]},n}(g),h=function(n){function t(){var t=null!==n&&n.apply(this,arguments)||this;return t.schema="email",t.pattern="[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}",t}return s(t,n),t}(f),v=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return s(n,t),n.decorators=[{type:a.Component,args:[{selector:"control-email-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<input class="control__input control__input--email" placeholder="{{ context.option.placeholder | label }}" [id]="context.option.key" [formControlName]="context.option.key" type="email">\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="control__error control__error--email" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.email">{{ \'errors.email\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.pattern">{{ \'errors.pattern\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.match">{{ \'errors.match\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.exists">{{ \'errors.exists\' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],n.propDecorators={option:[{type:a.Input}]},n}(g),y=function(n){function t(){var t=null!==n&&n.apply(this,arguments)||this;return t.schema="group",t}return s(t,n),t}(f),b=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return s(n,t),n.decorators=[{type:a.Component,args:[{selector:"control-group-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<div class="control__title" *ngIf="context.option.title">{{ context.option.title | label }}</div>\r\n\t\t<div class="control__abstract" *ngIf="context.option.abstract">{{ context.option.abstract | label }}</div>\r\n\t\t<div class="fieldset" *ngIf="context.option.options.length">\r\n\t\t\t<ng-container *ngFor="let option of context.option.options">\r\n\t\t\t\t<control-outlet class="fieldset__field fieldset__field--{{option.schema}}" [option]="option" [form]="context.control"></control-outlet>\r\n\t\t\t</ng-container>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context></ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],n.propDecorators={option:[{type:a.Input}]},n}(g),_=function(n){function t(){var t=null!==n&&n.apply(this,arguments)||this;return t.schema="info",t}return s(t,n),t}(f),C=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return s(n,t),Object.defineProperty(n.prototype,"control",{get:function(){return null},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"isValid",{get:function(){return!0},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"classes",{get:function(){return{}},enumerable:!0,configurable:!0}),n.decorators=[{type:a.Component,args:[{selector:"control-info-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<div class="control__title" *ngIf="context.option.title">{{ context.option.title | label }}</div>\r\n\t\t<div class="control__abstract" *ngIf="context.option.abstract">{{ context.option.abstract | label }}</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],n.propDecorators={option:[{type:a.Input}]},n}(g),I=function(n){function t(){var t=null!==n&&n.apply(this,arguments)||this;return t.schema="markdown",t}return s(t,n),t}(f),D=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return s(n,t),n.decorators=[{type:a.Component,args:[{selector:"control-markdown-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<textarea class="control__input control__input--markdown" placeholder="{{ context.option.placeholder | label }}" [id]="context.option.key" [formControlName]="context.option.key" rows="4"></textarea>\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="control__error control__error--markdown" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],n.propDecorators={option:[{type:a.Input}]},n}(g),O=function(n){function t(){var t=null!==n&&n.apply(this,arguments)||this;return t.schema="number",t}return s(t,n),t}(f),R=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return s(n,t),n.decorators=[{type:a.Component,args:[{selector:"control-number-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<input class="control__input control__input--number" placeholder="{{ context.option.placeholder | label }}" [id]="context.option.key" [formControlName]="context.option.key" type="number" [attr.step]="context.option.step">\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="control__error control__error--number" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.min">{{ \'errors.min\' | label : null : { min: context.option.min } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.max">{{ \'errors.max\' | label : null : { max: context.option.max } }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],n.propDecorators={option:[{type:a.Input}]},n}(g),k=function(n){function t(){var t=null!==n&&n.apply(this,arguments)||this;return t.schema="password",t}return s(t,n),t}(f),w=function(n){function t(){var t=null!==n&&n.apply(this,arguments)||this;return t.reveal={checked:!1},t}return s(t,n),t.decorators=[{type:a.Component,args:[{selector:"control-password-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<div class="control__group control__group--password">\r\n\t\t\t<input class="control__input control__input--password" placeholder="{{ context.option.placeholder | label }}" [formControlName]="context.option.key" type="password" #password>\r\n\t\t\t<div class="control__addon">\r\n\t\t\t\t<input class="control__checkbox" type="checkbox" [attr.aria-label]="context.option.label | label" (input)="password.setAttribute(\'type\', reveal.checked ? \'text\' : \'password\')" #reveal>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="control__error control__error--password" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.pattern">{{ \'errors.pattern\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.match">{{ \'errors.match\' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],t.propDecorators={option:[{type:a.Input}]},t}(g),V=function(n){function t(){var t=null!==n&&n.apply(this,arguments)||this;return t.schema="radio",t}return s(t,n),t}(f),T=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return s(n,t),n.decorators=[{type:a.Component,args:[{selector:"control-radio-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<label class="control__group control__group--radio">\r\n\t\t\t<input class="control__radio" type="radio" [id]="context.option.key" [formControlName]="context.option.key">\r\n\t\t\t<span class="control__info">{{ context.option.info | label }}</span>\r\n\t\t</label>\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="control__error control__error--radio" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],n.propDecorators={option:[{type:a.Input}]},n}(g),j=function(n){function t(){var t=null!==n&&n.apply(this,arguments)||this;return t.schema="select",t}return s(t,n),t}(f),q=function(n){function t(){var t=null!==n&&n.apply(this,arguments)||this;return t.options=[],t.getValue=t.getValue_.bind(t),t.compareWith=t.compareWith_.bind(t),t}return s(t,n),t.prototype.ngOnInit=function(){var e=this;this.options$().pipe(l.takeUntil(this.unsubscribe),l.tap(function(t){if(e.option.asObject&&null===e.control.value){var n=t.find(function(t){return null===t.id});n!==undefined&&e.control.setValue(n)}})).subscribe(function(t){return e.options=t})},t.prototype.options$=function(){var t=this.option.options;return t?i.isObservable(t)?t:Array.isArray(t)?i.of(t):i.of([]):i.of([])},t.prototype.getValue_=function(t){return this.option.asObject?t:t.id},t.prototype.compareWith_=function(t,n){return this.option.asObject?(t=t,(n=n)&&n.id!==undefined?t.id===n.id:t.id===n):n?t===n:null===t},t.decorators=[{type:a.Component,args:[{selector:"control-select-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<div class="control__input control__input--select">\r\n\t\t\t<select [id]="context.option.key" [formControlName]="context.option.key" [compareWith]="context.compareWith">\r\n\t\t\t\t<option *ngFor="let item of options" [ngValue]="context.getValue(item)">{{item?.name | label}}</option>\r\n\t\t\t</select>\r\n\t\t\t\x3c!-- control__accessory --\x3e\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="control__error control__error--select" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],t.propDecorators={option:[{type:a.Input}]},t}(g),$=function(n){function t(){var t=null!==n&&n.apply(this,arguments)||this;return t.schema="text",t}return s(t,n),t}(f),G=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return s(n,t),n.decorators=[{type:a.Component,args:[{selector:"control-text-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<input class="control__input control__input--text" placeholder="{{ context.option.placeholder | label }}" [id]="context.option.key" [formControlName]="context.option.key" type="text">\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="control__error control__error--text" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.pattern">{{ \'errors.pattern\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.match">{{ \'errors.match\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.exists">{{ \'errors.exists\' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],n.propDecorators={option:[{type:a.Input}]},n}(g),P=function(n){function t(){var t=null!==n&&n.apply(this,arguments)||this;return t.schema="textarea",t}return s(t,n),t}(f),E=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return s(n,t),n.decorators=[{type:a.Component,args:[{selector:"control-textarea-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<textarea class="control__input control__input--textarea" placeholder="{{ context.option.placeholder | label }}" [id]="context.option.key" [formControlName]="context.option.key" rows="4"></textarea>\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="control__error control__error--textarea" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],n.propDecorators={option:[{type:a.Input}]},n}(g),A=[x,v,b,C,D,R,w,T,q,G,E],N={checkbox:{component:x,model:d},email:{component:v,model:h},group:{component:b,model:y},info:{component:C,model:_},markdown:{component:D,model:I},number:{component:R,model:O},password:{component:w,model:k},radio:{component:T,model:V},select:{component:q,model:j},text:{component:G,model:$},textarea:{component:E,model:P}},S=function lt(t){this.controls={},t&&(Object.assign(this,t),this.controls=n({},N,t.controls||{}))},F=new a.InjectionToken("control.config"),M=function(){function t(){this.version="0.0.12"}return t.prototype.ngOnInit=function(){},t.decorators=[{type:a.Component,args:[{selector:"control-module",template:'<span class="control-module">control {{version}}</span>'}]}],t.ctorParameters=function(){return[]},t}();function L(n){return function(t){return function o(t,n){if("function"!=typeof n)return i.of(null);var e=n(t);return i.isObservable(e)?e.pipe(l.map(function(t){return t?{exists:!0}:null})):i.of(e?{exists:!0}:null)}(t.value,n).pipe(l.debounceTime(250),l.catchError(function(t){return console.log("existsValidator.catchError",t),i.of(null)}),l.take(1))}}function W(o,r,i){return void 0===r&&(r=!1),function(t){var n=i.controls[o],e=t.value;return n&&e!==n.value&&!r?{match:!0}:(n&&e===n.value&&r&&n.errors&&(delete n.errors.match,Object.keys(n.errors).length||n.setErrors(null)),n&&e!==n.value&&r&&n.setErrors({match:!0}),null)}}var U=function(){function t(t){this.options=new S(t||{})}return t.prototype.toFormGroup=function(t){var i=this,l={};t.forEach(function(t){if(t instanceof y){var n=i.toFormGroup(t.options);l[t.key]=n}else if(!(t instanceof _)){var e=i.getValidators(t),o=i.getAsyncValidators(t),r=new c.FormControl(t.value,{validators:e.length?e:undefined,asyncValidators:o.length?o:undefined});t.disabled&&r.disable(),l[t.key]=r}});var e=new c.FormGroup(l);return e.markAsDirty(),t.forEach(function(t){if(!(t instanceof _)){var n=i.getGroupValidators(t,e);n.length&&e.controls[t.key].setValidators(n)}}),e},t.prototype.getValidators=function(t){var n=[];return t.min&&n.push(c.Validators.min(t.min)),t.max&&n.push(c.Validators.max(t.max)),t.required&&n.push(c.Validators.required),t.requiredTrue&&n.push(c.Validators.requiredTrue),t.minlength&&n.push(c.Validators.minLength(t.minlength)),t.maxlength&&n.push(c.Validators.maxLength(t.maxlength)),t.pattern&&n.push(c.Validators.pattern(t.pattern)),"email"===t.schema&&n.push(c.Validators.email),n},t.prototype.getAsyncValidators=function(t){var n=[];return t.exists&&n.push(L(t.exists)),n},t.prototype.getGroupValidators=function(t,n){var e=[];return t.match&&e.push(W(t.match,t.reverse,n)),e},t.prototype.resolve=function(t){return t&&this.options.controls[t.schema].component||g},t.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:S,decorators:[{type:a.Inject,args:[F]}]}]},t.ngInjectableDef=a.defineInjectable({factory:function(){return new t(a.inject(F))},token:t,providedIn:"root"}),t}(),z=function(){function t(t,n){this.componentFactoryResolver=t,this.controlService=n}return Object.defineProperty(t.prototype,"context",{get:function(){return this},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"classes",{get:function(){return this.componentRef?this.componentRef.instance.classes:null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"control",{get:function(){return this.componentRef?this.componentRef.instance.control:null},enumerable:!0,configurable:!0}),t.prototype.ngAfterViewInit=function(){},t.prototype.ngOnInit=function(){var t=this.controlService.resolve(this.option),n=this.componentFactoryResolver.resolveComponentFactory(t);this.viewContainerRef.clear();var e=this.viewContainerRef.createComponent(n),o=e.instance;o.option=this.option,o.form=this.form,o.inputRef=this.inputRef,o.errorRef=this.errorRef,"function"==typeof o.ControlInit&&o.ControlInit(),this.componentRef=e},t.prototype.ngOnDestroy=function(){this.componentRef.destroy()},t.decorators=[{type:a.Component,args:[{selector:"control-outlet",template:'<ng-template #labelDef let-context>\r\n\t<label class="control__label control__label--{{context.option.schema}}" [attr.for]="context.option.key">{{ context.option.label | label }}</label>\r\n</ng-template>\r\n<ng-template #descriptionDef let-context>\r\n\t<div class="control__description control__description--{{context.option.schema}}" *ngIf="context.option.description">\r\n\t\t{{ context.option.description | label }}\r\n\t</div>\r\n</ng-template>\r\n<div class="control control--{{context.option.schema}}" [ngClass]="context.classes">\r\n\t<ng-container *ngTemplateOutlet="context.labelRef || labelDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-template #outlet></ng-template>\r\n</div>\r\n<ng-container *ngTemplateOutlet="context.descriptionRef || descriptionDef; context: { $implicit: context }"></ng-container>\r\n'}]}],t.ctorParameters=function(){return[{type:a.ComponentFactoryResolver},{type:U}]},t.propDecorators={inputRef:[{type:a.ContentChild,args:["inputRef"]}],errorRef:[{type:a.ContentChild,args:["errorRef"]}],labelRef:[{type:a.ContentChild,args:["labelRef"]}],descriptionRef:[{type:a.ContentChild,args:["descriptionRef"]}],descriptionDef:[{type:a.ViewChild,args:["descriptionDef"]}],labelDef:[{type:a.ViewChild,args:["labelDef"]}],viewContainerRef:[{type:a.ViewChild,args:["outlet",{read:a.ViewContainerRef}]}],option:[{type:a.Input}],form:[{type:a.Input}]},t}(),Z={provide:c.NG_VALUE_ACCESSOR,useExisting:a.forwardRef(function(){return B}),multi:!0},B=function(){function t(t,n){this.renderer=t,this.element=n,this.onChange=function(t){},this.onTouched=function(){}}return t.prototype.formatValue=function(t){return t.toString()},t.prototype.parseValue=function(t){return t&&""!==t?t:null},t.prototype.writeValue=function(t){var n=this.formatValue(t);this.renderer.setProperty(this.element.nativeElement,"value",n)},t.prototype.registerOnChange=function(o){var r=this;this.onChange=function(t){var n=r.parseValue(t),e=r.formatValue(n);r.renderer.setProperty(r.element.nativeElement,"value",e),o(n)}},t.prototype.registerOnTouched=function(t){this.onTouched=t},t.prototype.setDisabledState=function(t){this.renderer.setProperty(this.element.nativeElement,"disabled",t)},t.decorators=[{type:a.Directive,args:[{selector:"input[designr-accessor][formControlName],input[designr-accessor][formControl],input[designr-accessor][ngModel]",host:{"(change)":"onChange($event.target.value)","(input)":"onChange($event.target.value)","(blur)":"onTouched()"},providers:[Z]}]}],t.ctorParameters=function(){return[{type:a.Renderer2},{type:a.ElementRef}]},t}(),H=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return s(n,t),n.decorators=[{type:a.Component,args:[{selector:"controls-component",template:'<ng-container *ngFor="let option of options">\r\n\t<control-outlet class="fieldset__field fieldset__field--{{option.schema}}" [option]="option" [form]="form">\r\n\t\t\x3c!--\r\n\t\t<ng-template #errorRef let-context>\r\n\t\t\t<div class="control__error control__error--{{context.option.schema}}">\r\n\t\t\t\tAAA\r\n\t\t\t</div>\r\n\t\t</ng-template>\r\n\t\t--\x3e\r\n\t</control-outlet>\r\n</ng-container>\r\n'}]}],n.propDecorators={options:[{type:a.Input}],form:[{type:a.Input}]},n}(r.DisposableComponent),Y=function(){function t(){}return t.prototype.exists$=function(t){if("function"!=typeof this.exists)return i.of(null);var n=this.exists(t);return i.isObservable(n)?n.pipe(l.map(function(t){return t?{exists:!0}:null})):i.of(n?{exists:!0}:null)},t.prototype.validate=function(t){return this.exists$(t.value).pipe(l.debounceTime(250),l.catchError(function(t){return console.log("ExistsValidator.debounced$.catchError",t),i.of(null)}),l.take(1))},t.decorators=[{type:a.Directive,args:[{selector:"[exists][formControlName],[exists][formControl],[exists][ngModel]",providers:[{provide:c.NG_ASYNC_VALIDATORS,useExisting:a.forwardRef(function(){return t}),multi:!0}]}]}],t.propDecorators={exists:[{type:a.Input}]},t}(),J=function(){function t(t,n){this.match=t,this.reverse=n}return Object.defineProperty(t.prototype,"isReverse",{get:function(){return!!this.reverse&&"true"===this.reverse},enumerable:!0,configurable:!0}),t.prototype.validate=function(t){var n=t.value,e=t.root.get(this.match);return e&&n!==e.value&&!this.isReverse?{match:!0}:(e&&n===e.value&&this.isReverse&&(delete e.errors.match,Object.keys(e.errors).length||e.setErrors(null)),e&&n!==e.value&&this.isReverse&&e.setErrors({match:!0}),null)},t.decorators=[{type:a.Directive,args:[{selector:"[match][formControlName],[match][formControl],[match][ngModel]",providers:[{provide:c.NG_VALIDATORS,useExisting:a.forwardRef(function(){return t}),multi:!0}]}]}],t.ctorParameters=function(){return[{type:String,decorators:[{type:a.Attribute,args:["match"]}]},{type:String,decorators:[{type:a.Attribute,args:["reverse"]}]}]},t}(),K=function(){function t(){this.ngModelChange=new a.EventEmitter}return t.prototype.onInputChange=function(t){this.value=t.target.value.toUpperCase(),this.ngModelChange.emit(this.value)},t.decorators=[{type:a.Directive,args:[{selector:"[ngModel][uppercase]"}]}],t.propDecorators={ngModelChange:[{type:a.Output}],onInputChange:[{type:a.HostListener,args:["input",["$event"]]}]},t}(),Q=function(){function t(t){this.controlService=t}return t.prototype.getOptions=function(t){var r=this,n=t.map(function(t){var n=r.controlService.options.controls[t.schema];if(n){var e=new n.model(t);if(e instanceof y){var o=r.getOptions(e.options);o.sort(function(t,n){return t.order-n.order}),e.options=o}return e}return console.error("missing option for key "+t.schema),null}).filter(function(t){return t});return n.sort(function(t,n){return t.order-n.order}),n},t.prototype.getFormGroup=function(t){return this.controlService.toFormGroup(t)},t.prototype.getFormGroupFromOptions=function(t){return this.getFormGroup(this.getOptions(t))},t.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:U}]},t.ngInjectableDef=a.defineInjectable({factory:function(){return new t(a.inject(U))},token:t,providedIn:"root"}),t}(),X=[U,Q],tt=m([H,M,z,g],A),nt=[K,B],et=[],ot=[Y,J],rt=function(){function n(t){}return n.forRoot=function(t){return{ngModule:n,providers:[{provide:F,useValue:t}]}},n.decorators=[{type:a.NgModule,args:[{imports:[e.CommonModule,o.HttpClientModule,c.FormsModule,c.ReactiveFormsModule,r.CoreModule],providers:m(X,et,ot),declarations:m(tt,nt,et,ot),entryComponents:m(A),exports:m(tt,nt,et,ot)}]}],n.ctorParameters=function(){return[{type:n,decorators:[{type:a.Optional},{type:a.SkipSelf}]}]},n}();t.ControlConfig=S,t.CONTROL_CONFIG=F,t.ControlModuleComponent=M,t.ControlModule=rt,t.ControlCheckbox=d,t.ControlCheckboxComponent=x,t.ControlOption=f,t.ControlOutletComponent=z,t.ControlAccessor=B,t.ControlComponent=g,t.ControlService=U,t.ControlsComponent=H,t.ControlEmail=h,t.ControlEmailComponent=v,t.ControlGroup=y,t.ControlGroupComponent=b,t.ControlInfo=_,t.ControlInfoComponent=C,t.ControlMarkdown=I,t.ControlMarkdownComponent=D,t.ControlNumber=O,t.ControlNumberComponent=R,t.ControlPassword=k,t.ControlPasswordComponent=w,t.ControlRadio=V,t.ControlRadioComponent=T,t.ControlSelect=j,t.ControlSelectComponent=q,t.ControlText=$,t.ControlTextComponent=G,t.ControlTextarea=P,t.ControlTextareaComponent=E,t.ExistsValidator=Y,t.existsValidator=L,t.MatchValidator=J,t.matchValidator=W,t.UppercaseDirective=K,t.FormService=Q,t.ɵa=A,t.ɵb=Z,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=designr-control.umd.min.js.map