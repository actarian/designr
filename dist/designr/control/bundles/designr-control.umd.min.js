!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/common"),require("@angular/common/http"),require("@designr/core"),require("rxjs"),require("rxjs/operators"),require("@angular/forms"),require("@angular/core")):"function"==typeof define&&define.amd?define("@designr/control",["exports","@angular/common","@angular/common/http","@designr/core","rxjs","rxjs/operators","@angular/forms","@angular/core"],e):e((t.designr=t.designr||{},t.designr.control={}),t.ng.common,t.ng.common.http,t.core,t.rxjs,t.rxjs.operators,t.ng.forms,t.ng.core)}(this,function(t,n,o,r,i,l,c,a){"use strict";var p=function(t,e){return(p=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};function s(t,e){function n(){this.constructor=t}p(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var e=function(){return(e=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)};function u(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var o,r,i=n.call(t),l=[];try{for(;(void 0===e||0<e--)&&!(o=i.next()).done;)l.push(o.value)}catch(c){r={error:c}}finally{try{o&&!o.done&&(n=i["return"])&&n.call(i)}finally{if(r)throw r.error}}return l}function m(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(u(arguments[e]));return t}var d=function tt(t){this.schema="text",t&&Object.assign(this,t)},f=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.schema="checkbox",t}return s(t,e),t}(d),g=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return s(e,t),Object.defineProperty(e.prototype,"context",{get:function(){return this},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"control",{get:function(){return this.form.controls[this.option.key]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isValid",{get:function(){return this.control.valid},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"classes",{get:function(){return{valid:this.control.valid,invalid:this.control.invalid,dirty:this.control.dirty,empty:null==this.control.value,required:Boolean(this.option.required||this.option.requiredTrue),disabled:this.option.disabled}},enumerable:!0,configurable:!0}),e.decorators=[{type:a.Component,args:[{selector:"control-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<input class="control__input" placeholder="{{ context.option.placeholder | label }}" [id]="context.option.key" [formControlName]="context.option.key" type="text">\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="control__error" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.pattern">{{ \'errors.pattern\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.match">{{ \'errors.match\' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],e.propDecorators={inputRef:[{type:a.ContentChild,args:["inputRef"]}],errorRef:[{type:a.ContentChild,args:["errorRef"]}],option:[{type:a.Input}],form:[{type:a.Input}]},e}(r.DisposableComponent),h=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return s(e,t),e.decorators=[{type:a.Component,args:[{selector:"control-checkbox-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<label class="control__group control__group--checkbox">\r\n\t\t\t<input class="control__checkbox" type="checkbox" [id]="context.option.key" [formControlName]="context.option.key">\r\n\t\t\t<span class="control__info">{{ context.option.description | label }}</span>\r\n\t\t</label>\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="control__error control__error--checkbox" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.requiredTrue">{{ \'errors.required\' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],e.propDecorators={option:[{type:a.Input}]},e}(g),x=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.schema="email",t.pattern="[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}",t}return s(t,e),t}(d),v=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return s(e,t),e.decorators=[{type:a.Component,args:[{selector:"control-email-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<input class="control__input control__input--email" placeholder="{{ context.option.placeholder | label }}" [id]="context.option.key" [formControlName]="context.option.key" type="email">\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="control__error control__error--email" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.email">{{ \'errors.email\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.pattern">{{ \'errors.pattern\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.match">{{ \'errors.match\' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],e.propDecorators={option:[{type:a.Input}]},e}(g),y=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.schema="markdown",t}return s(t,e),t}(d),b=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return s(e,t),e.decorators=[{type:a.Component,args:[{selector:"control-markdown-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<textarea class="control__input control__input--markdown" placeholder="{{ context.option.placeholder | label }}" [id]="context.option.key" [formControlName]="context.option.key" rows="4"></textarea>\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="control__error control__error--markdown" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],e.propDecorators={option:[{type:a.Input}]},e}(g),_=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.schema="number",t}return s(t,e),t}(d),C=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return s(e,t),e.decorators=[{type:a.Component,args:[{selector:"control-number-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<input class="control__input control__input--number" placeholder="{{ context.option.placeholder | label }}" [id]="context.option.key" [formControlName]="context.option.key" type="number" [attr.step]="context.option.step">\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="control__error control__error--number" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.min">{{ \'errors.min\' | label : null : { min: context.option.min } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.max">{{ \'errors.max\' | label : null : { max: context.option.max } }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],e.propDecorators={option:[{type:a.Input}]},e}(g),I=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.schema="password",t}return s(t,e),t}(d),D=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.reveal={checked:!1},t}return s(t,e),t.decorators=[{type:a.Component,args:[{selector:"control-password-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<div class="control__group control__group--password">\r\n\t\t\t<input class="control__input control__input--password" placeholder="{{ context.option.placeholder | label }}" [id]="context.option.key" [formControlName]="context.option.key" type="password" #password>\r\n\t\t\t<div class="control__addon">\r\n\t\t\t\t<input class="control__checkbox" type="checkbox" [attr.aria-label]="context.option.label | label" (input)="password.setAttribute(\'type\', reveal.checked ? \'text\' : \'password\')" #reveal>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="control__error control__error--password" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.pattern">{{ \'errors.pattern\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.match">{{ \'errors.match\' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],t.propDecorators={option:[{type:a.Input}]},t}(g),R=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.schema="radio",t}return s(t,e),t}(d),O=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return s(e,t),e.decorators=[{type:a.Component,args:[{selector:"control-radio-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<label class="control__group control__group--radio">\r\n\t\t\t<input class="control__radio" type="radio" [id]="context.option.key" [formControlName]="context.option.key">\r\n\t\t\t<span class="control__info">{{ context.option.description | label }}</span>\r\n\t\t</label>\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="control__error control__error--radio" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],e.propDecorators={option:[{type:a.Input}]},e}(g),k=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.schema="select",t}return s(t,e),t}(d),w=function(e){function t(){var t=e.call(this)||this;return t.options=[],t.getValue=t.getValue_.bind(t),t.compareWith=t.compareWith_.bind(t),t}return s(t,e),t.prototype.ngOnInit=function(){var e=this;this.options$().pipe(l.takeUntil(this.unsubscribe)).subscribe(function(t){return e.options=t})},t.prototype.options$=function(){var t=this.option.options;return t?i.isObservable(t)?t:Array.isArray(t)?i.of(t):i.of([]):i.of([])},t.prototype.getValue_=function(t){return this.option.asObject?t:t.id},t.prototype.compareWith_=function(t,e){return this.option.asObject?(t=t,(e=e)?t.id===e.id:null===t.id):e?t===e:null===t},t.decorators=[{type:a.Component,args:[{selector:"control-select-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<div class="control__input control__input--select">\r\n\t\t\t<select [id]="context.option.key" [formControlName]="context.option.key" [compareWith]="context.compareWith">\r\n\t\t\t\t<option *ngFor="let item of options" [ngValue]="context.getValue(item)">{{item?.name}}</option>\r\n\t\t\t</select>\r\n\t\t\t\x3c!-- control__accessory --\x3e\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="control__error control__error--select" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],t.ctorParameters=function(){return[]},t.propDecorators={option:[{type:a.Input}]},t}(g),T=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.schema="text",t}return s(t,e),t}(d),j=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return s(e,t),e.decorators=[{type:a.Component,args:[{selector:"control-text-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<input class="control__input control__input--text" placeholder="{{ context.option.placeholder | label }}" [id]="context.option.key" [formControlName]="context.option.key" type="text">\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="control__error control__error--text" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.pattern">{{ \'errors.pattern\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.match">{{ \'errors.match\' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],e.propDecorators={option:[{type:a.Input}]},e}(g),q=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.schema="textarea",t}return s(t,e),t}(d),V=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return s(e,t),e.decorators=[{type:a.Component,args:[{selector:"control-textarea-component",template:'<ng-container [formGroup]="form">\r\n\t<ng-template #inputDef let-context>\r\n\t\t<textarea class="control__input control__input--textarea" placeholder="{{ context.option.placeholder | label }}" [id]="context.option.key" [formControlName]="context.option.key" rows="4"></textarea>\r\n\t</ng-template>\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="control__error control__error--textarea" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n</ng-container>\r\n'}]}],e.propDecorators={option:[{type:a.Input}]},e}(g),$=[h,v,b,C,D,O,w,j,V],P={checkbox:{component:h,model:f},email:{component:v,model:x},markdown:{component:b,model:y},number:{component:C,model:_},password:{component:D,model:I},radio:{component:O,model:R},select:{component:w,model:k},text:{component:j,model:T},textarea:{component:V,model:q}},E=function et(t){this.controls={},t&&(Object.assign(this,t),this.controls=e({},P,t.controls||{}))},S=new a.InjectionToken("control.config"),M=function(){function t(){this.version="0.0.8"}return t.prototype.ngOnInit=function(){},t.decorators=[{type:a.Component,args:[{selector:"control-module",template:'<span class="control-module">control {{version}}</span>'}]}],t.ctorParameters=function(){return[]},t}();function N(o,r,i){return void 0===r&&(r=!1),function(t){var e=i.controls[o],n=t.value;return e&&n!==e.value&&!r?{match:!0}:(e&&n===e.value&&r&&e.errors&&(delete e.errors.match,Object.keys(e.errors).length||e.setErrors(null)),e&&n!==e.value&&r&&e.setErrors({match:!0}),null)}}var A=function(){function t(t){this.options=new E(t||{})}return t.prototype.resolve=function(t){return t&&this.options.controls[t.schema].component||g},t.prototype.getValidators=function(t,e){var n=[];return t.min&&n.push(c.Validators.min(t.min)),t.max&&n.push(c.Validators.max(t.max)),t.required&&n.push(c.Validators.required),t.requiredTrue&&n.push(c.Validators.requiredTrue),t.minlength&&n.push(c.Validators.minLength(t.minlength)),t.maxlength&&n.push(c.Validators.maxLength(t.maxlength)),t.pattern&&n.push(c.Validators.pattern(t.pattern)),t.match&&n.push(N(t.match,t.reverse,e)),"email"===t.schema&&n.push(c.Validators.email),n},t.prototype.toFormGroup=function(t){var n=this,o={};t.forEach(function(t){var e=new c.FormControl(t.value);t.disabled&&e.disable(),o[t.key]=e});var r=new c.FormGroup(o);return t.forEach(function(t){var e=n.getValidators(t,r);r.controls[t.key].setValidators(e)}),r},t.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:E,decorators:[{type:a.Inject,args:[S]}]}]},t.ngInjectableDef=a.defineInjectable({factory:function(){return new t(a.inject(S))},token:t,providedIn:"root"}),t}(),G=function(){function t(t,e){this.componentFactoryResolver=t,this.controlService=e}return Object.defineProperty(t.prototype,"context",{get:function(){return this},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"classes",{get:function(){return this.componentRef?this.componentRef.instance.classes:null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"control",{get:function(){return this.componentRef?this.componentRef.instance.control:null},enumerable:!0,configurable:!0}),t.prototype.ngAfterViewInit=function(){},t.prototype.ngOnInit=function(){var t=this.controlService.resolve(this.option),e=this.componentFactoryResolver.resolveComponentFactory(t);this.viewContainerRef.clear();var n=this.viewContainerRef.createComponent(e),o=n.instance;o.option=this.option,o.form=this.form,o.inputRef=this.inputRef,o.errorRef=this.errorRef,"function"==typeof o.ControlInit&&o.ControlInit(),this.componentRef=n},t.prototype.ngOnDestroy=function(){this.componentRef.destroy()},t.decorators=[{type:a.Component,args:[{selector:"control-outlet",template:'<ng-template #labelDef let-context>\r\n\t<label class="control__label control__label--{{context.option.schema}}" [attr.for]="context.option.key">{{ context.option.label | label }}</label>\r\n</ng-template>\r\n<ng-template #descriptionDef let-context>\r\n\t<div class="control__description control__description--{{context.option.schema}}" *ngIf="context.option.description">\r\n\t\t{{ context.option.description | label }}\r\n\t</div>\r\n</ng-template>\r\n<div class="control control--{{context.option.schema}}" [ngClass]="context.classes">\r\n\t<ng-container *ngTemplateOutlet="context.labelRef || labelDef; context: { $implicit: context }"></ng-container>\r\n\t<ng-template #outlet></ng-template>\r\n</div>\r\n<ng-container *ngTemplateOutlet="context.descriptionRef || descriptionDef; context: { $implicit: context }"></ng-container>\r\n'}]}],t.ctorParameters=function(){return[{type:a.ComponentFactoryResolver},{type:A}]},t.propDecorators={inputRef:[{type:a.ContentChild,args:["inputRef"]}],errorRef:[{type:a.ContentChild,args:["errorRef"]}],labelRef:[{type:a.ContentChild,args:["labelRef"]}],descriptionRef:[{type:a.ContentChild,args:["descriptionRef"]}],descriptionDef:[{type:a.ViewChild,args:["descriptionDef"]}],labelDef:[{type:a.ViewChild,args:["labelDef"]}],viewContainerRef:[{type:a.ViewChild,args:["outlet",{read:a.ViewContainerRef}]}],option:[{type:a.Input}],form:[{type:a.Input}]},t}(),F={provide:c.NG_VALUE_ACCESSOR,useExisting:a.forwardRef(function(){return L}),multi:!0},L=function(){function t(t,e){this.renderer=t,this.element=e,this.onChange=function(t){},this.onTouched=function(){}}return t.prototype.formatValue=function(t){return t.toString()},t.prototype.parseValue=function(t){return t&&""!==t?t:null},t.prototype.writeValue=function(t){var e=this.formatValue(t);this.renderer.setProperty(this.element.nativeElement,"value",e)},t.prototype.registerOnChange=function(o){var r=this;this.onChange=function(t){var e=r.parseValue(t),n=r.formatValue(e);r.renderer.setProperty(r.element.nativeElement,"value",n),o(e)}},t.prototype.registerOnTouched=function(t){this.onTouched=t},t.prototype.setDisabledState=function(t){this.renderer.setProperty(this.element.nativeElement,"disabled",t)},t.decorators=[{type:a.Directive,args:[{selector:"input[designr-accessor][formControlName],input[designr-accessor][formControl],input[designr-accessor][ngModel]",host:{"(change)":"onChange($event.target.value)","(input)":"onChange($event.target.value)","(blur)":"onTouched()"},providers:[F]}]}],t.ctorParameters=function(){return[{type:a.Renderer2},{type:a.ElementRef}]},t}(),W=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return s(e,t),e.decorators=[{type:a.Component,args:[{selector:"controls-component",template:'<ng-container *ngFor="let option of options">\n\t<control-outlet class="fieldset__field" [option]="option" [form]="form">\n\t\x3c!--\n\t<ng-template #errorRef let-context>\n\t\t<div class="control__error control__error--{{context.option.schema}}">\n\t\t\tAAA\n\t\t</div>\n\t</ng-template>\n\t--\x3e\n\t</control-outlet>\n</ng-container>'}]}],e.propDecorators={options:[{type:a.Input}],form:[{type:a.Input}]},e}(r.DisposableComponent),U=function(){function t(){var e=this;this.values=new i.BehaviorSubject(null),this.debounced$=this.values.pipe(l.debounceTime(250),l.switchMap(function(t){return e.exists$(t)}),l.catchError(function(t){return console.log("ExistsValidator.debounced$.catchError",t),i.of(null)}),l.take(1))}return Object.defineProperty(t.prototype,"value",{set:function(t){t&&""!==t.trim()&&this.values.next(t)},enumerable:!0,configurable:!0}),t.prototype.exists$=function(t){return"function"==typeof this.exists?this.exists(t).pipe(l.switchMap(function(t){return t?i.of({exists:!0}):i.of(null)})):i.of(null)},t.prototype.validate=function(t){return this.value=t.value,this.debounced$},t.decorators=[{type:a.Directive,args:[{selector:"[exists][formControlName],[exists][formControl],[exists][ngModel]",providers:[{provide:c.NG_ASYNC_VALIDATORS,useExisting:a.forwardRef(function(){return t}),multi:!0}]}]}],t.propDecorators={exists:[{type:a.Input}]},t}(),z=function(){function t(t,e){this.match=t,this.reverse=e}return Object.defineProperty(t.prototype,"isReverse",{get:function(){return!!this.reverse&&"true"===this.reverse},enumerable:!0,configurable:!0}),t.prototype.validate=function(t){var e=t.value,n=t.root.get(this.match);return n&&e!==n.value&&!this.isReverse?{match:!0}:(n&&e===n.value&&this.isReverse&&(delete n.errors.match,Object.keys(n.errors).length||n.setErrors(null)),n&&e!==n.value&&this.isReverse&&n.setErrors({match:!0}),null)},t.decorators=[{type:a.Directive,args:[{selector:"[match][formControlName],[match][formControl],[match][ngModel]",providers:[{provide:c.NG_VALIDATORS,useExisting:a.forwardRef(function(){return t}),multi:!0}]}]}],t.ctorParameters=function(){return[{type:String,decorators:[{type:a.Attribute,args:["match"]}]},{type:String,decorators:[{type:a.Attribute,args:["reverse"]}]}]},t}(),Z=function(){function t(){this.ngModelChange=new a.EventEmitter}return t.prototype.onInputChange=function(t){this.value=t.target.value.toUpperCase(),this.ngModelChange.emit(this.value)},t.decorators=[{type:a.Directive,args:[{selector:"[ngModel][uppercase]"}]}],t.propDecorators={ngModelChange:[{type:a.Output}],onInputChange:[{type:a.HostListener,args:["input",["$event"]]}]},t}(),B=function(){function t(t){this.controlService=t}return t.prototype.getFormGroup=function(t){return this.controlService.toFormGroup(t)},t.prototype.getOptions=function(t){var n=this,e=t.map(function(t){var e=n.controlService.options.controls[t.schema];return e?new e.model(t):(console.error("missing option for key "+t.schema),null)}).filter(function(t){return t});return e.sort(function(t,e){return t.order-e.order}),e},t.prototype.getFormGroupFromOptions=function(t){return this.getFormGroup(this.getOptions(t))},t.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:A}]},t.ngInjectableDef=a.defineInjectable({factory:function(){return new t(a.inject(A))},token:t,providedIn:"root"}),t}(),H=[A,B],Y=m([W,M,G,g],$),J=[Z,L],K=[],Q=[U,z],X=function(){function e(t){}return e.forRoot=function(t){return{ngModule:e,providers:[{provide:S,useValue:t}]}},e.decorators=[{type:a.NgModule,args:[{imports:[n.CommonModule,o.HttpClientModule,c.FormsModule,c.ReactiveFormsModule,r.CoreModule],providers:m(H,K,Q),declarations:m(Y,J,K,Q),entryComponents:m($),exports:m(Y,J,K,Q)}]}],e.ctorParameters=function(){return[{type:e,decorators:[{type:a.Optional},{type:a.SkipSelf}]}]},e}();t.ControlConfig=E,t.CONTROL_CONFIG=S,t.ControlModuleComponent=M,t.ControlModule=X,t.ControlCheckbox=f,t.ControlCheckboxComponent=h,t.ControlOption=d,t.ControlOutletComponent=G,t.ControlAccessor=L,t.ControlComponent=g,t.ControlService=A,t.ControlsComponent=W,t.ControlEmail=x,t.ControlEmailComponent=v,t.ControlMarkdown=y,t.ControlMarkdownComponent=b,t.ControlNumber=_,t.ControlNumberComponent=C,t.ControlPassword=I,t.ControlPasswordComponent=D,t.ControlRadio=R,t.ControlRadioComponent=O,t.ControlSelect=k,t.ControlSelectComponent=w,t.ControlText=T,t.ControlTextComponent=j,t.ControlTextarea=q,t.ControlTextareaComponent=V,t.ExistsValidator=U,t.MatchValidator=z,t.matchValidator=N,t.UppercaseDirective=Z,t.FormService=B,t.ɵa=$,t.ɵb=F,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=designr-control.umd.min.js.map