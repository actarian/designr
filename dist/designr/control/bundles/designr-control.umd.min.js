!function(r,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/common"),require("@angular/common/http"),require("@designr/core"),require("rxjs"),require("rxjs/operators"),require("@angular/forms"),require("@angular/core")):"function"==typeof define&&define.amd?define("@designr/control",["exports","@angular/common","@angular/common/http","@designr/core","rxjs","rxjs/operators","@angular/forms","@angular/core"],e):e((r.designr=r.designr||{},r.designr.control={}),r.ng.common,r.ng.common.http,r.core,r.rxjs,r.rxjs.operators,r.ng.forms,r.ng.core)}(this,function(r,t,o,n,l,i,a,c){"use strict";var s=function(r,e){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,e){r.__proto__=e}||function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])})(r,e)};function u(r,e){function t(){this.constructor=r}s(r,e),r.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}var e=function(){return(e=Object.assign||function(r){for(var e,t=1,o=arguments.length;t<o;t++)for(var n in e=arguments[t])Object.prototype.hasOwnProperty.call(e,n)&&(r[n]=e[n]);return r}).apply(this,arguments)};function p(r,e){var t="function"==typeof Symbol&&r[Symbol.iterator];if(!t)return r;var o,n,l=t.call(r),i=[];try{for(;(void 0===e||0<e--)&&!(o=l.next()).done;)i.push(o.value)}catch(a){n={error:a}}finally{try{o&&!o.done&&(t=l["return"])&&t.call(l)}finally{if(n)throw n.error}}return i}function f(){for(var r=[],e=0;e<arguments.length;e++)r=r.concat(p(arguments[e]));return r}var d=function(){function r(r){this.renderer=r,this.reveal={checked:!1},this.onChange=function(r){},this.onTouched=function(){}}return Object.defineProperty(r.prototype,"controlRef",{get:function(){return this.form.controls[this.control.key]},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"isValid",{get:function(){return this.controlRef.valid},enumerable:!0,configurable:!0}),r.prototype.formatValue=function(r){this.renderer.setProperty(this.element,"value",r)},r.prototype.parseValue=function(r){var e=this.innervalue;this.onChange(e)},r.prototype.onInput=function(r){this.element=r.target,this.onChange(this.element.value)},r.prototype.onFocus=function(r){this.blurred=!1,this.element=r.target,this.renderer.setProperty(this.element,"value",this.controlRef.value)},r.prototype.onBlur=function(r){this.blurred=!0,this.element=r.target,this.renderer.setProperty(this.element,"value",this.controlRef.value)},r.prototype.getFormattedValue=function(){return this.controlRef.value},r.prototype.writeValue=function(r){this.formatValue(r)},r.prototype.registerOnChange=function(r){this.onChange=r},r.prototype.registerOnTouched=function(r){this.onTouched=r},r.prototype.setDisabledState=function(r){},r.decorators=[{type:c.Component,args:[{selector:"control-base-component",template:'<ng-container [formGroup]="form">\r\n\t<label class="form-label" [attr.for]="control.key">{{ control.label | label }}</label>\r\n\t<input class="form-control" placeholder="{{ control.placeholder | label }}" [id]="control.key" [formControlName]="control.key" [type]="control.type">\r\n\t<div class="alert alert--danger" *ngIf="controlRef.invalid && (controlRef.dirty || controlRef.touched)">\r\n\t\t<div *ngIf="controlRef.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t</div>\r\n</ng-container>\r\n',providers:[{provide:a.NG_VALUE_ACCESSOR,useExisting:c.forwardRef(function(){return r}),multi:!0}]}]}],r.ctorParameters=function(){return[{type:c.Renderer2}]},r.propDecorators={control:[{type:c.Input}],form:[{type:c.Input}]},r}(),m=function(t){function r(r){var e=t.call(this,r)||this;return e.renderer=r,e}return u(r,t),r.decorators=[{type:c.Component,args:[{selector:"control-checkbox-component",template:'<div class="form-checkbox" [formGroup]="form">\r\n\t<label class="form-label">\r\n\t\t<input class="form-checkbox__input" type="checkbox" [id]="control.key" [formControlName]="control.key">\r\n\t\t<span class="form-checkbox__label">{{ control.label | label }}</span>\r\n\t</label>\r\n\t<div class="alert alert--danger" *ngIf="controlRef.invalid && (controlRef.dirty || controlRef.touched)">\r\n\t\t<div *ngIf="controlRef.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t<div *ngIf="controlRef.errors.requiredTrue">{{ \'errors.required\' | label }}</div>\r\n\t</div>\r\n</div>\r\n',providers:[{provide:a.NG_VALUE_ACCESSOR,useExisting:c.forwardRef(function(){return r}),multi:!0}]}]}],r.ctorParameters=function(){return[{type:c.Renderer2}]},r.propDecorators={control:[{type:c.Input}]},r}(d),h=function(t){function r(r){var e=t.call(this,r)||this;return e.renderer=r,e}return u(r,t),r.decorators=[{type:c.Component,args:[{selector:"control-email-component",template:'<ng-container [formGroup]="form">\r\n\t<label class="form-label" [attr.for]="control.key">{{ control.label | label }}</label>\r\n\t<input class="form-control" placeholder="{{ control.placeholder | label }}" [id]="control.key" [formControlName]="control.key" [type]="control.type">\r\n\t<div class="alert alert--danger" *ngIf="controlRef.invalid && (controlRef.dirty || controlRef.touched)">\r\n\t\t<div *ngIf="controlRef.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t<div *ngIf="controlRef.errors.email">{{ \'errors.email\' | label }}</div>\r\n\t\t<div *ngIf="controlRef.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: control.minlength } }}</div>\r\n\t\t<div *ngIf="controlRef.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: control.maxlength } }}</div>\r\n\t\t<div *ngIf="controlRef.errors.pattern">{{ \'errors.pattern\' | label }}</div>\r\n\t\t<div *ngIf="controlRef.errors.match">{{ \'errors.match\' | label }}</div>\r\n\t</div>\r\n</ng-container>\r\n',providers:[{provide:a.NG_VALUE_ACCESSOR,useExisting:c.forwardRef(function(){return r}),multi:!0}]}]}],r.ctorParameters=function(){return[{type:c.Renderer2}]},r.propDecorators={control:[{type:c.Input}]},r}(d),v=function(t){function r(r){var e=t.call(this,r)||this;return e.renderer=r,e}return u(r,t),r.decorators=[{type:c.Component,args:[{selector:"control-markdown-component",template:'<ng-container [formGroup]="form">\r\n\t<label class="form-label" [attr.for]="control.key">{{ control.label | label }}</label>\r\n\t<textarea class="form-control" placeholder="{{ control.placeholder | label }}" [id]="control.key" [formControlName]="control.key" rows="4"></textarea>\r\n\t<div class="alert alert--danger" *ngIf="controlRef.invalid && (controlRef.dirty || controlRef.touched)">\r\n\t\t<div *ngIf="controlRef.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t<div *ngIf="controlRef.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: control.minlength } }}</div>\r\n\t\t<div *ngIf="controlRef.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: control.maxlength } }}</div>\r\n\t</div>\r\n</ng-container>\r\n',providers:[{provide:a.NG_VALUE_ACCESSOR,useExisting:c.forwardRef(function(){return r}),multi:!0}]}]}],r.ctorParameters=function(){return[{type:c.Renderer2}]},r.propDecorators={control:[{type:c.Input}]},r}(d),g=function(t){function r(r){var e=t.call(this,r)||this;return e.renderer=r,e}return u(r,t),r.decorators=[{type:c.Component,args:[{selector:"control-number-component",template:'<ng-container [formGroup]="form">\r\n\t<label class="form-label" [attr.for]="control.key">{{ control.label | label }}</label>\r\n\t<input class="form-control" placeholder="{{ control.placeholder | label }}" [id]="control.key" [type]="control.type" [attr.step]="control.step" (input)="onInput($event)" (focus)="onFocus($event)" (blur)="onBlur($event)" [value]="getFormattedValue()">\r\n\t<div class="alert alert--danger" *ngIf="controlRef.invalid && (controlRef.dirty || controlRef.touched)">\r\n\t\t<div *ngIf="controlRef.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t<div *ngIf="controlRef.errors.min">{{ \'errors.min\' | label : null : { min: control.min } }}</div>\r\n\t\t<div *ngIf="controlRef.errors.max">{{ \'errors.max\' | label : null : { max: control.max } }}</div>\r\n\t</div>\r\n</ng-container>\r\n',providers:[{provide:a.NG_VALUE_ACCESSOR,useExisting:c.forwardRef(function(){return r}),multi:!0}]}]}],r.ctorParameters=function(){return[{type:c.Renderer2}]},r.propDecorators={control:[{type:c.Input}]},r}(d),y=function(t){function r(r){var e=t.call(this,r)||this;return e.renderer=r,e}return u(r,t),r.decorators=[{type:c.Component,args:[{selector:"control-password-component",template:'<ng-container [formGroup]="form">\r\n\t<label class="form-label" [attr.for]="control.key">{{ control.label | label }}</label>\r\n\t<div class="input-group">\r\n\t\t<input class="form-control" placeholder="{{ control.placeholder | label }}" [id]="control.key" [formControlName]="control.key" [type]="control.type" #password>\r\n\t\t<input class="form-control--addon" type="checkbox" [attr.aria-label]="control.label | label" (input)="password.setAttribute(\'type\', reveal.checked ? \'text\' : control.type)" #reveal>\r\n\t</div>\r\n\t<div class="alert alert--danger" *ngIf="controlRef.invalid && (controlRef.dirty || controlRef.touched)">\r\n\t\t<div *ngIf="controlRef.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t<div *ngIf="controlRef.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: control.minlength } }}</div>\r\n\t\t<div *ngIf="controlRef.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: control.maxlength } }}</div>\r\n\t\t<div *ngIf="controlRef.errors.pattern">{{ \'errors.pattern\' | label }}</div>\r\n\t\t<div *ngIf="controlRef.errors.match">{{ \'errors.match\' | label }}</div>\r\n\t</div>\r\n</ng-container>\r\n',providers:[{provide:a.NG_VALUE_ACCESSOR,useExisting:c.forwardRef(function(){return r}),multi:!0}]}]}],r.ctorParameters=function(){return[{type:c.Renderer2}]},r.propDecorators={control:[{type:c.Input}]},r}(d),b=function(t){function r(r){var e=t.call(this,r)||this;return e.renderer=r,e}return u(r,t),r.decorators=[{type:c.Component,args:[{selector:"control-radio-component",template:'<div class="form-radio" [formGroup]="form">\r\n\t<label class="form-label">\r\n\t\t<input class="form-radio__input" type="radio" [id]="control.key" [formControlName]="control.key">\r\n\t\t<span class="form-radio__label">{{ control.label | label }}</span>\r\n\t</label>\r\n\t<div class="alert alert--danger" *ngIf="controlRef.invalid && (controlRef.dirty || controlRef.touched)">\r\n\t\t<div *ngIf="controlRef.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t</div>\r\n</div>\r\n',providers:[{provide:a.NG_VALUE_ACCESSOR,useExisting:c.forwardRef(function(){return r}),multi:!0}]}]}],r.ctorParameters=function(){return[{type:c.Renderer2}]},r.propDecorators={control:[{type:c.Input}]},r}(d),C=function(t){function r(r){var e=t.call(this,r)||this;return e.renderer=r,e}return u(r,t),r.decorators=[{type:c.Component,args:[{selector:"control-select-component",template:'<div class="form-select" [formGroup]="form">\r\n\t<label class="form-label" [attr.for]="control.key">{{ control.label | label }}</label>\r\n\t<select class="form-select__select" [id]="control.key" [formControlName]="control.key">\r\n\t\t<option *ngFor="let opt of control.options" [value]="opt.key">{{opt.value}}</option>\r\n\t</select>\r\n\t<div class="alert alert--danger" *ngIf="controlRef.invalid && (controlRef.dirty || controlRef.touched)">\r\n\t\t<div *ngIf="controlRef.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t</div>\r\n</div>\r\n',providers:[{provide:a.NG_VALUE_ACCESSOR,useExisting:c.forwardRef(function(){return r}),multi:!0}]}]}],r.ctorParameters=function(){return[{type:c.Renderer2}]},r.propDecorators={control:[{type:c.Input}]},r}(d),R=function(t){function r(r){var e=t.call(this,r)||this;return e.renderer=r,e}return u(r,t),r.decorators=[{type:c.Component,args:[{selector:"control-text-component",template:'<ng-container [formGroup]="form">\r\n\t<label class="form-label" [attr.for]="control.key">{{ control.label | label }}</label>\r\n\t<input class="form-control" placeholder="{{ control.placeholder | label }}" [id]="control.key" [formControlName]="control.key" [type]="control.type">\r\n\t<div class="alert alert--danger" *ngIf="controlRef.invalid && (controlRef.dirty || controlRef.touched)">\r\n\t\t<div *ngIf="controlRef.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t<div *ngIf="controlRef.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: control.minlength } }}</div>\r\n\t\t<div *ngIf="controlRef.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: control.maxlength } }}</div>\r\n\t\t<div *ngIf="controlRef.errors.pattern">{{ \'errors.pattern\' | label }}</div>\r\n\t\t<div *ngIf="controlRef.errors.match">{{ \'errors.match\' | label }}</div>\r\n\t</div>\r\n</ng-container>\r\n',providers:[{provide:a.NG_VALUE_ACCESSOR,useExisting:c.forwardRef(function(){return r}),multi:!0}]}]}],r.ctorParameters=function(){return[{type:c.Renderer2}]},r.propDecorators={control:[{type:c.Input}]},r}(d),x=function(t){function r(r){var e=t.call(this,r)||this;return e.renderer=r,e}return u(r,t),r.decorators=[{type:c.Component,args:[{selector:"control-textarea-component",template:'<ng-container [formGroup]="form">\r\n\t<label class="form-label" [attr.for]="control.key">{{ control.label | label }}</label>\r\n\t<textarea class="form-control" placeholder="{{ control.placeholder | label }}" [id]="control.key" [formControlName]="control.key" rows="4"></textarea>\r\n\t<div class="alert alert--danger" *ngIf="controlRef.invalid && (controlRef.dirty || controlRef.touched)">\r\n\t\t<div *ngIf="controlRef.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t<div *ngIf="controlRef.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: control.minlength } }}</div>\r\n\t\t<div *ngIf="controlRef.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: control.maxlength } }}</div>\r\n\t</div>\r\n</ng-container>\r\n',providers:[{provide:a.NG_VALUE_ACCESSOR,useExisting:c.forwardRef(function(){return r}),multi:!0}]}]}],r.ctorParameters=function(){return[{type:c.Renderer2}]},r.propDecorators={control:[{type:c.Input}]},r}(d),I={checkbox:m,email:h,markdown:v,number:g,password:y,radio:b,select:C,text:R,textarea:x},k=function X(r){this.controls={},r&&(Object.assign(this,r),this.controls=e({},I,r.controls||{}))},w=new c.InjectionToken("control.config"),E=function(){function r(){this.version="0.0.3"}return r.prototype.ngOnInit=function(){},r.decorators=[{type:c.Component,args:[{selector:"control-module",template:'<span class="control-module">control {{version}}</span>'}]}],r.ctorParameters=function(){return[]},r}();function _(o,n,l){return void 0===n&&(n=!1),function(r){var e=l.controls[o],t=r.value;return e&&t!==e.value&&!n?{match:!0}:(e&&t===e.value&&n&&e.errors&&(delete e.errors.match,Object.keys(e.errors).length||e.setErrors(null)),e&&t!==e.value&&n&&e.setErrors({match:!0}),null)}}var O=function(){function r(r){r=r||{},this.options=new k(r)}return r.prototype.resolve=function(r){return r&&this.options.controls[r.schema]||d},r.prototype.getValidators=function(r,e){var t=[];return r.min&&t.push(a.Validators.min(r.min)),r.max&&t.push(a.Validators.max(r.max)),r.required&&t.push(a.Validators.required),r.requiredTrue&&t.push(a.Validators.requiredTrue),r.email&&t.push(a.Validators.email),r.minlength&&t.push(a.Validators.minLength(r.minlength)),r.maxlength&&t.push(a.Validators.maxLength(r.maxlength)),r.pattern&&t.push(a.Validators.pattern(r.pattern)),r.match&&t.push(_(r.match,r.reverse,e)),t},r.prototype.toFormGroup=function(r){var t=this,o={};r.forEach(function(r){var e=new a.FormControl(r.value);r.disabled&&e.disable(),o[r.key]=e});var n=new a.FormGroup(o);return r.forEach(function(r){var e=t.getValidators(r,n);n.controls[r.key].setValidators(e)}),n},r.decorators=[{type:c.Injectable,args:[{providedIn:"root"}]}],r.ctorParameters=function(){return[{type:k,decorators:[{type:c.Inject,args:[w]}]}]},r.ngInjectableDef=c.defineInjectable({factory:function(){return new r(c.inject(w))},token:r,providedIn:"root"}),r}(),V=function(o){function r(r,e){var t=o.call(this)||this;return t.componentFactoryResolver=r,t.controlService=e,t}return u(r,o),r.prototype.ngOnInit=function(){var r=this.controlService.resolve(this.control),e=this.componentFactoryResolver.resolveComponentFactory(r);this.viewContainerRef.clear();var t=this.viewContainerRef.createComponent(e),o=t.instance;o.control=this.control,o.form=this.form,"function"==typeof o.ControlInit&&o.ControlInit(),this.componentRef=t},r.prototype.ngOnDestroy=function(){this.componentRef.destroy()},r.decorators=[{type:c.Component,args:[{selector:"control-outlet",template:"<ng-template #outlet></ng-template>"}]}],r.ctorParameters=function(){return[{type:c.ComponentFactoryResolver},{type:O}]},r.propDecorators={control:[{type:c.Input}],form:[{type:c.Input}],viewContainerRef:[{type:c.ViewChild,args:["outlet",{read:c.ViewContainerRef}]}]},r}(n.DisposableComponent),S=function(r){function e(){return null!==r&&r.apply(this,arguments)||this}return u(e,r),e.decorators=[{type:c.Component,args:[{selector:"controls-component",template:'<ng-container *ngFor="let control of controls">\n\t<control-outlet class="form-group" [control]="control" [form]="form"></control-outlet>\n</ng-container>'}]}],e.propDecorators={controls:[{type:c.Input}],form:[{type:c.Input}]},e}(n.DisposableComponent),q=function(){function r(){var e=this;this.values=new l.BehaviorSubject(null),this.debounced$=this.values.pipe(i.debounceTime(250),i.switchMap(function(r){return e.exists$(r)}),i.catchError(function(r){return console.log("ExistsValidator.debounced$.catchError",r),l.of(null)}),i.take(1))}return Object.defineProperty(r.prototype,"value",{set:function(r){r&&""!==r.trim()&&this.values.next(r)},enumerable:!0,configurable:!0}),r.prototype.exists$=function(r){return"function"==typeof this.exists?this.exists(r).pipe(i.switchMap(function(r){return r?l.of({exists:!0}):l.of(null)})):l.of(null)},r.prototype.validate=function(r){return this.value=r.value,this.debounced$},r.decorators=[{type:c.Directive,args:[{selector:"[exists][formControlName],[exists][formControl],[exists][ngModel]",providers:[{provide:a.NG_ASYNC_VALIDATORS,useExisting:c.forwardRef(function(){return r}),multi:!0}]}]}],r.propDecorators={exists:[{type:c.Input}]},r}(),A=function(){function r(r,e){this.match=r,this.reverse=e}return Object.defineProperty(r.prototype,"isReverse",{get:function(){return!!this.reverse&&"true"===this.reverse},enumerable:!0,configurable:!0}),r.prototype.validate=function(r){var e=r.value,t=r.root.get(this.match);return t&&e!==t.value&&!this.isReverse?{match:!0}:(t&&e===t.value&&this.isReverse&&(delete t.errors.match,Object.keys(t.errors).length||t.setErrors(null)),t&&e!==t.value&&this.isReverse&&t.setErrors({match:!0}),null)},r.decorators=[{type:c.Directive,args:[{selector:"[match][formControlName],[match][formControl],[match][ngModel]",providers:[{provide:a.NG_VALIDATORS,useExisting:c.forwardRef(function(){return r}),multi:!0}]}]}],r.ctorParameters=function(){return[{type:String,decorators:[{type:c.Attribute,args:["match"]}]},{type:String,decorators:[{type:c.Attribute,args:["reverse"]}]}]},r}(),j=function(){function r(){this.ngModelChange=new c.EventEmitter}return r.prototype.onInputChange=function(r){this.value=r.target.value.toUpperCase(),this.ngModelChange.emit(this.value)},r.decorators=[{type:c.Directive,args:[{selector:"[ngModel][uppercase]"}]}],r.propDecorators={ngModelChange:[{type:c.Output}],onInputChange:[{type:c.HostListener,args:["input",["$event"]]}]},r}(),P=function rr(){},N=function(){function t(r){void 0===r&&(r={}),this.component="ControlBaseComponent",this.schema="base",this._originalValue=r.value,this.value=r.value,this.key=r.key;var e=(r.key||"Control")+" "+ ++t.uid;this.label=r.label||e,this.placeholder=r.placeholder||e,this.order=r.order===undefined?1:r.order,this.schema=r.schema||"text",this.type=r.type||this.schema,this.min=r.min||null,this.max=r.max||null,this.required=!!r.required,this.requiredTrue=!!r.requiredTrue,this.email=!!r.email,this.minlength=r.minlength||null,this.maxlength=r.maxlength||null,this.pattern=r.pattern||null,this.match=r.match||null,this.reverse=!!r.reverse,this.options=r.options||[],this.disabled=!!r.disabled,this.step=r.step||null,this.format=r.format||null}return t.uid=0,t}(),G=function(t){function r(r){void 0===r&&(r={});var e=t.call(this,r)||this;return e.component="ControlCheckboxComponent",e.schema="checkbox",e.type=r.type||e.type,e}return u(r,t),r}(N),D=function(t){function r(r){void 0===r&&(r={});var e=t.call(this,r)||this;return e.component="ControlEmailComponent",e.schema="email",e.type=r.type||e.type,e.email=!0,e.pattern=r.pattern||"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}",e}return u(r,t),r}(N),F=function(t){function r(r){void 0===r&&(r={});var e=t.call(this,r)||this;return e.component="ControlMarkdownComponent",e.schema="markdown",e.type=r.type||e.type,e}return u(r,t),r}(N),M=function(t){function r(r){void 0===r&&(r={});var e=t.call(this,r)||this;return e.component="ControlNumberComponent",e.schema="number",e.type=r.type||e.type,e}return u(r,t),r}(N),T=function(t){function r(r){void 0===r&&(r={});var e=t.call(this,r)||this;return e.component="ControlPasswordComponent",e.schema="password",e.type=r.type||e.type,e}return u(r,t),r}(N),L=function(t){function r(r){void 0===r&&(r={});var e=t.call(this,r)||this;return e.component="ControlRadioComponent",e.schema="radio",e.type=r.type||e.type,e}return u(r,t),r}(N),U=function(t){function r(r){void 0===r&&(r={});var e=t.call(this,r)||this;return e.component="ControlSelectComponent",e.schema="select",e.options=[],e.options=r.options||[],e}return u(r,t),r}(N),$=function(t){function r(r){void 0===r&&(r={});var e=t.call(this,r)||this;return e.component="ControlTextComponent",e.schema="text",e.type=r.type||e.type,e}return u(r,t),r}(N),B=function(){function r(r){this.controlService=r}return r.prototype.getControlsFromOptions=function(r){var e=r.map(function(r){switch(r.schema){case"checkbox":return new G(r);case"email":return new D(r);case"number":return new M(r);case"password":return new T(r);case"radio":return new L(r);case"select":return new U(r);case"markdown":return new F(r);case"text":default:return new $(r)}});return e.sort(function(r,e){return r.order-e.order}),e},r.prototype.getGroupFromOptions=function(r){var e=this.getControlsFromOptions(r);return this.controlService.toFormGroup(e)},r.prototype.getGroupFromControls=function(r){return this.controlService.toFormGroup(r)},r.decorators=[{type:c.Injectable,args:[{providedIn:"root"}]}],r.ctorParameters=function(){return[{type:O}]},r.ngInjectableDef=c.defineInjectable({factory:function(){return new r(c.inject(O))},token:r,providedIn:"root"}),r}(),z=[O,B],Z=[S,E,V,d,m,h,v,g,y,b,C,R,x],H=[j],Y=[],J=[q,A],K=function(){function e(r){}return e.forRoot=function(r){return{ngModule:e,providers:[{provide:w,useValue:r}]}},e.decorators=[{type:c.NgModule,args:[{imports:[t.CommonModule,o.HttpClientModule,a.FormsModule,a.ReactiveFormsModule,n.CoreModule],providers:f(z,Y,J),declarations:f(Z,H,Y,J),entryComponents:f(Z),exports:f(Z,H,Y,J)}]}],e.ctorParameters=function(){return[{type:e,decorators:[{type:c.Optional},{type:c.SkipSelf}]}]},e}(),Q=function(){function r(){this.changed=new Array,this.touched=new Array}return Object.defineProperty(r.prototype,"value",{get:function(){return this.innerValue},set:function(e){this.innerValue!==e&&(this.innerValue=e,this.changed.forEach(function(r){return r(e)}))},enumerable:!0,configurable:!0}),r.prototype.touch=function(){this.touched.forEach(function(r){return r()})},r.prototype.writeValue=function(r){this.innerValue=r},r.prototype.registerOnChange=function(r){this.changed.push(r)},r.prototype.registerOnTouched=function(r){this.touched.push(r)},r}(),W=function(t){function r(r){void 0===r&&(r={});var e=t.call(this,r)||this;return e.component="ControlTextareaComponent",e.schema="textarea",e.type=r.type||e.type,e}return u(r,t),r}(N);r.ControlConfig=k,r.CONTROL_CONFIG=w,r.ControlModuleComponent=E,r.ControlModule=K,r.ControlBase=N,r.ControlBaseOptions=P,r.ControlBaseComponent=d,r.ControlCheckbox=G,r.ControlCheckboxComponent=m,r.ControlOutletComponent=V,r.ValueAccessorBase=Q,r.ControlService=O,r.ControlsComponent=S,r.ControlEmail=D,r.ControlEmailComponent=h,r.ControlMarkdown=F,r.ControlMarkdownComponent=v,r.ControlNumber=M,r.ControlNumberComponent=g,r.ControlPassword=T,r.ControlPasswordComponent=y,r.ControlRadio=L,r.ControlRadioComponent=b,r.ControlSelect=U,r.ControlSelectComponent=C,r.ControlText=$,r.ControlTextComponent=R,r.ControlTextarea=W,r.ControlTextareaComponent=x,r.ExistsValidator=q,r.MatchValidator=A,r.matchValidator=_,r.UppercaseDirective=j,r.FormService=B,Object.defineProperty(r,"__esModule",{value:!0})});
//# sourceMappingURL=designr-control.umd.min.js.map