!function(t,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@angular/common"),require("@angular/common/http"),require("@designr/core"),require("rxjs"),require("rxjs/operators"),require("@angular/forms"),require("@angular/core")):"function"==typeof define&&define.amd?define("@designr/control",["exports","@angular/common","@angular/common/http","@designr/core","rxjs","rxjs/operators","@angular/forms","@angular/core"],r):r((t.designr=t.designr||{},t.designr.control={}),t.ng.common,t.ng.common.http,t.core,t.rxjs,t.rxjs.operators,t.ng.forms,t.ng.core)}(this,function(t,o,e,n,l,i,a,s){"use strict";var c=function(t,r){return(c=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)r.hasOwnProperty(o)&&(t[o]=r[o])})(t,r)};function p(t,r){function o(){this.constructor=t}c(t,r),t.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}var r=function(){return(r=Object.assign||function(t){for(var r,o=1,e=arguments.length;o<e;o++)for(var n in r=arguments[o])Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n]);return t}).apply(this,arguments)};function u(t,r){var o="function"==typeof Symbol&&t[Symbol.iterator];if(!o)return t;var e,n,l=o.call(t),i=[];try{for(;(void 0===r||0<r--)&&!(e=l.next()).done;)i.push(e.value)}catch(a){n={error:a}}finally{try{e&&!e.done&&(o=l["return"])&&o.call(l)}finally{if(n)throw n.error}}return i}function d(){for(var t=[],r=0;r<arguments.length;r++)t=t.concat(u(arguments[r]));return t}var m=function tt(t){this.schema="text",t&&Object.assign(this,t)},f=function(r){function t(){var t=null!==r&&r.apply(this,arguments)||this;return t.schema="checkbox",t}return p(t,r),t}(m),h=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return p(r,t),Object.defineProperty(r.prototype,"control",{get:function(){return this.form.controls[this.option.key]},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"isValid",{get:function(){return this.control.valid},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"classes",{get:function(){return{valid:this.control.valid,invalid:this.control.invalid,dirty:this.control.dirty,empty:null==this.control.value,required:this.option.required||this.option.requiredTrue}},enumerable:!0,configurable:!0}),r.decorators=[{type:s.Component,args:[{selector:"control-component",template:'<ng-container [formGroup]="form">\r\n\t<div class="form-input" [ngClass]="{\r\n\t\t\tvalid: control.valid,\r\n\t\t\tinvalid: control.invalid,\r\n\t\t\tdirty: control.dirty,\r\n\t\t\tempty: !control.value\r\n\t\t}">\r\n\t\t<label class="form-label" [attr.for]="option.key">{{ option.label | label }}</label>\r\n\t\t<input class="form-control" placeholder="{{ option.placeholder | label }}" [id]="option.key" [formControlName]="option.key" type="text">\r\n\t\t<div class="alert alert--danger" *ngIf="control.invalid && (control.dirty || control.touched)">\r\n\t\t\t<div *ngIf="control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t</div>\r\n\t</div>\r\n</ng-container>\r\n'}]}],r.propDecorators={option:[{type:s.Input}],form:[{type:s.Input}]},r}(n.DisposableComponent),v=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return p(r,t),r.decorators=[{type:s.Component,args:[{selector:"control-checkbox-component",template:'<ng-container [formGroup]="form">\r\n\t<div class="form-checkbox" [ngClass]="classes">\r\n\t\t<label class="form-label">\r\n\t\t\t<input class="form-checkbox__input" type="checkbox" [id]="option.key" [formControlName]="option.key">\r\n\t\t\t<span class="form-checkbox__label">{{ option.label | label }}</span>\r\n\t\t</label>\r\n\t\t<div class="alert alert--danger" *ngIf="control.invalid && (control.dirty || control.touched)">\r\n\t\t\t<div *ngIf="control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="control.errors.requiredTrue">{{ \'errors.required\' | label }}</div>\r\n\t\t</div>\r\n\t</div>\r\n</ng-container>\r\n'}]}],r.propDecorators={option:[{type:s.Input}]},r}(h),g=function(r){function t(){var t=null!==r&&r.apply(this,arguments)||this;return t.schema="email",t.pattern="[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}",t}return p(t,r),t}(m),y=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return p(r,t),r.decorators=[{type:s.Component,args:[{selector:"control-email-component",template:'<ng-container [formGroup]="form">\r\n\t<div class="form-input" [ngClass]="classes">\r\n\t\t<label class="form-label" [attr.for]="option.key">{{ option.label | label }}</label>\r\n\t\t<input class="form-control" placeholder="{{ option.placeholder | label }}" [id]="option.key" [formControlName]="option.key" type="email">\r\n\t\t<div class="alert alert--danger" *ngIf="control.invalid && (control.dirty || control.touched)">\r\n\t\t\t<div *ngIf="control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="control.errors.email">{{ \'errors.email\' | label }}</div>\r\n\t\t\t<div *ngIf="control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: option.minlength } }}</div>\r\n\t\t\t<div *ngIf="control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: option.maxlength } }}</div>\r\n\t\t\t<div *ngIf="control.errors.pattern">{{ \'errors.pattern\' | label }}</div>\r\n\t\t\t<div *ngIf="control.errors.match">{{ \'errors.match\' | label }}</div>\r\n\t\t</div>\r\n\t</div>\r\n</ng-container>\r\n'}]}],r.propDecorators={option:[{type:s.Input}]},r}(h),b=function(r){function t(){var t=null!==r&&r.apply(this,arguments)||this;return t.schema="markdown",t}return p(t,r),t}(m),C=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return p(r,t),r.decorators=[{type:s.Component,args:[{selector:"control-markdown-component",template:'<ng-container [formGroup]="form">\r\n\t<div class="form-input" [ngClass]="classes">\r\n\t\t<label class="form-label" [attr.for]="option.key">{{ option.label | label }}</label>\r\n\t\t<textarea class="form-control" placeholder="{{ option.placeholder | label }}" [id]="option.key" [formControlName]="option.key" rows="4"></textarea>\r\n\t\t<div class="alert alert--danger" *ngIf="control.invalid && (control.dirty || control.touched)">\r\n\t\t\t<div *ngIf="control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: option.minlength } }}</div>\r\n\t\t\t<div *ngIf="control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: option.maxlength } }}</div>\r\n\t\t</div>\r\n\t</div>\r\n</ng-container>\r\n'}]}],r.propDecorators={option:[{type:s.Input}]},r}(h),x=function(r){function t(){var t=null!==r&&r.apply(this,arguments)||this;return t.schema="number",t}return p(t,r),t}(m),I=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return p(r,t),r.decorators=[{type:s.Component,args:[{selector:"control-number-component",template:'<ng-container [formGroup]="form">\r\n\t<div class="form-input" [ngClass]="classes">\r\n\t\t<label class="form-label" [attr.for]="option.key">{{ option.label | label }}</label>\r\n\t\t<input class="form-control" placeholder="{{ option.placeholder | label }}" [id]="option.key" [formControlName]="option.key" type="number" [attr.step]="option.step">\r\n\t\t<div class="alert alert--danger" *ngIf="control.invalid && (control.dirty || control.touched)">\r\n\t\t\t<div *ngIf="control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="control.errors.min">{{ \'errors.min\' | label : null : { min: option.min } }}</div>\r\n\t\t\t<div *ngIf="control.errors.max">{{ \'errors.max\' | label : null : { max: option.max } }}</div>\r\n\t\t</div>\r\n\t</div>\r\n</ng-container>\r\n'}]}],r.propDecorators={option:[{type:s.Input}]},r}(h),k=function(r){function t(){var t=null!==r&&r.apply(this,arguments)||this;return t.schema="password",t}return p(t,r),t}(m),w=function(r){function t(){var t=null!==r&&r.apply(this,arguments)||this;return t.reveal={checked:!1},t}return p(t,r),t.decorators=[{type:s.Component,args:[{selector:"control-password-component",template:'<ng-container [formGroup]="form">\r\n\t<div class="form-input" [ngClass]="classes">\r\n\t\t<label class="form-label" [attr.for]="option.key">{{ option.label | label }}</label>\r\n\t\t<div class="input-group">\r\n\t\t\t<input class="form-control" placeholder="{{ option.placeholder | label }}" [id]="option.key" [formControlName]="option.key" type="password" #password>\r\n\t\t\t<input class="form-control--addon" type="checkbox" [attr.aria-label]="option.label | label" (input)="password.setAttribute(\'type\', reveal.checked ? \'text\' : \'password\')" #reveal>\r\n\t\t</div>\r\n\t\t<div class="alert alert--danger" *ngIf="control.invalid && (control.dirty || control.touched)">\r\n\t\t\t<div *ngIf="control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: option.minlength } }}</div>\r\n\t\t\t<div *ngIf="control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: option.maxlength } }}</div>\r\n\t\t\t<div *ngIf="control.errors.pattern">{{ \'errors.pattern\' | label }}</div>\r\n\t\t\t<div *ngIf="control.errors.match">{{ \'errors.match\' | label }}</div>\r\n\t\t</div>\r\n\t</div>\r\n</ng-container>\r\n'}]}],t.propDecorators={option:[{type:s.Input}]},t}(h),O=function(r){function t(){var t=null!==r&&r.apply(this,arguments)||this;return t.schema="radio",t}return p(t,r),t}(m),q=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return p(r,t),r.decorators=[{type:s.Component,args:[{selector:"control-radio-component",template:'<ng-container [formGroup]="form">\r\n\t<div class="form-radio" [ngClass]="classes">\r\n\t\t<label class="form-label">\r\n\t\t\t<input class="form-radio__input" type="radio" [id]="option.key" [formControlName]="option.key">\r\n\t\t\t<span class="form-radio__label">{{ option.label | label }}</span>\r\n\t\t</label>\r\n\t\t<div class="alert alert--danger" *ngIf="control.invalid && (control.dirty || control.touched)">\r\n\t\t\t<div *ngIf="control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t</div>\r\n\t</div>\r\n</ng-container>\r\n'}]}],r.propDecorators={option:[{type:s.Input}]},r}(h),j=function(r){function t(){var t=null!==r&&r.apply(this,arguments)||this;return t.schema="select",t}return p(t,r),t}(m),V=function(r){function t(){var t=r.call(this)||this;return t.options=[],t}return p(t,r),t.prototype.ngOnInit=function(){var r=this;this.options$().pipe(i.takeUntil(this.unsubscribe)).subscribe(function(t){return r.options=t})},t.prototype.options$=function(){var t=this.option.options;return t?l.isObservable(t)?t:Array.isArray(t)?l.of(t):l.of([]):l.of([])},t.decorators=[{type:s.Component,args:[{selector:"control-select-component",template:'<ng-container [formGroup]="form">\r\n\t<div class="form-select" [ngClass]="classes">\r\n\t\t<label class="form-label" [attr.for]="option.key">{{ option.label | label }}</label>\r\n\t\t<div class="form-select__select">\r\n\t\t\t<select [id]="option.key" [formControlName]="option.key">\r\n\t\t\t\t<option *ngFor="let item of options" [ngValue]="item?.value">{{item?.label}}</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div class="alert alert--danger" *ngIf="control.invalid && (control.dirty || control.touched)">\r\n\t\t\t<div *ngIf="control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t</div>\r\n\t</div>\r\n</ng-container>\r\n'}]}],t.ctorParameters=function(){return[]},t.propDecorators={option:[{type:s.Input}]},t}(h),D=function(r){function t(){var t=null!==r&&r.apply(this,arguments)||this;return t.schema="text",t}return p(t,r),t}(m),_=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return p(r,t),r.decorators=[{type:s.Component,args:[{selector:"control-text-component",template:'<ng-container [formGroup]="form">\r\n\t<div class="form-input" [ngClass]="classes">\r\n\t\t<label class="form-label" [attr.for]="option.key">{{ option.label | label }}</label>\r\n\t\t<input class="form-control" placeholder="{{ option.placeholder | label }}" [id]="option.key" [formControlName]="option.key" type="text">\r\n\t\t<div class="alert alert--danger" *ngIf="control.invalid && (control.dirty || control.touched)">\r\n\t\t\t<div *ngIf="control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: option.minlength } }}</div>\r\n\t\t\t<div *ngIf="control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: option.maxlength } }}</div>\r\n\t\t\t<div *ngIf="control.errors.pattern">{{ \'errors.pattern\' | label }}</div>\r\n\t\t\t<div *ngIf="control.errors.match">{{ \'errors.match\' | label }}</div>\r\n\t\t</div>\r\n\t</div>\r\n</ng-container>\r\n'}]}],r.propDecorators={option:[{type:s.Input}]},r}(h),R=function(r){function t(){var t=null!==r&&r.apply(this,arguments)||this;return t.schema="textarea",t}return p(t,r),t}(m),E=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return p(r,t),r.decorators=[{type:s.Component,args:[{selector:"control-textarea-component",template:'<ng-container [formGroup]="form">\r\n\t<div class="form-input" [ngClass]="classes">\r\n\t\t<label class="form-label" [attr.for]="option.key">{{ option.label | label }}</label>\r\n\t\t<textarea class="form-control" placeholder="{{ option.placeholder | label }}" [id]="option.key" [formControlName]="option.key" rows="4"></textarea>\r\n\t\t<div class="alert alert--danger" *ngIf="control.invalid && (control.dirty || control.touched)">\r\n\t\t\t<div *ngIf="control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: option.minlength } }}</div>\r\n\t\t\t<div *ngIf="control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: option.maxlength } }}</div>\r\n\t\t</div>\r\n\t</div>\r\n</ng-container>\r\n'}]}],r.propDecorators={option:[{type:s.Input}]},r}(h),S=[v,y,C,I,w,q,V,_,E],M={checkbox:{component:v,model:f},email:{component:y,model:g},markdown:{component:C,model:b},number:{component:I,model:x},password:{component:w,model:k},radio:{component:q,model:O},select:{component:V,model:j},text:{component:_,model:D},textarea:{component:E,model:R}},N=function rt(t){this.controls={},t&&(Object.assign(this,t),this.controls=r({},M,t.controls||{}))},P=new s.InjectionToken("control.config"),G=function(){function t(){this.version="0.0.6"}return t.prototype.ngOnInit=function(){},t.decorators=[{type:s.Component,args:[{selector:"control-module",template:'<span class="control-module">control {{version}}</span>'}]}],t.ctorParameters=function(){return[]},t}();function F(e,n,l){return void 0===n&&(n=!1),function(t){var r=l.controls[e],o=t.value;return r&&o!==r.value&&!n?{match:!0}:(r&&o===r.value&&n&&r.errors&&(delete r.errors.match,Object.keys(r.errors).length||r.setErrors(null)),r&&o!==r.value&&n&&r.setErrors({match:!0}),null)}}var A=function(){function t(t){this.options=new N(t||{})}return t.prototype.resolve=function(t){return t&&this.options.controls[t.schema].component||h},t.prototype.getValidators=function(t,r){var o=[];return t.min&&o.push(a.Validators.min(t.min)),t.max&&o.push(a.Validators.max(t.max)),t.required&&o.push(a.Validators.required),t.requiredTrue&&o.push(a.Validators.requiredTrue),t.minlength&&o.push(a.Validators.minLength(t.minlength)),t.maxlength&&o.push(a.Validators.maxLength(t.maxlength)),t.pattern&&o.push(a.Validators.pattern(t.pattern)),t.match&&o.push(F(t.match,t.reverse,r)),"email"===t.schema&&o.push(a.Validators.email),o},t.prototype.toFormGroup=function(t){var o=this,e={};t.forEach(function(t){var r=new a.FormControl(t.value);t.disabled&&r.disable(),e[t.key]=r});var n=new a.FormGroup(e);return t.forEach(function(t){var r=o.getValidators(t,n);n.controls[t.key].setValidators(r)}),n},t.decorators=[{type:s.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:N,decorators:[{type:s.Inject,args:[P]}]}]},t.ngInjectableDef=s.defineInjectable({factory:function(){return new t(s.inject(P))},token:t,providedIn:"root"}),t}(),T=function(){function t(t,r){this.componentFactoryResolver=t,this.controlService=r}return t.prototype.ngOnInit=function(){var t=this.controlService.resolve(this.option),r=this.componentFactoryResolver.resolveComponentFactory(t);this.viewContainerRef.clear();var o=this.viewContainerRef.createComponent(r),e=o.instance;e.option=this.option,e.form=this.form,"function"==typeof e.ControlInit&&e.ControlInit(),this.componentRef=o},t.prototype.ngOnDestroy=function(){this.componentRef.destroy()},t.decorators=[{type:s.Component,args:[{selector:"control-outlet",template:"<ng-template #outlet></ng-template>"}]}],t.ctorParameters=function(){return[{type:s.ComponentFactoryResolver},{type:A}]},t.propDecorators={option:[{type:s.Input}],form:[{type:s.Input}],viewContainerRef:[{type:s.ViewChild,args:["outlet",{read:s.ViewContainerRef}]}]},t}(),$={provide:a.NG_VALUE_ACCESSOR,useExisting:s.forwardRef(function(){return L}),multi:!0},L=function(){function t(t,r){this.renderer=t,this.element=r,this.onChange=function(t){},this.onTouched=function(){}}return t.prototype.formatValue=function(t){return t.toString()},t.prototype.parseValue=function(t){return t&&""!==t?t:null},t.prototype.writeValue=function(t){var r=this.formatValue(t);this.renderer.setProperty(this.element.nativeElement,"value",r)},t.prototype.registerOnChange=function(e){var n=this;this.onChange=function(t){var r=n.parseValue(t),o=n.formatValue(r);n.renderer.setProperty(n.element.nativeElement,"value",o),e(r)}},t.prototype.registerOnTouched=function(t){this.onTouched=t},t.prototype.setDisabledState=function(t){this.renderer.setProperty(this.element.nativeElement,"disabled",t)},t.decorators=[{type:s.Directive,args:[{selector:"input[designr-accessor][formControlName],input[designr-accessor][formControl],input[designr-accessor][ngModel]",host:{"(change)":"onChange($event.target.value)","(input)":"onChange($event.target.value)","(blur)":"onTouched()"},providers:[$]}]}],t.ctorParameters=function(){return[{type:s.Renderer2},{type:s.ElementRef}]},t}(),U=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return p(r,t),r.decorators=[{type:s.Component,args:[{selector:"controls-component",template:'<ng-container *ngFor="let option of options">\n\t<control-outlet class="form-group" [option]="option" [form]="form"></control-outlet>\n</ng-container>'}]}],r.propDecorators={options:[{type:s.Input}],form:[{type:s.Input}]},r}(n.DisposableComponent),z=function(){function t(){var r=this;this.values=new l.BehaviorSubject(null),this.debounced$=this.values.pipe(i.debounceTime(250),i.switchMap(function(t){return r.exists$(t)}),i.catchError(function(t){return console.log("ExistsValidator.debounced$.catchError",t),l.of(null)}),i.take(1))}return Object.defineProperty(t.prototype,"value",{set:function(t){t&&""!==t.trim()&&this.values.next(t)},enumerable:!0,configurable:!0}),t.prototype.exists$=function(t){return"function"==typeof this.exists?this.exists(t).pipe(i.switchMap(function(t){return t?l.of({exists:!0}):l.of(null)})):l.of(null)},t.prototype.validate=function(t){return this.value=t.value,this.debounced$},t.decorators=[{type:s.Directive,args:[{selector:"[exists][formControlName],[exists][formControl],[exists][ngModel]",providers:[{provide:a.NG_ASYNC_VALIDATORS,useExisting:s.forwardRef(function(){return t}),multi:!0}]}]}],t.propDecorators={exists:[{type:s.Input}]},t}(),Z=function(){function t(t,r){this.match=t,this.reverse=r}return Object.defineProperty(t.prototype,"isReverse",{get:function(){return!!this.reverse&&"true"===this.reverse},enumerable:!0,configurable:!0}),t.prototype.validate=function(t){var r=t.value,o=t.root.get(this.match);return o&&r!==o.value&&!this.isReverse?{match:!0}:(o&&r===o.value&&this.isReverse&&(delete o.errors.match,Object.keys(o.errors).length||o.setErrors(null)),o&&r!==o.value&&this.isReverse&&o.setErrors({match:!0}),null)},t.decorators=[{type:s.Directive,args:[{selector:"[match][formControlName],[match][formControl],[match][ngModel]",providers:[{provide:a.NG_VALIDATORS,useExisting:s.forwardRef(function(){return t}),multi:!0}]}]}],t.ctorParameters=function(){return[{type:String,decorators:[{type:s.Attribute,args:["match"]}]},{type:String,decorators:[{type:s.Attribute,args:["reverse"]}]}]},t}(),H=function(){function t(){this.ngModelChange=new s.EventEmitter}return t.prototype.onInputChange=function(t){this.value=t.target.value.toUpperCase(),this.ngModelChange.emit(this.value)},t.decorators=[{type:s.Directive,args:[{selector:"[ngModel][uppercase]"}]}],t.propDecorators={ngModelChange:[{type:s.Output}],onInputChange:[{type:s.HostListener,args:["input",["$event"]]}]},t}(),B=function(){function t(t){this.controlService=t}return t.prototype.getFormGroup=function(t){return this.controlService.toFormGroup(t)},t.prototype.getOptions=function(t){var o=this,r=t.map(function(t){var r=o.controlService.options.controls[t.schema];return r?new r.model(t):(console.error("missing option for key "+t.schema),null)}).filter(function(t){return t});return r.sort(function(t,r){return t.order-r.order}),r},t.prototype.getFormGroupFromOptions=function(t){return this.getFormGroup(this.getOptions(t))},t.decorators=[{type:s.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:A}]},t.ngInjectableDef=s.defineInjectable({factory:function(){return new t(s.inject(A))},token:t,providedIn:"root"}),t}(),Y=[A,B],J=d([U,G,T,h],S),K=[H,L],Q=[],W=[z,Z],X=function(){function r(t){}return r.forRoot=function(t){return{ngModule:r,providers:[{provide:P,useValue:t}]}},r.decorators=[{type:s.NgModule,args:[{imports:[o.CommonModule,e.HttpClientModule,a.FormsModule,a.ReactiveFormsModule,n.CoreModule],providers:d(Y,Q,W),declarations:d(J,K,Q,W),entryComponents:d(S),exports:d(J,K,Q,W)}]}],r.ctorParameters=function(){return[{type:r,decorators:[{type:s.Optional},{type:s.SkipSelf}]}]},r}();t.ControlConfig=N,t.CONTROL_CONFIG=P,t.ControlModuleComponent=G,t.ControlModule=X,t.ControlCheckbox=f,t.ControlCheckboxComponent=v,t.ControlOption=m,t.ControlOutletComponent=T,t.ControlAccessor=L,t.ControlComponent=h,t.ControlService=A,t.ControlsComponent=U,t.ControlEmail=g,t.ControlEmailComponent=y,t.ControlMarkdown=b,t.ControlMarkdownComponent=C,t.ControlNumber=x,t.ControlNumberComponent=I,t.ControlPassword=k,t.ControlPasswordComponent=w,t.ControlRadio=O,t.ControlRadioComponent=q,t.ControlSelect=j,t.ControlSelectComponent=V,t.ControlText=D,t.ControlTextComponent=_,t.ControlTextarea=R,t.ControlTextareaComponent=E,t.ExistsValidator=z,t.MatchValidator=Z,t.matchValidator=F,t.UppercaseDirective=H,t.FormService=B,t.ɵa=S,t.ɵb=$,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=designr-control.umd.min.js.map