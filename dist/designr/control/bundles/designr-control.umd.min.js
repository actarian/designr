!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/common"),require("@angular/common/http"),require("@designr/core"),require("rxjs"),require("rxjs/operators"),require("@angular/forms"),require("@angular/core")):"function"==typeof define&&define.amd?define("@designr/control",["exports","@angular/common","@angular/common/http","@designr/core","rxjs","rxjs/operators","@angular/forms","@angular/core"],e):e((t.designr=t.designr||{},t.designr.control={}),t.ng.common,t.ng.common.http,t.core,t.rxjs,t.rxjs.operators,t.ng.forms,t.ng.core)}(this,function(t,n,r,o,l,i,a,c){"use strict";var s=function(t,e){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};function p(t,e){function n(){this.constructor=t}s(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var e=function(){return(e=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var o in e=arguments[n])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)};function u(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,o,l=n.call(t),i=[];try{for(;(void 0===e||0<e--)&&!(r=l.next()).done;)i.push(r.value)}catch(a){o={error:a}}finally{try{r&&!r.done&&(n=l["return"])&&n.call(l)}finally{if(o)throw o.error}}return i}function m(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(u(arguments[e]));return t}var d=function tt(t){this.schema="text",t&&Object.assign(this,t)},f=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.schema="checkbox",t}return p(t,e),t}(d),g=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return p(e,t),Object.defineProperty(e.prototype,"context",{get:function(){return this},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"control",{get:function(){return this.form.controls[this.option.key]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isValid",{get:function(){return this.control.valid},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"classes",{get:function(){return{valid:this.control.valid,invalid:this.control.invalid,dirty:this.control.dirty,empty:null==this.control.value,required:Boolean(this.option.required||this.option.requiredTrue),disabled:this.option.disabled}},enumerable:!0,configurable:!0}),e.decorators=[{type:c.Component,args:[{selector:"control-component",template:'<ng-container [formGroup]="form">\r\n\r\n\t<ng-template #controlDef let-context>\r\n\t\t<div class="control" [ngClass]="context.classes">\r\n\t\t\t<ng-container *ngTemplateOutlet="context.labelRef || labelDef; context: { $implicit: context }"></ng-container>\r\n\t\t\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t\t\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n\t\t</div>\r\n\t</ng-template>\r\n\r\n\t<ng-template #labelDef let-context>\r\n\t\t<label class="form-label" [attr.for]="context.option.key">{{ context.option.label | label }}</label>\r\n\t</ng-template>\r\n\r\n\t<ng-template #inputDef let-context>\r\n\t\t<input class="form-control" placeholder="{{ context.option.placeholder | label }}" [id]="context.option.key" [formControlName]="context.option.key" type="text">\r\n\t</ng-template>\r\n\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="alert alert--danger" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.pattern">{{ \'errors.pattern\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.match">{{ \'errors.match\' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\r\n\t<ng-container *ngTemplateOutlet="controlRef || controlDef; context: { $implicit: context }"></ng-container>\r\n\r\n</ng-container>\r\n'}]}],e.propDecorators={controlRef:[{type:c.ContentChild,args:["controlRef"]}],labelRef:[{type:c.ContentChild,args:["labelRef"]}],inputRef:[{type:c.ContentChild,args:["inputRef"]}],errorRef:[{type:c.ContentChild,args:["errorRef"]}],option:[{type:c.Input}],form:[{type:c.Input}]},e}(o.DisposableComponent),h=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return p(e,t),e.decorators=[{type:c.Component,args:[{selector:"control-checkbox-component",template:'<ng-container [formGroup]="form">\r\n\t<div class="form-checkbox" [ngClass]="classes">\r\n\t\t<label class="form-label">\r\n\t\t\t<input class="form-checkbox__input" type="checkbox" [id]="option.key" [formControlName]="option.key">\r\n\t\t\t<span class="form-checkbox__label">{{ option.label | label }}</span>\r\n\t\t</label>\r\n\t\t<div class="alert alert--danger" *ngIf="control.invalid && (control.dirty || control.touched)">\r\n\t\t\t<div *ngIf="control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="control.errors.requiredTrue">{{ \'errors.required\' | label }}</div>\r\n\t\t</div>\r\n\t</div>\r\n</ng-container>\r\n'}]}],e.propDecorators={option:[{type:c.Input}]},e}(g),v=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.schema="email",t.pattern="[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}",t}return p(t,e),t}(d),y=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return p(e,t),e.decorators=[{type:c.Component,args:[{selector:"control-email-component",template:'<ng-container [formGroup]="form">\r\n\r\n\t<ng-template #controlDef let-context>\r\n\t\t<div class="control" [ngClass]="context.classes">\r\n\t\t\t<ng-container *ngTemplateOutlet="context.labelRef || labelDef; context: { $implicit: context }"></ng-container>\r\n\t\t\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t\t\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n\t\t</div>\r\n\t</ng-template>\r\n\r\n\t<ng-template #labelDef let-context>\r\n\t\t<label class="form-label" [attr.for]="context.option.key">{{ context.option.label | label }}</label>\r\n\t</ng-template>\r\n\r\n\t<ng-template #inputDef let-context>\r\n\t\t<input class="form-control" placeholder="{{ context.option.placeholder | label }}" [id]="context.option.key" [formControlName]="context.option.key" type="email">\r\n\t</ng-template>\r\n\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="alert alert--danger" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.email">{{ \'errors.email\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.pattern">{{ \'errors.pattern\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.match">{{ \'errors.match\' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\r\n\t<ng-container *ngTemplateOutlet="controlRef || controlDef; context: { $implicit: context }"></ng-container>\r\n\r\n</ng-container>\r\n'}]}],e.propDecorators={option:[{type:c.Input}]},e}(g),b=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.schema="markdown",t}return p(t,e),t}(d),x=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return p(e,t),e.decorators=[{type:c.Component,args:[{selector:"control-markdown-component",template:'<ng-container [formGroup]="form">\r\n\t<div class="form-input" [ngClass]="classes">\r\n\t\t<label class="form-label" [attr.for]="option.key">{{ option.label | label }}</label>\r\n\t\t<textarea class="form-control" placeholder="{{ option.placeholder | label }}" [id]="option.key" [formControlName]="option.key" rows="4"></textarea>\r\n\t\t<div class="alert alert--danger" *ngIf="control.invalid && (control.dirty || control.touched)">\r\n\t\t\t<div *ngIf="control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: option.minlength } }}</div>\r\n\t\t\t<div *ngIf="control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: option.maxlength } }}</div>\r\n\t\t</div>\r\n\t</div>\r\n</ng-container>\r\n'}]}],e.propDecorators={option:[{type:c.Input}]},e}(g),C=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.schema="number",t}return p(t,e),t}(d),I=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return p(e,t),e.decorators=[{type:c.Component,args:[{selector:"control-number-component",template:'<ng-container [formGroup]="form">\r\n\t<div class="form-input" [ngClass]="classes">\r\n\t\t<label class="form-label" [attr.for]="option.key">{{ option.label | label }}</label>\r\n\t\t<input class="form-control" placeholder="{{ option.placeholder | label }}" [id]="option.key" [formControlName]="option.key" type="number" [attr.step]="option.step">\r\n\t\t<div class="alert alert--danger" *ngIf="control.invalid && (control.dirty || control.touched)">\r\n\t\t\t<div *ngIf="control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="control.errors.min">{{ \'errors.min\' | label : null : { min: option.min } }}</div>\r\n\t\t\t<div *ngIf="control.errors.max">{{ \'errors.max\' | label : null : { max: option.max } }}</div>\r\n\t\t</div>\r\n\t</div>\r\n</ng-container>\r\n'}]}],e.propDecorators={option:[{type:c.Input}]},e}(g),k=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.schema="password",t}return p(t,e),t}(d),O=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.reveal={checked:!1},t}return p(t,e),t.decorators=[{type:c.Component,args:[{selector:"control-password-component",template:'<ng-container [formGroup]="form">\r\n\t<div class="form-input" [ngClass]="classes">\r\n\t\t<label class="form-label" [attr.for]="option.key">{{ option.label | label }}</label>\r\n\t\t<div class="input-group">\r\n\t\t\t<input class="form-control" placeholder="{{ option.placeholder | label }}" [id]="option.key" [formControlName]="option.key" type="password" #password>\r\n\t\t\t<input class="form-control--addon" type="checkbox" [attr.aria-label]="option.label | label" (input)="password.setAttribute(\'type\', reveal.checked ? \'text\' : \'password\')" #reveal>\r\n\t\t</div>\r\n\t\t<div class="alert alert--danger" *ngIf="control.invalid && (control.dirty || control.touched)">\r\n\t\t\t<div *ngIf="control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: option.minlength } }}</div>\r\n\t\t\t<div *ngIf="control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: option.maxlength } }}</div>\r\n\t\t\t<div *ngIf="control.errors.pattern">{{ \'errors.pattern\' | label }}</div>\r\n\t\t\t<div *ngIf="control.errors.match">{{ \'errors.match\' | label }}</div>\r\n\t\t</div>\r\n\t</div>\r\n</ng-container>\r\n'}]}],t.propDecorators={option:[{type:c.Input}]},t}(g),D=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.schema="radio",t}return p(t,e),t}(d),R=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return p(e,t),e.decorators=[{type:c.Component,args:[{selector:"control-radio-component",template:'<ng-container [formGroup]="form">\r\n\t<div class="form-radio" [ngClass]="classes">\r\n\t\t<label class="form-label">\r\n\t\t\t<input class="form-radio__input" type="radio" [id]="option.key" [formControlName]="option.key">\r\n\t\t\t<span class="form-radio__label">{{ option.label | label }}</span>\r\n\t\t</label>\r\n\t\t<div class="alert alert--danger" *ngIf="control.invalid && (control.dirty || control.touched)">\r\n\t\t\t<div *ngIf="control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t</div>\r\n\t</div>\r\n</ng-container>\r\n'}]}],e.propDecorators={option:[{type:c.Input}]},e}(g),w=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.schema="select",t}return p(t,e),t}(d),j=function(e){function t(){var t=e.call(this)||this;return t.options=[],t.getValue=t.getValue_.bind(t),t.compareWith=t.compareWith_.bind(t),t}return p(t,e),t.prototype.ngOnInit=function(){var e=this;this.options$().pipe(i.takeUntil(this.unsubscribe)).subscribe(function(t){return e.options=t})},t.prototype.options$=function(){var t=this.option.options;return t?l.isObservable(t)?t:Array.isArray(t)?l.of(t):l.of([]):l.of([])},t.prototype.getValue_=function(t){return this.option.asObject?t:t.id},t.prototype.compareWith_=function(t,e){return this.option.asObject?(t=t,(e=e)?t.id===e.id:null===t.id):e?t===e:null===t},t.decorators=[{type:c.Component,args:[{selector:"control-select-component",template:'<ng-container [formGroup]="form">\r\n\t<div class="form-select" [ngClass]="classes">\r\n\t\t<label class="form-label" [attr.for]="option.key">{{ option.label | label }}</label>\r\n\t\t<div class="form-select__select">\r\n\t\t\t<select [id]="option.key" [formControlName]="option.key" [compareWith]="compareWith">\r\n\t\t\t\t<option *ngFor="let item of options" [ngValue]="getValue(item)">{{item?.name}}</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div class="alert alert--danger" *ngIf="control.invalid && (control.dirty || control.touched)">\r\n\t\t\t<div *ngIf="control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t</div>\r\n\t</div>\r\n</ng-container>\r\n'}]}],t.ctorParameters=function(){return[]},t.propDecorators={option:[{type:c.Input}]},t}(g),q=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.schema="text",t}return p(t,e),t}(d),V=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return p(e,t),e.decorators=[{type:c.Component,args:[{selector:"control-text-component",template:'<ng-container [formGroup]="form">\r\n\r\n\t<ng-template #controlDef let-context>\r\n\t\t<div class="control" [ngClass]="context.classes">\r\n\t\t\t<ng-container *ngTemplateOutlet="context.labelRef || labelDef; context: { $implicit: context }"></ng-container>\r\n\t\t\t<ng-container *ngTemplateOutlet="context.inputRef || inputDef; context: { $implicit: context }"></ng-container>\r\n\t\t\t<ng-container *ngTemplateOutlet="context.errorRef || errorDef; context: { $implicit: context }"></ng-container>\r\n\t\t</div>\r\n\t</ng-template>\r\n\r\n\t<ng-template #labelDef let-context>\r\n\t\t<label class="form-label" [attr.for]="context.option.key">{{ context.option.label | label }}</label>\r\n\t</ng-template>\r\n\r\n\t<ng-template #inputDef let-context>\r\n\t\t<input class="form-control" placeholder="{{ context.option.placeholder | label }}" [id]="context.option.key" [formControlName]="context.option.key" type="text">\r\n\t</ng-template>\r\n\r\n\t<ng-template #errorDef let-context>\r\n\t\t<div class="alert alert--danger" *ngIf="context.control.invalid && (context.control.dirty || context.control.touched)">\r\n\t\t\t<div *ngIf="context.control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: context.option.minlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: context.option.maxlength } }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.pattern">{{ \'errors.pattern\' | label }}</div>\r\n\t\t\t<div *ngIf="context.control.errors.match">{{ \'errors.match\' | label }}</div>\r\n\t\t</div>\r\n\t</ng-template>\r\n\r\n\t<ng-container *ngTemplateOutlet="controlRef || controlDef; context: { $implicit: context }"></ng-container>\r\n\r\n</ng-container>\r\n'}]}],e.propDecorators={option:[{type:c.Input}]},e}(g),_=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.schema="textarea",t}return p(t,e),t}(d),T=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return p(e,t),e.decorators=[{type:c.Component,args:[{selector:"control-textarea-component",template:'<ng-container [formGroup]="form">\r\n\t<div class="form-input" [ngClass]="classes">\r\n\t\t<label class="form-label" [attr.for]="option.key">{{ option.label | label }}</label>\r\n\t\t<textarea class="form-control" placeholder="{{ option.placeholder | label }}" [id]="option.key" [formControlName]="option.key" rows="4"></textarea>\r\n\t\t<div class="alert alert--danger" *ngIf="control.invalid && (control.dirty || control.touched)">\r\n\t\t\t<div *ngIf="control.errors.required">{{ \'errors.required\' | label }}</div>\r\n\t\t\t<div *ngIf="control.errors.minlength">{{ \'errors.minlength\' | label : null : { minlength: option.minlength } }}</div>\r\n\t\t\t<div *ngIf="control.errors.maxlength">{{ \'errors.maxlength\' | label : null : { maxlength: option.maxlength } }}</div>\r\n\t\t</div>\r\n\t</div>\r\n</ng-container>\r\n'}]}],e.propDecorators={option:[{type:c.Input}]},e}(g),P=[h,y,x,I,O,R,j,V,T],E={checkbox:{component:h,model:f},email:{component:y,model:v},markdown:{component:x,model:b},number:{component:I,model:C},password:{component:O,model:k},radio:{component:R,model:D},select:{component:j,model:w},text:{component:V,model:q},textarea:{component:T,model:_}},N=function et(t){this.controls={},t&&(Object.assign(this,t),this.controls=e({},E,t.controls||{}))},S=new c.InjectionToken("control.config"),M=function(){function t(){this.version="0.0.7"}return t.prototype.ngOnInit=function(){},t.decorators=[{type:c.Component,args:[{selector:"control-module",template:'<span class="control-module">control {{version}}</span>'}]}],t.ctorParameters=function(){return[]},t}();function $(r,o,l){return void 0===o&&(o=!1),function(t){var e=l.controls[r],n=t.value;return e&&n!==e.value&&!o?{match:!0}:(e&&n===e.value&&o&&e.errors&&(delete e.errors.match,Object.keys(e.errors).length||e.setErrors(null)),e&&n!==e.value&&o&&e.setErrors({match:!0}),null)}}var G=function(){function t(t){this.options=new N(t||{})}return t.prototype.resolve=function(t){return t&&this.options.controls[t.schema].component||g},t.prototype.getValidators=function(t,e){var n=[];return t.min&&n.push(a.Validators.min(t.min)),t.max&&n.push(a.Validators.max(t.max)),t.required&&n.push(a.Validators.required),t.requiredTrue&&n.push(a.Validators.requiredTrue),t.minlength&&n.push(a.Validators.minLength(t.minlength)),t.maxlength&&n.push(a.Validators.maxLength(t.maxlength)),t.pattern&&n.push(a.Validators.pattern(t.pattern)),t.match&&n.push($(t.match,t.reverse,e)),"email"===t.schema&&n.push(a.Validators.email),n},t.prototype.toFormGroup=function(t){var n=this,r={};t.forEach(function(t){var e=new a.FormControl(t.value);t.disabled&&e.disable(),r[t.key]=e});var o=new a.FormGroup(r);return t.forEach(function(t){var e=n.getValidators(t,o);o.controls[t.key].setValidators(e)}),o},t.decorators=[{type:c.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:N,decorators:[{type:c.Inject,args:[S]}]}]},t.ngInjectableDef=c.defineInjectable({factory:function(){return new t(c.inject(S))},token:t,providedIn:"root"}),t}(),F=function(){function t(t,e){this.componentFactoryResolver=t,this.controlService=e}return Object.defineProperty(t.prototype,"classes",{get:function(){return this.componentRef?this.componentRef.instance.classes:null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"control",{get:function(){return this.componentRef?this.componentRef.instance.control:null},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){var t=this.controlService.resolve(this.option),e=this.componentFactoryResolver.resolveComponentFactory(t);this.viewContainerRef.clear();var n=this.viewContainerRef.createComponent(e),r=n.instance;r.option=this.option,r.form=this.form,"function"==typeof r.ControlInit&&r.ControlInit(),this.componentRef=n},t.prototype.ngOnDestroy=function(){this.componentRef.destroy()},t.decorators=[{type:c.Component,args:[{selector:"control-outlet",template:'\n\t\x3c!--\n\t<div class="control" [ngClass]="classes">\n\t\t<label class="form-label" [attr.for]="option.key">{{ option.label | label }}</label>\n\t\t<input class="form-control" placeholder="{{ option.placeholder | label }}" [id]="option.key" type="text">\n\t</div>\n\t--\x3e\n\t\x3c!-- [formControlName]="option.key" --\x3e\n\t<ng-template #outlet></ng-template>\n\t'}]}],t.ctorParameters=function(){return[{type:c.ComponentFactoryResolver},{type:G}]},t.propDecorators={option:[{type:c.Input}],form:[{type:c.Input}],viewContainerRef:[{type:c.ViewChild,args:["outlet",{read:c.ViewContainerRef}]}]},t}(),A={provide:a.NG_VALUE_ACCESSOR,useExisting:c.forwardRef(function(){return L}),multi:!0},L=function(){function t(t,e){this.renderer=t,this.element=e,this.onChange=function(t){},this.onTouched=function(){}}return t.prototype.formatValue=function(t){return t.toString()},t.prototype.parseValue=function(t){return t&&""!==t?t:null},t.prototype.writeValue=function(t){var e=this.formatValue(t);this.renderer.setProperty(this.element.nativeElement,"value",e)},t.prototype.registerOnChange=function(r){var o=this;this.onChange=function(t){var e=o.parseValue(t),n=o.formatValue(e);o.renderer.setProperty(o.element.nativeElement,"value",n),r(e)}},t.prototype.registerOnTouched=function(t){this.onTouched=t},t.prototype.setDisabledState=function(t){this.renderer.setProperty(this.element.nativeElement,"disabled",t)},t.decorators=[{type:c.Directive,args:[{selector:"input[designr-accessor][formControlName],input[designr-accessor][formControl],input[designr-accessor][ngModel]",host:{"(change)":"onChange($event.target.value)","(input)":"onChange($event.target.value)","(blur)":"onTouched()"},providers:[A]}]}],t.ctorParameters=function(){return[{type:c.Renderer2},{type:c.ElementRef}]},t}(),W=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return p(e,t),e.decorators=[{type:c.Component,args:[{selector:"controls-component",template:'<ng-container *ngFor="let option of options">\n\t<control-outlet class="form-group" [option]="option" [form]="form"></control-outlet>\n</ng-container>'}]}],e.propDecorators={options:[{type:c.Input}],form:[{type:c.Input}]},e}(o.DisposableComponent),U=function(){function t(){var e=this;this.values=new l.BehaviorSubject(null),this.debounced$=this.values.pipe(i.debounceTime(250),i.switchMap(function(t){return e.exists$(t)}),i.catchError(function(t){return console.log("ExistsValidator.debounced$.catchError",t),l.of(null)}),i.take(1))}return Object.defineProperty(t.prototype,"value",{set:function(t){t&&""!==t.trim()&&this.values.next(t)},enumerable:!0,configurable:!0}),t.prototype.exists$=function(t){return"function"==typeof this.exists?this.exists(t).pipe(i.switchMap(function(t){return t?l.of({exists:!0}):l.of(null)})):l.of(null)},t.prototype.validate=function(t){return this.value=t.value,this.debounced$},t.decorators=[{type:c.Directive,args:[{selector:"[exists][formControlName],[exists][formControl],[exists][ngModel]",providers:[{provide:a.NG_ASYNC_VALIDATORS,useExisting:c.forwardRef(function(){return t}),multi:!0}]}]}],t.propDecorators={exists:[{type:c.Input}]},t}(),z=function(){function t(t,e){this.match=t,this.reverse=e}return Object.defineProperty(t.prototype,"isReverse",{get:function(){return!!this.reverse&&"true"===this.reverse},enumerable:!0,configurable:!0}),t.prototype.validate=function(t){var e=t.value,n=t.root.get(this.match);return n&&e!==n.value&&!this.isReverse?{match:!0}:(n&&e===n.value&&this.isReverse&&(delete n.errors.match,Object.keys(n.errors).length||n.setErrors(null)),n&&e!==n.value&&this.isReverse&&n.setErrors({match:!0}),null)},t.decorators=[{type:c.Directive,args:[{selector:"[match][formControlName],[match][formControl],[match][ngModel]",providers:[{provide:a.NG_VALIDATORS,useExisting:c.forwardRef(function(){return t}),multi:!0}]}]}],t.ctorParameters=function(){return[{type:String,decorators:[{type:c.Attribute,args:["match"]}]},{type:String,decorators:[{type:c.Attribute,args:["reverse"]}]}]},t}(),Z=function(){function t(){this.ngModelChange=new c.EventEmitter}return t.prototype.onInputChange=function(t){this.value=t.target.value.toUpperCase(),this.ngModelChange.emit(this.value)},t.decorators=[{type:c.Directive,args:[{selector:"[ngModel][uppercase]"}]}],t.propDecorators={ngModelChange:[{type:c.Output}],onInputChange:[{type:c.HostListener,args:["input",["$event"]]}]},t}(),B=function(){function t(t){this.controlService=t}return t.prototype.getFormGroup=function(t){return this.controlService.toFormGroup(t)},t.prototype.getOptions=function(t){var n=this,e=t.map(function(t){var e=n.controlService.options.controls[t.schema];return e?new e.model(t):(console.error("missing option for key "+t.schema),null)}).filter(function(t){return t});return e.sort(function(t,e){return t.order-e.order}),e},t.prototype.getFormGroupFromOptions=function(t){return this.getFormGroup(this.getOptions(t))},t.decorators=[{type:c.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:G}]},t.ngInjectableDef=c.defineInjectable({factory:function(){return new t(c.inject(G))},token:t,providedIn:"root"}),t}(),H=[G,B],Y=m([W,M,F,g],P),J=[Z,L],K=[],Q=[U,z],X=function(){function e(t){}return e.forRoot=function(t){return{ngModule:e,providers:[{provide:S,useValue:t}]}},e.decorators=[{type:c.NgModule,args:[{imports:[n.CommonModule,r.HttpClientModule,a.FormsModule,a.ReactiveFormsModule,o.CoreModule],providers:m(H,K,Q),declarations:m(Y,J,K,Q),entryComponents:m(P),exports:m(Y,J,K,Q)}]}],e.ctorParameters=function(){return[{type:e,decorators:[{type:c.Optional},{type:c.SkipSelf}]}]},e}();t.ControlConfig=N,t.CONTROL_CONFIG=S,t.ControlModuleComponent=M,t.ControlModule=X,t.ControlCheckbox=f,t.ControlCheckboxComponent=h,t.ControlOption=d,t.ControlOutletComponent=F,t.ControlAccessor=L,t.ControlComponent=g,t.ControlService=G,t.ControlsComponent=W,t.ControlEmail=v,t.ControlEmailComponent=y,t.ControlMarkdown=b,t.ControlMarkdownComponent=x,t.ControlNumber=C,t.ControlNumberComponent=I,t.ControlPassword=k,t.ControlPasswordComponent=O,t.ControlRadio=D,t.ControlRadioComponent=R,t.ControlSelect=w,t.ControlSelectComponent=j,t.ControlText=q,t.ControlTextComponent=V,t.ControlTextarea=_,t.ControlTextareaComponent=T,t.ExistsValidator=U,t.MatchValidator=z,t.matchValidator=$,t.UppercaseDirective=Z,t.FormService=B,t.ɵa=P,t.ɵb=A,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=designr-control.umd.min.js.map