{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@designr/control/lib/control/control-option.ts","ng://@designr/control/lib/control/checkbox/control-checkbox.ts","ng://@designr/control/lib/control/control.component.ts","ng://@designr/control/lib/control/checkbox/control-checkbox.component.ts","ng://@designr/control/lib/control/email/control-email.ts","ng://@designr/control/lib/control/email/control-email.component.ts","ng://@designr/control/lib/control/group/control-group.ts","ng://@designr/control/lib/control/group/control-group.component.ts","ng://@designr/control/lib/control/info/control-info.ts","ng://@designr/control/lib/control/info/control-info.component.ts","ng://@designr/control/lib/control/markdown/control-markdown.ts","ng://@designr/control/lib/control/markdown/control-markdown.component.ts","ng://@designr/control/lib/control/number/control-number.ts","ng://@designr/control/lib/control/number/control-number.component.ts","ng://@designr/control/lib/control/password/control-password.ts","ng://@designr/control/lib/control/password/control-password.component.ts","ng://@designr/control/lib/control/radio/control-radio.ts","ng://@designr/control/lib/control/radio/control-radio.component.ts","ng://@designr/control/lib/control/select/control-select.ts","ng://@designr/control/lib/control/select/control-select.component.ts","ng://@designr/control/lib/control/text/control-text.ts","ng://@designr/control/lib/control/text/control-text.component.ts","ng://@designr/control/lib/control/textarea/control-textarea.ts","ng://@designr/control/lib/control/textarea/control-textarea.component.ts","ng://@designr/control/lib/config/control.config.ts","ng://@designr/control/lib/control-module.component.ts","ng://@designr/control/lib/directives/exists.validator.ts","ng://@designr/control/lib/directives/match.validator.ts","ng://@designr/control/lib/control/control.service.ts","ng://@designr/control/lib/control/control-outlet.component.ts","ng://@designr/control/lib/control/control.accessor.ts","ng://@designr/control/lib/control/controls.component.ts","ng://@designr/control/lib/directives/exists.directive.ts","ng://@designr/control/lib/directives/match.directive.ts","ng://@designr/control/lib/directives/uppercase.directive.ts","ng://@designr/control/lib/form/form.service.ts","ng://@designr/control/lib/control.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","ControlOption","options","schema","ControlCheckbox","_this","_super","tslib_1.__extends","ControlComponent","defineProperty","form","controls","option","key","control","valid","invalid","dirty","empty","Boolean","required","requiredTrue","disabled","Component","args","selector","template","ContentChild","Input","DisposableComponent","ControlCheckboxComponent","ControlEmail","pattern","ControlEmailComponent","ControlGroup","ControlGroupComponent","ControlInfo","ControlInfoComponent","ControlMarkdown","ControlMarkdownComponent","ControlNumber","ControlNumberComponent","ControlPassword","ControlPasswordComponent","reveal","checked","ControlRadio","ControlRadioComponent","ControlSelect","ControlSelectComponent","getValue","getValue_","bind","compareWith","compareWith_","ngOnInit","options$","pipe","takeUntil","unsubscribe","tap","asObject","firstNullOptions","find","x","id","undefined","setValue","subscribe","isObservable","isArray","of","item","a","ControlText","ControlTextComponent","ControlTextarea","ControlTextareaComponent","entryComponents","checkbox","component","model","email","group","info","markdown","number","password","radio","select","text","textarea","ControlConfig","CONTROL_CONFIG","InjectionToken","ControlModuleComponent","version","existsValidator","exists","exists$","oservableOrValue","map","debounceTime","catchError","console","log","take","matchValidator","otherKey","reverse","otherControl","match","errors","keys","setErrors","ControlService","toFormGroup","forEach","group_1","validators","getValidators","asyncValidators","getAsyncValidators","FormControl","disable","FormGroup","markAsDirty","groupValidators","getGroupValidators","setValidators","min","Validators","max","minlength","minLength","maxlength","maxLength","resolve","Injectable","providedIn","decorators","type","Inject","ControlOutletComponent","componentFactoryResolver","controlService","componentRef","instance","classes","ngAfterViewInit","factory","resolveComponentFactory","viewContainerRef","clear","createComponent","inputRef","errorRef","ngOnDestroy","destroy","ComponentFactoryResolver","ViewChild","read","ViewContainerRef","CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","ControlAccessor","multi","renderer","element","onChange","onTouched","formatValue","toString","parseValue","writeValue","formattedValue","setProperty","nativeElement","registerOnChange","callback","parsedValue","registerOnTouched","setDisabledState","isDisabled","Directive","host","(change)","(input)","(blur)","providers","Renderer2","ElementRef","ControlsComponent","ExistsValidator","validate","response","NG_ASYNC_VALIDATORS","MatchValidator","input","root","get","isReverse","NG_VALIDATORS","Attribute","UppercaseDirective","ngModelChange","EventEmitter","onInputChange","$event","target","toUpperCase","emit","Output","HostListener","FormService","getOptions","data","optionModelInstance","options_1","sort","order","filter","getFormGroup","getFormGroupFromOptions","services","components","directives","pipes","ControlModule","parentModule","forRoot","config","ngModule","useValue","NgModule","imports","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","CoreModule","declarations","exports","Optional","SkipSelf"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\r\n// let UNIQUE_ID: number = 0;\r\n\r\nexport interface IControlOption<T> {\r\n\tschema: string;\r\n\tvalue?: T;\r\n\torder?: number;\r\n\tkey?: string;\r\n\tlabel?: string;\r\n\tplaceholder?: string;\r\n\ttitle?: string;\r\n\tabstract?: string;\r\n\tdescription?: string;\r\n\thidden?: boolean;\r\n\tdisabled?: boolean;\r\n\trequired?: boolean;\r\n\texists?: Function;\r\n\tmatch?: string;\r\n\treverse?: boolean;\r\n\tminlength?: number;\r\n\tmaxlength?: number;\r\n\tpattern?: string | RegExp;\r\n\t[x: string]: any;\r\n}\r\n\r\nexport class ControlOption<T> {\r\n\tschema: string = 'text';\r\n\tvalue?: T;\r\n\torder?: number;\r\n\tkey?: string;\r\n\tlabel?: string;\r\n\tplaceholder?: string;\r\n\ttitle?: string;\r\n\tabstract?: string;\r\n\tdescription?: string;\r\n\thidden?: boolean;\r\n\tdisabled?: boolean;\r\n\trequired?: boolean;\r\n\texists?: Function;\r\n\tmatch?: string;\r\n\treverse?: boolean;\r\n\tminlength?: number;\r\n\tmaxlength?: number;\r\n\tpattern?: string | RegExp;\r\n\r\n\tconstructor(options?: IControlOption<T>) {\r\n\t\tif (options) {\r\n\t\t\tObject.assign(this, options);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","import { ControlOption } from '../control-option';\r\n\r\nexport class ControlCheckbox extends ControlOption<boolean> {\r\n\tschema: string = 'checkbox';\r\n\trequiredTrue?: boolean;\r\n}\r\n","import { NgForOfContext } from '@angular/common';\r\nimport { Component, ContentChild, Input, TemplateRef } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { DisposableComponent } from '@designr/core';\r\nimport { IControlOption } from './control-option';\r\n\r\n@Component({\r\n\tselector: 'control-component',\r\n\ttemplateUrl: 'control.component.html',\r\n})\r\nexport class ControlComponent extends DisposableComponent {\r\n\r\n\t// @ContentChild('controlRef') controlRef: TemplateRef<NgForOfContext<ControlComponent>>;\r\n\t// @ContentChild('labelRef') labelRef: TemplateRef<NgForOfContext<ControlComponent>>;\r\n\t@ContentChild('inputRef') inputRef: TemplateRef<NgForOfContext<ControlComponent>>;\r\n\t@ContentChild('errorRef') errorRef: TemplateRef<NgForOfContext<ControlComponent>>;\r\n\r\n\t@Input() option: IControlOption<any>;\r\n\t@Input() form: FormGroup;\r\n\r\n\tget context(): ControlComponent {\r\n\t\treturn this;\r\n\t}\r\n\r\n\tget control(): AbstractControl {\r\n\t\t// console.log('control', this.option.key, this.form.controls);\r\n\t\treturn this.form.controls[this.option.key];\r\n\t}\r\n\r\n\tget isValid(): boolean {\r\n\t\treturn this.control.valid;\r\n\t}\r\n\r\n\tget classes(): {\r\n\t\tvalid?: boolean,\r\n\t\tinvalid?: boolean,\r\n\t\tdirty?: boolean,\r\n\t\tempty?: boolean,\r\n\t\trequired?: boolean,\r\n\t\tdisabled?: boolean\r\n\t} {\r\n\t\treturn {\r\n\t\t\tvalid: this.control.valid,\r\n\t\t\tinvalid: this.control.invalid,\r\n\t\t\tdirty: this.control.dirty,\r\n\t\t\tempty: Boolean(this.control.value == null),\r\n\t\t\trequired: Boolean(this.option.required || this.option.requiredTrue),\r\n\t\t\tdisabled: this.option.disabled,\r\n\t\t};\r\n\t}\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlComponent } from '../control.component';\r\nimport { ControlCheckbox } from './control-checkbox';\r\n\r\n@Component({\r\n\tselector: 'control-checkbox-component',\r\n\ttemplateUrl: 'control-checkbox.component.html',\r\n})\r\nexport class ControlCheckboxComponent extends ControlComponent {\r\n\r\n\t@Input() option: ControlCheckbox;\r\n\r\n}\r\n","import { ControlOption } from '../control-option';\r\n\r\nexport class ControlEmail extends ControlOption<string> {\r\n\tschema: string = 'email';\r\n\tminlength?: number;\r\n\tmaxlength?: number;\r\n\tpattern?: string | RegExp = '[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}';\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlComponent } from '../control.component';\r\nimport { ControlEmail } from './control-email';\r\n\r\n@Component({\r\n\tselector: 'control-email-component',\r\n\ttemplateUrl: 'control-email.component.html',\r\n})\r\nexport class ControlEmailComponent extends ControlComponent {\r\n\r\n\t@Input() option: ControlEmail;\r\n\r\n}\r\n","import { ControlOption } from '../control-option';\r\n\r\nexport class ControlGroup extends ControlOption<any[]> {\r\n\tschema: string = 'group';\r\n\ttitle?: string;\r\n\tabstract?: string;\r\n\toptions?: ControlOption<any>[];\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlComponent } from '../control.component';\r\nimport { ControlGroup } from './control-group';\r\n\r\n@Component({\r\n\tselector: 'control-group-component',\r\n\ttemplateUrl: 'control-group.component.html',\r\n})\r\nexport class ControlGroupComponent extends ControlComponent {\r\n\t@Input() option: ControlGroup;\r\n}\r\n","import { ControlOption } from '../control-option';\r\n\r\nexport class ControlInfo extends ControlOption<any[]> {\r\n\tschema: string = 'info';\r\n\ttitle?: string;\r\n\tabstract?: string;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { ControlComponent } from '../control.component';\r\nimport { ControlInfo } from './control-info';\r\n\r\n@Component({\r\n\tselector: 'control-info-component',\r\n\ttemplateUrl: 'control-info.component.html',\r\n})\r\nexport class ControlInfoComponent extends ControlComponent {\r\n\r\n\t@Input() option: ControlInfo;\r\n\r\n\tget control(): AbstractControl {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tget isValid() {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tget classes(): {\r\n\t\tvalid?: boolean,\r\n\t\tinvalid?: boolean,\r\n\t\tdirty?: boolean,\r\n\t\tempty?: boolean,\r\n\t\trequired?: boolean,\r\n\t\tdisabled?: boolean\r\n\t} {\r\n\t\treturn {};\r\n\t}\r\n}\r\n","import { ControlOption } from '../control-option';\r\n\r\nexport class ControlMarkdown extends ControlOption<string> {\r\n\tschema: string = 'markdown';\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlComponent } from '../control.component';\r\nimport { ControlMarkdown } from './control-markdown';\r\n\r\n@Component({\r\n\tselector: 'control-markdown-component',\r\n\ttemplateUrl: 'control-markdown.component.html',\r\n})\r\nexport class ControlMarkdownComponent extends ControlComponent {\r\n\r\n\t@Input() option: ControlMarkdown;\r\n\r\n}\r\n","import { ControlOption } from '../control-option';\r\n\r\nexport class ControlNumber extends ControlOption<string> {\r\n\tschema: string = 'number';\r\n\tmin?: number;\r\n\tmax?: number;\r\n\tstep?: number;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlComponent } from '../control.component';\r\nimport { ControlNumber } from './control-number';\r\n\r\n@Component({\r\n\tselector: 'control-number-component',\r\n\ttemplateUrl: 'control-number.component.html',\r\n})\r\nexport class ControlNumberComponent extends ControlComponent {\r\n\r\n\t@Input() option: ControlNumber;\r\n\r\n}\r\n","import { ControlOption } from '../control-option';\r\n\r\nexport class ControlPassword extends ControlOption<string> {\r\n\tschema: string = 'password';\r\n\tminlength?: number;\r\n\tmaxlength?: number;\r\n\tpattern?: string | RegExp;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlComponent } from '../control.component';\r\nimport { ControlPassword } from './control-password';\r\n\r\n@Component({\r\n\tselector: 'control-password-component',\r\n\ttemplateUrl: 'control-password.component.html',\r\n})\r\nexport class ControlPasswordComponent extends ControlComponent {\r\n\r\n\treveal: { checked: boolean } = { checked: false };\r\n\r\n\t@Input() option: ControlPassword;\r\n\r\n}\r\n","import { ControlOption } from '../control-option';\r\n\r\nexport class ControlRadio extends ControlOption<boolean> {\r\n\tschema: string = 'radio';\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlComponent } from '../control.component';\r\nimport { ControlRadio } from './control-radio';\r\n\r\n@Component({\r\n\tselector: 'control-radio-component',\r\n\ttemplateUrl: 'control-radio.component.html',\r\n})\r\nexport class ControlRadioComponent extends ControlComponent {\r\n\r\n\t@Input() option: ControlRadio;\r\n\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { ControlOption } from '../control-option';\r\n\r\nexport interface ControlSelectOption {\r\n\tid: any;\r\n\tname: string;\r\n}\r\n\r\nexport class ControlSelect extends ControlOption<string> {\r\n\tschema: string = 'select';\r\n\toptions?: ControlSelectOption[] | Observable<ControlSelectOption[]>;\r\n\tasObject: boolean;\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { isObservable, Observable, of } from 'rxjs';\r\nimport { takeUntil, tap } from 'rxjs/operators';\r\nimport { ControlComponent } from '../control.component';\r\nimport { ControlSelect, ControlSelectOption } from './control-select';\r\n\r\n@Component({\r\n\tselector: 'control-select-component',\r\n\ttemplateUrl: 'control-select.component.html',\r\n})\r\nexport class ControlSelectComponent extends ControlComponent implements OnInit {\r\n\r\n\t@Input() option: ControlSelect;\r\n\toptions: ControlSelectOption[] = [];\r\n\tgetValue: Function = this.getValue_.bind(this);\r\n\tcompareWith: Function = this.compareWith_.bind(this);\r\n\r\n\tngOnInit() {\r\n\t\tthis.options$().pipe(\r\n\t\t\ttakeUntil(this.unsubscribe),\r\n\t\t\ttap(options => {\r\n\t\t\t\tif (this.option.asObject && this.control.value === null) {\r\n\t\t\t\t\tconst firstNullOptions = options.find(x => x.id === null);\r\n\t\t\t\t\tif (firstNullOptions !== undefined) {\r\n\t\t\t\t\t\tthis.control.setValue(firstNullOptions);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t).subscribe(options => this.options = options);\r\n\t}\r\n\r\n\toptions$(): Observable<ControlSelectOption[]> {\r\n\t\tconst options = this.option.options;\r\n\t\tif (options) {\r\n\t\t\tif (isObservable(options)) {\r\n\t\t\t\treturn options;\r\n\t\t\t} else if (Array.isArray(options)) {\r\n\t\t\t\treturn of(options);\r\n\t\t\t} else {\r\n\t\t\t\treturn of([]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn of([]);\r\n\t\t}\r\n\t}\r\n\r\n\tgetValue_(item: ControlSelectOption): any {\r\n\t\treturn this.option.asObject ? item : item.id;\r\n\t}\r\n\r\n\tcompareWith_(a: ControlSelectOption | string | number, b: ControlSelectOption | string | number) {\r\n\t\tif (this.option.asObject) {\r\n\t\t\ta = a as ControlSelectOption;\r\n\t\t\tb = b as ControlSelectOption;\r\n\t\t\treturn (b && b.id !== undefined) ? a.id === b.id : a.id === b;\r\n\t\t} else {\r\n\t\t\treturn b ? a === b : a === null;\r\n\t\t}\r\n\t}\r\n}\r\n","import { ControlOption } from '../control-option';\r\n\r\nexport class ControlText extends ControlOption<string> {\r\n\tschema: string = 'text';\r\n\tminlength?: number;\r\n\tmaxlength?: number;\r\n\tpattern?: string | RegExp;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlComponent } from '../control.component';\r\nimport { ControlText } from './control-text';\r\n\r\n@Component({\r\n\tselector: 'control-text-component',\r\n\ttemplateUrl: 'control-text.component.html',\r\n})\r\nexport class ControlTextComponent extends ControlComponent {\r\n\r\n\t@Input() option: ControlText;\r\n\r\n}\r\n","import { ControlOption } from '../control-option';\r\n\r\nexport class ControlTextarea extends ControlOption<string> {\r\n\tschema: string = 'textarea';\r\n\tminlength?: number;\r\n\tmaxlength?: number;\r\n\tpattern?: string | RegExp;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ControlComponent } from '../control.component';\r\nimport { ControlTextarea } from './control-textarea';\r\n\r\n@Component({\r\n\tselector: 'control-textarea-component',\r\n\ttemplateUrl: 'control-textarea.component.html',\r\n})\r\nexport class ControlTextareaComponent extends ControlComponent {\r\n\r\n\t@Input() option: ControlTextarea;\r\n\r\n}\r\n","import { InjectionToken, Type } from '@angular/core';\r\nimport { ControlCheckbox } from '../control/checkbox/control-checkbox';\r\nimport { ControlCheckboxComponent } from '../control/checkbox/control-checkbox.component';\r\nimport { IControlOption } from '../control/control-option';\r\nimport { ControlComponent } from '../control/control.component';\r\nimport { ControlEmail } from '../control/email/control-email';\r\nimport { ControlEmailComponent } from '../control/email/control-email.component';\r\nimport { ControlGroup } from '../control/group/control-group';\r\nimport { ControlGroupComponent } from '../control/group/control-group.component';\r\nimport { ControlInfo } from '../control/info/control-info';\r\nimport { ControlInfoComponent } from '../control/info/control-info.component';\r\nimport { ControlMarkdown } from '../control/markdown/control-markdown';\r\nimport { ControlMarkdownComponent } from '../control/markdown/control-markdown.component';\r\nimport { ControlNumber } from '../control/number/control-number';\r\nimport { ControlNumberComponent } from '../control/number/control-number.component';\r\nimport { ControlPassword } from '../control/password/control-password';\r\nimport { ControlPasswordComponent } from '../control/password/control-password.component';\r\nimport { ControlRadio } from '../control/radio/control-radio';\r\nimport { ControlRadioComponent } from '../control/radio/control-radio.component';\r\nimport { ControlSelect } from '../control/select/control-select';\r\nimport { ControlSelectComponent } from '../control/select/control-select.component';\r\nimport { ControlText } from '../control/text/control-text';\r\nimport { ControlTextComponent } from '../control/text/control-text.component';\r\nimport { ControlTextarea } from '../control/textarea/control-textarea';\r\nimport { ControlTextareaComponent } from '../control/textarea/control-textarea.component';\r\n\r\nexport interface ControlInterface {\r\n\tcomponent: Type<ControlComponent>;\r\n\tmodel: Type<IControlOption<any>>;\r\n}\r\n\r\nexport interface Controls { [key: string]: ControlInterface; }\r\n\r\nexport const entryComponents = [\r\n\tControlCheckboxComponent,\r\n\tControlEmailComponent,\r\n\tControlGroupComponent,\r\n\tControlInfoComponent,\r\n\tControlMarkdownComponent,\r\n\tControlNumberComponent,\r\n\tControlPasswordComponent,\r\n\tControlRadioComponent,\r\n\tControlSelectComponent,\r\n\tControlTextComponent,\r\n\tControlTextareaComponent,\r\n];\r\n\r\nexport const controls: Controls = {\r\n\t'checkbox': {\r\n\t\tcomponent: ControlCheckboxComponent,\r\n\t\tmodel: ControlCheckbox\r\n\t},\r\n\t'email': {\r\n\t\tcomponent: ControlEmailComponent,\r\n\t\tmodel: ControlEmail\r\n\t},\r\n\t'group': {\r\n\t\tcomponent: ControlGroupComponent,\r\n\t\tmodel: ControlGroup\r\n\t},\r\n\t'info': {\r\n\t\tcomponent: ControlInfoComponent,\r\n\t\tmodel: ControlInfo\r\n\t},\r\n\t'markdown': {\r\n\t\tcomponent: ControlMarkdownComponent,\r\n\t\tmodel: ControlMarkdown\r\n\t},\r\n\t'number': {\r\n\t\tcomponent: ControlNumberComponent,\r\n\t\tmodel: ControlNumber\r\n\t},\r\n\t'password': {\r\n\t\tcomponent: ControlPasswordComponent,\r\n\t\tmodel: ControlPassword\r\n\t},\r\n\t'radio': {\r\n\t\tcomponent: ControlRadioComponent,\r\n\t\tmodel: ControlRadio\r\n\t},\r\n\t'select': {\r\n\t\tcomponent: ControlSelectComponent,\r\n\t\tmodel: ControlSelect\r\n\t},\r\n\t'text': {\r\n\t\tcomponent: ControlTextComponent,\r\n\t\tmodel: ControlText\r\n\t},\r\n\t'textarea': {\r\n\t\tcomponent: ControlTextareaComponent,\r\n\t\tmodel: ControlTextarea\r\n\t},\r\n};\r\n\r\nexport class ControlConfig {\r\n\r\n\tcontrols?: Controls = {};\r\n\r\n\tconstructor(options?: ControlConfig) {\r\n\t\t// console.log('ControlConfig', options);\r\n\t\tif (options) {\r\n\t\t\tObject.assign(this, options);\r\n\t\t\tthis.controls = {\r\n\t\t\t\t...controls,\r\n\t\t\t\t...(options.controls || {})\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const CONTROL_CONFIG = new InjectionToken<ControlConfig>('control.config');\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'control-module',\r\n\ttemplate: `<span class=\"control-module\">control {{version}}</span>`,\r\n\tstyles: []\r\n})\r\nexport class ControlModuleComponent implements OnInit {\r\n\r\n\tversion: string = '0.0.13';\r\n\r\n\tconstructor() { }\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n}\r\n","import { AbstractControl, AsyncValidatorFn, ValidationErrors } from '@angular/forms';\r\nimport { isObservable, Observable, of } from 'rxjs';\r\nimport { catchError, debounceTime, map, take } from 'rxjs/operators';\r\n\r\nconst DEBOUNCE_TIME: number = 250;\r\n\r\nfunction exists$(value: any, exists?: Function): Observable<ValidationErrors | null> {\r\n\tif (typeof exists === 'function') {\r\n\t\tconst oservableOrValue = exists(value);\r\n\t\tif (isObservable(oservableOrValue)) {\r\n\t\t\treturn oservableOrValue.pipe(\r\n\t\t\t\tmap(exists => {\r\n\t\t\t\t\treturn exists ? { exists: true } : null;\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn of(oservableOrValue ? { exists: true } : null);\r\n\t\t}\r\n\t} else {\r\n\t\treturn of(null);\r\n\t}\r\n}\r\n\r\nexport function existsValidator(exists?: Function): AsyncValidatorFn {\r\n\treturn (control: AbstractControl): Observable<ValidationErrors | null> => {\r\n\t\treturn exists$(control.value, exists).pipe(\r\n\t\t\tdebounceTime(DEBOUNCE_TIME),\r\n\t\t\tcatchError((error) => {\r\n\t\t\t\tconsole.log('existsValidator.catchError', error);\r\n\t\t\t\treturn of(null);\r\n\t\t\t}),\r\n\t\t\ttake(1),\r\n\t\t);\r\n\t};\r\n}\r\n","import { AbstractControl, FormGroup, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport function matchValidator(otherKey: string, reverse: boolean = false, group: FormGroup): ValidatorFn {\r\n\treturn (control: AbstractControl): ValidationErrors | null => {\r\n\t\tconst otherControl = group.controls[otherKey];\r\n\t\tconst value = control.value;\r\n\t\t// value not equal\r\n\t\tif (otherControl && value !== otherControl.value && !reverse) {\r\n\t\t\treturn {\r\n\t\t\t\tmatch: true,\r\n\t\t\t};\r\n\t\t}\r\n\t\t// value equal and reverse\r\n\t\tif (otherControl && value === otherControl.value && reverse) {\r\n\t\t\tif (otherControl.errors) {\r\n\t\t\t\tdelete otherControl.errors['match'];\r\n\t\t\t\tif (!Object.keys(otherControl.errors).length) {\r\n\t\t\t\t\totherControl.setErrors(null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// value not equal and reverse\r\n\t\tif (otherControl && value !== otherControl.value && reverse) {\r\n\t\t\totherControl.setErrors({\r\n\t\t\t\tmatch: true,\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n}\r\n","import { Inject, Injectable, Type } from '@angular/core';\r\nimport { AbstractControl, AsyncValidatorFn, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\r\nimport { ControlConfig, CONTROL_CONFIG } from '../config/control.config';\r\nimport { existsValidator } from '../directives/exists.validator';\r\nimport { matchValidator } from '../directives/match.validator';\r\nimport { ControlOption, IControlOption } from './control-option';\r\nimport { ControlComponent } from './control.component';\r\nimport { ControlGroup } from './group/control-group';\r\nimport { ControlInfo } from './info/control-info';\r\n\r\nexport function noopValidator(): ValidatorFn {\r\n\treturn (control: AbstractControl): ValidationErrors | null => {\r\n\t\tconsole.log(control);\r\n\t\treturn null;\r\n\t};\r\n}\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class ControlService {\r\n\r\n\tpublic options: ControlConfig;\r\n\r\n\tconstructor(\r\n\t\t@Inject(CONTROL_CONFIG) options: ControlConfig\r\n\t) {\r\n\t\t// console.log('ControlService', options);\r\n\t\tthis.options = new ControlConfig(options || {});\r\n\t}\r\n\r\n\ttoFormGroup(options: IControlOption<any>[]): FormGroup {\r\n\t\tconst controls: { [key: string]: FormControl | FormGroup } = {};\r\n\t\toptions.forEach((option: ControlOption<any>) => {\r\n\t\t\t// group[x.key] = new FormControl(x.value, this.getValidators(x, group));\r\n\t\t\tif (option instanceof ControlGroup) {\r\n\t\t\t\tconst group: FormGroup = this.toFormGroup(option.options);\r\n\t\t\t\tcontrols[option.key] = group;\r\n\t\t\t} else if (!(option instanceof ControlInfo)) {\r\n\t\t\t\tconst validators = this.getValidators(option);\r\n\t\t\t\tconst asyncValidators = this.getAsyncValidators(option);\r\n\t\t\t\tconst control: FormControl = new FormControl(option.value, {\r\n\t\t\t\t\tvalidators: validators.length ? validators : undefined,\r\n\t\t\t\t\tasyncValidators: asyncValidators.length ? asyncValidators : undefined,\r\n\t\t\t\t});\r\n\t\t\t\tif (option.disabled) {\r\n\t\t\t\t\tcontrol.disable();\r\n\t\t\t\t}\r\n\t\t\t\tcontrols[option.key] = control;\r\n\t\t\t\t// control.updateValueAndValidity();\r\n\t\t\t\t// x.setControl(control); // !!!\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst group: FormGroup = new FormGroup(controls);\r\n\t\tgroup.markAsDirty();\r\n\t\t// console.log(group);\r\n\t\toptions.forEach((option: ControlOption<any>) => {\r\n\t\t\tif (!(option instanceof ControlInfo)) {\r\n\t\t\t\tconst groupValidators = this.getGroupValidators(option, group);\r\n\t\t\t\tif (groupValidators.length) {\r\n\t\t\t\t\t// console.log(validators);\r\n\t\t\t\t\tgroup.controls[option.key].setValidators(groupValidators);\r\n\t\t\t\t\t// group.controls[option.key].updateValueAndValidity();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn group;\r\n\t}\r\n\r\n\tgetValidators(option: IControlOption<any>): ValidatorFn[] {\r\n\t\tconst validators: ValidatorFn[] = [];\r\n\t\tif (option.min) {\r\n\t\t\tvalidators.push(Validators.min(option.min));\r\n\t\t}\r\n\t\tif (option.max) {\r\n\t\t\tvalidators.push(Validators.max(option.max));\r\n\t\t}\r\n\t\tif (option.required) {\r\n\t\t\tvalidators.push(Validators.required);\r\n\t\t}\r\n\t\tif (option.requiredTrue) {\r\n\t\t\tvalidators.push(Validators.requiredTrue);\r\n\t\t}\r\n\t\tif (option.minlength) {\r\n\t\t\tvalidators.push(Validators.minLength(option.minlength));\r\n\t\t}\r\n\t\tif (option.maxlength) {\r\n\t\t\tvalidators.push(Validators.maxLength(option.maxlength));\r\n\t\t}\r\n\t\tif (option.pattern) {\r\n\t\t\tvalidators.push(Validators.pattern(option.pattern));\r\n\t\t}\r\n\t\tif (option.schema === 'email') {\r\n\t\t\tvalidators.push(Validators.email);\r\n\t\t}\r\n\t\treturn validators;\r\n\t}\r\n\r\n\tgetAsyncValidators(option: IControlOption<any>): AsyncValidatorFn[] {\r\n\t\tconst validators: AsyncValidatorFn[] = [];\r\n\t\tif (option.exists) {\r\n\t\t\tvalidators.push(existsValidator(option.exists));\r\n\t\t}\r\n\t\treturn validators;\r\n\t}\r\n\r\n\tgetGroupValidators(option: IControlOption<any>, group: FormGroup): ValidatorFn[] {\r\n\t\tconst validators: ValidatorFn[] = [];\r\n\t\tif (option.match) {\r\n\t\t\tvalidators.push(matchValidator(option.match, option.reverse, group));\r\n\t\t}\r\n\t\treturn validators;\r\n\t}\r\n\r\n\tresolve(option: IControlOption<any>): Type<ControlComponent> {\r\n\t\tlet component: Type<ControlComponent>;\r\n\t\tif (option) {\r\n\t\t\tcomponent = this.options.controls[option.schema].component || ControlComponent;\r\n\t\t} else {\r\n\t\t\tcomponent = ControlComponent;\r\n\t\t}\r\n\t\treturn component;\r\n\t}\r\n\r\n}\r\n","import { NgForOfContext } from '@angular/common';\r\nimport { AfterViewInit, Component, ComponentFactory, ComponentFactoryResolver, ComponentRef, ContentChild, Input, OnDestroy, OnInit, TemplateRef, Type, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { IControlOption } from './control-option';\r\nimport { ControlComponent } from './control.component';\r\nimport { ControlService } from './control.service';\r\n\r\n@Component({\r\n\tselector: 'control-outlet',\r\n\ttemplateUrl: 'control-outlet.component.html',\r\n})\r\nexport class ControlOutletComponent implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n\t@ContentChild('inputRef') inputRef: TemplateRef<NgForOfContext<ControlComponent>>;\r\n\t@ContentChild('errorRef') errorRef: TemplateRef<NgForOfContext<ControlComponent>>;\r\n\t@ContentChild('labelRef') labelRef: TemplateRef<NgForOfContext<ControlComponent>>;\r\n\t@ContentChild('descriptionRef') descriptionRef: TemplateRef<NgForOfContext<ControlComponent>>;\r\n\t@ViewChild('descriptionDef') descriptionDef: TemplateRef<NgForOfContext<ControlComponent>>;\r\n\t@ViewChild('labelDef') labelDef: TemplateRef<NgForOfContext<ControlComponent>>;\r\n\t@ViewChild('outlet', { read: ViewContainerRef }) viewContainerRef: ViewContainerRef;\r\n\r\n\t@Input() option: IControlOption<any>;\r\n\t@Input() form: FormGroup;\r\n\r\n\tprivate componentRef: ComponentRef<ControlComponent>;\r\n\r\n\tget context(): ControlOutletComponent {\r\n\t\treturn this;\r\n\t}\r\n\r\n\tget classes(): { [key: string]: boolean } {\r\n\t\t// console.log('control', this.option.key, this.form.controls);\r\n\t\treturn this.componentRef ? this.componentRef.instance.classes : null;\r\n\t}\r\n\r\n\tget control(): AbstractControl {\r\n\t\t// console.log('control', this.option.key, this.form.controls);\r\n\t\treturn this.componentRef ? this.componentRef.instance.control : null;\r\n\t}\r\n\r\n\tconstructor(\r\n\t\tprivate componentFactoryResolver: ComponentFactoryResolver,\r\n\t\tprivate controlService: ControlService,\r\n\t) { }\r\n\r\n\tngAfterViewInit() {\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tconst component: Type<ControlComponent> = this.controlService.resolve(this.option);\r\n\t\tconst factory: ComponentFactory<ControlComponent> = this.componentFactoryResolver.resolveComponentFactory(component);\r\n\t\tthis.viewContainerRef.clear();\r\n\t\tconst componentRef = this.viewContainerRef.createComponent(factory);\r\n\t\tconst instance = componentRef.instance;\r\n\t\tinstance.option = this.option;\r\n\t\tinstance.form = this.form;\r\n\t\tinstance.inputRef = this.inputRef;\r\n\t\tinstance.errorRef = this.errorRef;\r\n\t\t// instance.labelRef = this.labelRef || this.labelDef;\r\n\t\tif (typeof instance['ControlInit'] === 'function') {\r\n\t\t\tinstance['ControlInit']();\r\n\t\t}\r\n\t\tthis.componentRef = componentRef;\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tthis.componentRef.destroy();\r\n\t}\r\n\r\n}\r\n","\r\nimport { Directive, ElementRef, forwardRef, Renderer2 } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nexport const CONTROL_VALUE_ACCESSOR: any = {\r\n\tprovide: NG_VALUE_ACCESSOR,\r\n\t// tslint:disable-next-line:no-use-before-declare\r\n\tuseExisting: forwardRef(() => ControlAccessor),\r\n\tmulti: true\r\n};\r\n\r\n@Directive({\r\n\tselector:\r\n\t\t'input[designr-accessor][formControlName],input[designr-accessor][formControl],input[designr-accessor][ngModel]',\r\n\t// tslint:disable-next-line:use-host-property-decorator\r\n\thost: {\r\n\t\t'(change)': 'onChange($event.target.value)',\r\n\t\t'(input)': 'onChange($event.target.value)',\r\n\t\t'(blur)': 'onTouched()'\r\n\t},\r\n\tproviders: [CONTROL_VALUE_ACCESSOR]\r\n})\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class ControlAccessor<T> implements ControlValueAccessor {\r\n\r\n\tconstructor(\r\n\t\tprotected renderer: Renderer2,\r\n\t\tprotected element: ElementRef\r\n\t) { }\r\n\r\n\tprotected formatValue(value: T): string {\r\n\t\treturn value.toString();\r\n\t}\r\n\r\n\tprotected parseValue(value: any): T {\r\n\t\treturn value && value !== '' ? value : null;\r\n\t}\r\n\r\n\tonChange = (value: any) => { };\r\n\tonTouched = () => { };\r\n\r\n\twriteValue(value: T): void {\r\n\t\tconst formattedValue = this.formatValue(value);\r\n\t\tthis.renderer.setProperty(this.element.nativeElement, 'value', formattedValue);\r\n\t}\r\n\r\n\tregisterOnChange(callback: (x: T | null) => void): void {\r\n\t\tthis.onChange = (value: any) => {\r\n\t\t\tconst parsedValue = this.parseValue(value);\r\n\t\t\tconst formattedValue = this.formatValue(parsedValue);\r\n\t\t\tthis.renderer.setProperty(this.element.nativeElement, 'value', formattedValue);\r\n\t\t\tcallback(parsedValue);\r\n\t\t};\r\n\t}\r\n\r\n\tregisterOnTouched(callback: () => void): void {\r\n\t\tthis.onTouched = callback;\r\n\t}\r\n\r\n\tsetDisabledState(isDisabled: boolean): void {\r\n\t\tthis.renderer.setProperty(this.element.nativeElement, 'disabled', isDisabled);\r\n\t}\r\n\r\n}\r\n","\r\nimport { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { DisposableComponent } from '@designr/core';\r\nimport { IControlOption } from './control-option';\r\n\r\n@Component({\r\n\tselector: 'controls-component',\r\n\ttemplateUrl: 'controls.component.html',\r\n})\r\nexport class ControlsComponent extends DisposableComponent {\r\n\t@Input() options: IControlOption<any>[];\r\n\t@Input() form: FormGroup;\r\n}\r\n","import { Directive, forwardRef, Input } from '@angular/core';\r\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\r\nimport { isObservable, Observable, of } from 'rxjs';\r\nimport { catchError, debounceTime, map, take } from 'rxjs/operators';\r\n\r\nconst DEBOUNCE_TIME: number = 250;\r\n\r\n@Directive({\r\n\tselector: '[exists][formControlName],[exists][formControl],[exists][ngModel]',\r\n\tproviders: [\r\n\t\t{ provide: NG_ASYNC_VALIDATORS, useExisting: forwardRef(() => ExistsValidator), multi: true },\r\n\t]\r\n})\r\nexport class ExistsValidator implements AsyncValidator {\r\n\r\n\t@Input() exists: Function;\r\n\r\n\texists$(value: string): Observable<ValidationErrors | null> {\r\n\t\tif (typeof this.exists === 'function') {\r\n\t\t\tconst oservableOrValue = this.exists(value);\r\n\t\t\tif (isObservable(oservableOrValue)) {\r\n\t\t\t\treturn oservableOrValue.pipe(\r\n\t\t\t\t\tmap(exists => {\r\n\t\t\t\t\t\treturn exists ? { exists: true } : null;\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn of(oservableOrValue ? { exists: true } : null);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn of(null);\r\n\t\t}\r\n\t}\r\n\r\n\tvalidate(control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\r\n\t\treturn this.exists$(control.value).pipe(\r\n\t\t\tdebounceTime(DEBOUNCE_TIME),\r\n\t\t\tcatchError((response) => {\r\n\t\t\t\tconsole.log('ExistsValidator.debounced$.catchError', response);\r\n\t\t\t\treturn of(null);\r\n\t\t\t}),\r\n\t\t\ttake(1),\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import { Attribute, Directive, forwardRef } from '@angular/core';\r\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\r\n\r\n@Directive({\r\n\tselector: '[match][formControlName],[match][formControl],[match][ngModel]',\r\n\tproviders: [\r\n\t\t{ provide: NG_VALIDATORS, useExisting: forwardRef(() => MatchValidator), multi: true }\r\n\t]\r\n})\r\nexport class MatchValidator implements Validator {\r\n\r\n\tconstructor(\r\n\t\t@Attribute('match') public match: string,\r\n\t\t@Attribute('reverse') public reverse: string\r\n\t) { }\r\n\r\n\tprivate get isReverse() {\r\n\t\tif (!this.reverse) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn this.reverse === 'true' ? true : false;\r\n\t}\r\n\r\n\tvalidate(control: AbstractControl): { [key: string]: any } {\r\n\t\t// self value\r\n\t\tconst value = control.value;\r\n\t\t// control value\r\n\t\tconst input = control.root.get(this.match);\r\n\t\t// value not equal\r\n\t\tif (input && value !== input.value && !this.isReverse) {\r\n\t\t\treturn {\r\n\t\t\t\tmatch: true,\r\n\t\t\t};\r\n\t\t}\r\n\t\t// value equal and reverse\r\n\t\tif (input && value === input.value && this.isReverse) {\r\n\t\t\tdelete input.errors['match'];\r\n\t\t\tif (!Object.keys(input.errors).length) {\r\n\t\t\t\tinput.setErrors(null);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// value not equal and reverse\r\n\t\tif (input && value !== input.value && this.isReverse) {\r\n\t\t\tinput.setErrors({\r\n\t\t\t\tmatch: true,\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n}\r\n","import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\r\n\r\n@Directive({\r\n\tselector: '[ngModel][uppercase]'\r\n})\r\nexport class UppercaseDirective {\r\n\r\n\t@Output() ngModelChange: EventEmitter<any> = new EventEmitter();\r\n\tvalue: any;\r\n\r\n\t@HostListener('input', ['$event']) onInputChange($event) {\r\n\t\tthis.value = $event.target.value.toUpperCase();\r\n\t\tthis.ngModelChange.emit(this.value);\r\n\t}\r\n\r\n}\r\n","import { Injectable, Type } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ControlInterface } from '../config/control.config';\r\nimport { ControlOption, IControlOption } from '../control/control-option';\r\nimport { ControlService } from '../control/control.service';\r\nimport { ControlGroup } from '../control/group/control-group';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class FormService {\r\n\r\n\tconstructor(\r\n\t\tprotected controlService: ControlService,\r\n\t) { }\r\n\r\n\tgetOptions(data: IControlOption<any>[]): ControlOption<any>[] {\r\n\t\tconst options: ControlOption<any>[] = data.map((option: IControlOption<any>) => {\r\n\t\t\tconst control: ControlInterface = this.controlService.options.controls[option.schema];\r\n\t\t\tif (control) {\r\n\t\t\t\tconst optionModel: Type<ControlOption<any>> = control.model;\r\n\t\t\t\tconst optionModelInstance: ControlOption<any> = new optionModel(option);\r\n\t\t\t\tif (optionModelInstance instanceof ControlGroup) {\r\n\t\t\t\t\tconst options = this.getOptions(optionModelInstance.options);\r\n\t\t\t\t\toptions.sort((a, b) => a.order - b.order);\r\n\t\t\t\t\toptionModelInstance.options = options;\r\n\t\t\t\t}\r\n\t\t\t\treturn optionModelInstance;\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error(`missing option for key ${option.schema}`);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}).filter(x => x);\r\n\t\toptions.sort((a, b) => a.order - b.order);\r\n\t\treturn options;\r\n\t}\r\n\r\n\tgetFormGroup(options: ControlOption<any>[]): FormGroup {\r\n\t\treturn this.controlService.toFormGroup(options);\r\n\t}\r\n\r\n\tgetFormGroupFromOptions(options: IControlOption<any>[]): FormGroup {\r\n\t\treturn this.getFormGroup(this.getOptions(options));\r\n\t}\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CoreModule } from '@designr/core';\r\nimport { ControlConfig, CONTROL_CONFIG, entryComponents } from './config/control.config';\r\nimport { ControlModuleComponent } from './control-module.component';\r\nimport { ControlOutletComponent } from './control/control-outlet.component';\r\nimport { ControlAccessor } from './control/control.accessor';\r\nimport { ControlComponent } from './control/control.component';\r\nimport { ControlService } from './control/control.service';\r\nimport { ControlsComponent } from './control/controls.component';\r\nimport { ExistsValidator } from './directives/exists.directive';\r\nimport { MatchValidator } from './directives/match.directive';\r\nimport { UppercaseDirective } from './directives/uppercase.directive';\r\nimport { FormService } from './form/form.service';\r\n\r\nconst services = [\r\n\tControlService,\r\n\tFormService,\r\n];\r\n\r\nconst components = [\r\n\tControlsComponent,\r\n\tControlModuleComponent,\r\n\tControlOutletComponent,\r\n\tControlComponent,\r\n\t...entryComponents,\r\n];\r\n\r\nconst directives = [\r\n\tUppercaseDirective,\r\n\tControlAccessor,\r\n];\r\n\r\nconst pipes = [\r\n];\r\n\r\nconst validators = [\r\n\tExistsValidator,\r\n\tMatchValidator,\r\n];\r\n\r\nconst guards = [\r\n];\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tCoreModule,\r\n\t],\r\n\tproviders: [\r\n\t\t...services,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\tdeclarations: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\tentryComponents: [\r\n\t\t...entryComponents,\r\n\t],\r\n\texports: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n})\r\n\r\nexport class ControlModule {\r\n\r\n\tconstructor(\r\n\t\t@Optional() @SkipSelf() parentModule: ControlModule\r\n\t) {\r\n\t\t/*\r\n\t\tif (parentModule) {\r\n\t\t\tthrow new Error('ControlModule is already loaded. Import it in the AppModule only');\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\r\n\tpublic static forRoot(\r\n\t\tconfig?: ControlConfig,\r\n\t): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: ControlModule,\r\n\t\t\tproviders: [{\r\n\t\t\t\tprovide: CONTROL_CONFIG, useValue: config\r\n\t\t\t}]\r\n\t\t};\r\n\t}\r\n\r\n}\r\n"]}