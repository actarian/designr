{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@designr/control/lib/control/control-option.ts","ng://@designr/control/lib/control/checkbox/control-checkbox.ts","ng://@designr/control/lib/control/control.component.ts","ng://@designr/control/lib/control/checkbox/control-checkbox.component.ts","ng://@designr/control/lib/control/email/control-email.ts","ng://@designr/control/lib/control/email/control-email.component.ts","ng://@designr/control/lib/control/markdown/control-markdown.ts","ng://@designr/control/lib/control/markdown/control-markdown.component.ts","ng://@designr/control/lib/control/number/control-number.ts","ng://@designr/control/lib/control/number/control-number.component.ts","ng://@designr/control/lib/control/password/control-password.ts","ng://@designr/control/lib/control/password/control-password.component.ts","ng://@designr/control/lib/control/radio/control-radio.ts","ng://@designr/control/lib/control/radio/control-radio.component.ts","ng://@designr/control/lib/control/select/control-select.ts","ng://@designr/control/lib/control/select/control-select.component.ts","ng://@designr/control/lib/control/text/control-text.ts","ng://@designr/control/lib/control/text/control-text.component.ts","ng://@designr/control/lib/control/textarea/control-textarea.ts","ng://@designr/control/lib/control/textarea/control-textarea.component.ts","ng://@designr/control/lib/config/control.config.ts","ng://@designr/control/lib/control-module.component.ts","ng://@designr/control/lib/directives/match.validator.ts","ng://@designr/control/lib/control/control.service.ts","ng://@designr/control/lib/control/control-outlet.component.ts","ng://@designr/control/lib/control/control.accessor.ts","ng://@designr/control/lib/control/controls.component.ts","ng://@designr/control/lib/directives/exists.directive.ts","ng://@designr/control/lib/directives/match.directive.ts","ng://@designr/control/lib/directives/uppercase.directive.ts","ng://@designr/control/lib/form/form.service.ts","ng://@designr/control/lib/control.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","ControlOption","options","schema","ControlCheckbox","_this","_super","tslib_1.__extends","ControlComponent","defineProperty","form","controls","option","key","control","valid","invalid","dirty","empty","required","Boolean","requiredTrue","disabled","Component","args","selector","template","ContentChild","Input","DisposableComponent","ControlCheckboxComponent","ControlEmail","pattern","ControlEmailComponent","ControlMarkdown","ControlMarkdownComponent","ControlNumber","ControlNumberComponent","ControlPassword","ControlPasswordComponent","reveal","checked","ControlRadio","ControlRadioComponent","ControlSelect","ControlSelectComponent","getValue","getValue_","bind","compareWith","compareWith_","ngOnInit","options$","pipe","takeUntil","unsubscribe","subscribe","isObservable","isArray","of","item","asObject","id","a","ControlText","ControlTextComponent","ControlTextarea","ControlTextareaComponent","entryComponents","checkbox","component","model","email","markdown","number","password","radio","select","text","textarea","ControlConfig","CONTROL_CONFIG","InjectionToken","ControlModuleComponent","version","matchValidator","otherKey","reverse","group","otherControl","match","errors","keys","setErrors","ControlService","resolve","getValidators","validators","min","Validators","max","minlength","minLength","maxlength","maxLength","toFormGroup","forEach","x","FormControl","disable","FormGroup","setValidators","Injectable","providedIn","decorators","type","Inject","ControlOutletComponent","componentFactoryResolver","controlService","componentRef","instance","classes","factory","resolveComponentFactory","viewContainerRef","clear","createComponent","ngOnDestroy","destroy","ComponentFactoryResolver","ViewChild","read","ViewContainerRef","CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","ControlAccessor","multi","renderer","element","onChange","onTouched","formatValue","toString","parseValue","writeValue","formattedValue","setProperty","nativeElement","registerOnChange","callback","parsedValue","registerOnTouched","setDisabledState","isDisabled","Directive","host","(change)","(input)","(blur)","providers","Renderer2","ElementRef","ControlsComponent","ExistsValidator","values","BehaviorSubject","debounced$","debounceTime","switchMap","exists$","catchError","response","console","log","take","trim","exists","validate","NG_ASYNC_VALIDATORS","MatchValidator","input","root","get","isReverse","NG_VALIDATORS","Attribute","UppercaseDirective","ngModelChange","EventEmitter","onInputChange","$event","target","toUpperCase","emit","Output","HostListener","FormService","getFormGroup","getOptions","data","map","filter","sort","order","getFormGroupFromOptions","services","components","directives","pipes","ControlModule","parentModule","forRoot","config","ngModule","useValue","NgModule","imports","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","CoreModule","declarations","exports","Optional","SkipSelf"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","let UNIQUE_ID: number = 0;\n\nexport interface IControlOption<T> {\n\tschema: string;\n\tvalue?: T;\n\torder?: number;\n\tkey?: string;\n\tlabel?: string;\n\tplaceholder?: string;\n\tdisabled?: boolean;\n\trequired?: boolean;\n\tmatch?: string;\n\treverse?: boolean;\n\t[x: string]: any;\n}\n\nexport class ControlOption<T> {\n\tschema: string = 'text';\n\tvalue?: T;\n\torder?: number;\n\tkey?: string;\n\tlabel?: string;\n\tplaceholder?: string;\n\tdisabled?: boolean;\n\trequired?: boolean;\n\tmatch?: string;\n\treverse?: boolean;\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n\n\tconstructor(options?: IControlOption<T>) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t\t/*\n\t\tconst name = `${options.key || 'Control'} ${++UNIQUE_ID}`;\n\t\tthis.label = this.label || name;\n\t\tthis.placeholder = this.placeholder || name;\n\t\tthis.order = this.order === undefined ? 1 : this.order;\n\t\tthis.schema = this.schema || 'text';\n\t\tthis.type = this.type || this.schema;\n\t\t*/\n\t}\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlCheckbox extends ControlOption<boolean> {\n\tschema: string = 'checkbox';\n\trequiredTrue?: boolean;\n}\n","import { NgForOfContext } from '@angular/common';\nimport { Component, ContentChild, Input, TemplateRef } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { DisposableComponent } from '@designr/core';\nimport { IControlOption } from './control-option';\n\n@Component({\n\tselector: 'control-component',\n\ttemplateUrl: 'control.component.html',\n})\nexport class ControlComponent extends DisposableComponent {\n\n\t@ContentChild('controlRef') controlRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ContentChild('labelRef') labelRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ContentChild('inputRef') inputRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ContentChild('errorRef') errorRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\n\t@Input() option: IControlOption<any>;\n\t@Input() form: FormGroup;\n\n\tget context(): ControlComponent {\n\t\treturn this;\n\t}\n\n\tget control(): AbstractControl {\n\t\t// console.log('control', this.option.key, this.form.controls);\n\t\treturn this.form.controls[this.option.key];\n\t}\n\n\tget isValid() { return this.control.valid; }\n\n\tget classes() {\n\t\treturn {\n\t\t\tvalid: this.control.valid,\n\t\t\tinvalid: this.control.invalid,\n\t\t\tdirty: this.control.dirty,\n\t\t\tempty: (this.control.value == null),\n\t\t\trequired: Boolean(this.option.required || this.option.requiredTrue),\n\t\t\tdisabled: this.option.disabled,\n\t\t};\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlCheckbox } from './control-checkbox';\n\n@Component({\n\tselector: 'control-checkbox-component',\n\ttemplateUrl: 'control-checkbox.component.html',\n})\nexport class ControlCheckboxComponent extends ControlComponent {\n\n\t@Input() option: ControlCheckbox;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlEmail extends ControlOption<string> {\n\tschema: string = 'email';\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp = '[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}';\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlEmail } from './control-email';\n\n@Component({\n\tselector: 'control-email-component',\n\ttemplateUrl: 'control-email.component.html',\n})\nexport class ControlEmailComponent extends ControlComponent {\n\n\t@Input() option: ControlEmail;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlMarkdown extends ControlOption<string> {\n\tschema: string = 'markdown';\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlMarkdown } from './control-markdown';\n\n@Component({\n\tselector: 'control-markdown-component',\n\ttemplateUrl: 'control-markdown.component.html',\n})\nexport class ControlMarkdownComponent extends ControlComponent {\n\n\t@Input() option: ControlMarkdown;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlNumber extends ControlOption<string> {\n\tschema: string = 'number';\n\tmin?: number;\n\tmax?: number;\n\tstep?: number;\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlNumber } from './control-number';\n\n@Component({\n\tselector: 'control-number-component',\n\ttemplateUrl: 'control-number.component.html',\n})\nexport class ControlNumberComponent extends ControlComponent {\n\n\t@Input() option: ControlNumber;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlPassword extends ControlOption<string> {\n\tschema: string = 'password';\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlPassword } from './control-password';\n\n@Component({\n\tselector: 'control-password-component',\n\ttemplateUrl: 'control-password.component.html',\n})\nexport class ControlPasswordComponent extends ControlComponent {\n\n\treveal: { checked: boolean } = { checked: false };\n\n\t@Input() option: ControlPassword;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlRadio extends ControlOption<boolean> {\n\tschema: string = 'radio';\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlRadio } from './control-radio';\n\n@Component({\n\tselector: 'control-radio-component',\n\ttemplateUrl: 'control-radio.component.html',\n})\nexport class ControlRadioComponent extends ControlComponent {\n\n\t@Input() option: ControlRadio;\n\n}\n","import { Observable } from 'rxjs';\nimport { ControlOption } from '../control-option';\n\nexport interface ControlSelectOption {\n\tid: any;\n\tname: string;\n}\n\nexport class ControlSelect extends ControlOption<string> {\n\tschema: string = 'select';\n\toptions?: ControlSelectOption[] | Observable<ControlSelectOption[]>;\n\tasObject: boolean;\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { isObservable, Observable, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ControlComponent } from '../control.component';\nimport { ControlSelect, ControlSelectOption } from './control-select';\n\n@Component({\n\tselector: 'control-select-component',\n\ttemplateUrl: 'control-select.component.html',\n})\nexport class ControlSelectComponent extends ControlComponent implements OnInit {\n\n\t@Input() option: ControlSelect;\n\toptions: ControlSelectOption[] = [];\n\tgetValue: Function = this.getValue_.bind(this);\n\tcompareWith: Function = this.compareWith_.bind(this);\n\n\tconstructor(\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.options$().pipe(\n\t\t\ttakeUntil(this.unsubscribe)\n\t\t).subscribe(options => this.options = options);\n\t}\n\n\toptions$(): Observable<ControlSelectOption[]> {\n\t\tconst options = this.option.options;\n\t\tif (options) {\n\t\t\tif (isObservable(options)) {\n\t\t\t\treturn options;\n\t\t\t} else if (Array.isArray(options)) {\n\t\t\t\treturn of(options);\n\t\t\t} else {\n\t\t\t\treturn of([]);\n\t\t\t}\n\t\t} else {\n\t\t\treturn of([]);\n\t\t}\n\t}\n\n\tgetValue_(item: ControlSelectOption): any {\n\t\treturn this.option.asObject ? item : item.id;\n\t}\n\n\tcompareWith_(a: ControlSelectOption | number, b: ControlSelectOption | number) {\n\t\tif (this.option.asObject) {\n\t\t\ta = a as ControlSelectOption;\n\t\t\tb = b as ControlSelectOption;\n\t\t\t// b = (b as ControlSelectOption) || { id: null, name: 'Any' };\n\t\t\t// console.log(a, b);\n\t\t\treturn b ? a.id === b.id : a.id === null;\n\t\t} else {\n\t\t\treturn b ? a === b : a === null;\n\t\t}\n\t}\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlText extends ControlOption<string> {\n\tschema: string = 'text';\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlText } from './control-text';\n\n@Component({\n\tselector: 'control-text-component',\n\ttemplateUrl: 'control-text.component.html',\n})\nexport class ControlTextComponent extends ControlComponent {\n\n\t@Input() option: ControlText;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlTextarea extends ControlOption<string> {\n\tschema: string = 'textarea';\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlTextarea } from './control-textarea';\n\n@Component({\n\tselector: 'control-textarea-component',\n\ttemplateUrl: 'control-textarea.component.html',\n})\nexport class ControlTextareaComponent extends ControlComponent {\n\n\t@Input() option: ControlTextarea;\n\n}\n","import { InjectionToken, Type } from '@angular/core';\nimport { ControlCheckbox } from '../control/checkbox/control-checkbox';\nimport { ControlCheckboxComponent } from '../control/checkbox/control-checkbox.component';\nimport { IControlOption } from '../control/control-option';\nimport { ControlComponent } from '../control/control.component';\nimport { ControlEmail } from '../control/email/control-email';\nimport { ControlEmailComponent } from '../control/email/control-email.component';\nimport { ControlMarkdown } from '../control/markdown/control-markdown';\nimport { ControlMarkdownComponent } from '../control/markdown/control-markdown.component';\nimport { ControlNumber } from '../control/number/control-number';\nimport { ControlNumberComponent } from '../control/number/control-number.component';\nimport { ControlPassword } from '../control/password/control-password';\nimport { ControlPasswordComponent } from '../control/password/control-password.component';\nimport { ControlRadio } from '../control/radio/control-radio';\nimport { ControlRadioComponent } from '../control/radio/control-radio.component';\nimport { ControlSelect } from '../control/select/control-select';\nimport { ControlSelectComponent } from '../control/select/control-select.component';\nimport { ControlText } from '../control/text/control-text';\nimport { ControlTextComponent } from '../control/text/control-text.component';\nimport { ControlTextarea } from '../control/textarea/control-textarea';\nimport { ControlTextareaComponent } from '../control/textarea/control-textarea.component';\n\nexport interface ControlInterface {\n\tcomponent: Type<ControlComponent>;\n\tmodel: Type<IControlOption<any>>;\n}\n\nexport interface Controls { [key: string]: ControlInterface; }\n\nexport const entryComponents = [\n\tControlCheckboxComponent,\n\tControlEmailComponent,\n\tControlMarkdownComponent,\n\tControlNumberComponent,\n\tControlPasswordComponent,\n\tControlRadioComponent,\n\tControlSelectComponent,\n\tControlTextComponent,\n\tControlTextareaComponent,\n];\n\nexport const controls: Controls = {\n\t'checkbox': {\n\t\tcomponent: ControlCheckboxComponent,\n\t\tmodel: ControlCheckbox\n\t},\n\t'email': {\n\t\tcomponent: ControlEmailComponent,\n\t\tmodel: ControlEmail\n\t},\n\t'markdown': {\n\t\tcomponent: ControlMarkdownComponent,\n\t\tmodel: ControlMarkdown\n\t},\n\t'number': {\n\t\tcomponent: ControlNumberComponent,\n\t\tmodel: ControlNumber\n\t},\n\t'password': {\n\t\tcomponent: ControlPasswordComponent,\n\t\tmodel: ControlPassword\n\t},\n\t'radio': {\n\t\tcomponent: ControlRadioComponent,\n\t\tmodel: ControlRadio\n\t},\n\t'select': {\n\t\tcomponent: ControlSelectComponent,\n\t\tmodel: ControlSelect\n\t},\n\t'text': {\n\t\tcomponent: ControlTextComponent,\n\t\tmodel: ControlText\n\t},\n\t'textarea': {\n\t\tcomponent: ControlTextareaComponent,\n\t\tmodel: ControlTextarea\n\t},\n};\n\nexport class ControlConfig {\n\n\tcontrols?: Controls = {};\n\n\tconstructor(options?: ControlConfig) {\n\t\t// console.log('ControlConfig', options);\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t\tthis.controls = {\n\t\t\t\t...controls,\n\t\t\t\t...(options.controls || {})\n\t\t\t};\n\t\t}\n\t}\n}\n\nexport const CONTROL_CONFIG = new InjectionToken<ControlConfig>('control.config');\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'control-module',\n\ttemplate: `<span class=\"control-module\">control {{version}}</span>`,\n\tstyles: []\n})\nexport class ControlModuleComponent implements OnInit {\n\n\tversion: string = '0.0.7';\n\n\tconstructor() { }\n\n\tngOnInit() {\n\t}\n\n}\n","import { FormControl, FormGroup, ValidatorFn } from '@angular/forms';\n\nexport function matchValidator(otherKey: string, reverse: boolean = false, group: FormGroup): ValidatorFn {\n\treturn (control: FormControl) => {\n\t\tconst otherControl = group.controls[otherKey];\n\n\t\tconst value = control.value;\n\n\t\t// value not equal\n\t\tif (otherControl && value !== otherControl.value && !reverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (otherControl && value === otherControl.value && reverse) {\n\t\t\tif (otherControl.errors) {\n\t\t\t\tdelete otherControl.errors['match'];\n\t\t\t\tif (!Object.keys(otherControl.errors).length) {\n\t\t\t\t\totherControl.setErrors(null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (otherControl && value !== otherControl.value && reverse) {\n\t\t\totherControl.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t};\n}\n\n/*\nexport function __matchValidator(key: string, otherKey: string, group: FormGroup): ValidatorFn {\n\treturn (control: FormControl) => {\n\n\t\t// const control = group.controls[key];\n\t\tconst otherControl = group.controls[otherKey];\n\n\t\t// console.log(control.touched, otherControl.touched);\n\n\t\tif (control.touched && otherControl.touched) {\n\t\t\tconst match = control.value === otherControl.value;\n\t\t\tif (!match && control.valid && otherControl.valid) {\n\t\t\t\tcontrol.setErrors({\n\t\t\t\t\tmatch: otherKey\n\t\t\t\t});\n\t\t\t\treturn {\n\t\t\t\t\tmatch: otherKey + ' != ' + key\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (match && control.hasError('match')) {\n\t\t\t\tcontrol.setErrors(null);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n}\n*/\n\n/*\nvalidate(control: AbstractControl): { [key: string]: any } {\n\t\t// self value\n\t\tconst value = control.value;\n\n\t\t// control value\n\t\tconst input = control.root.get(this.match);\n\n\t\t// value not equal\n\t\tif (input && value !== input.value && !this.isReverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (input && value === input.value && this.isReverse) {\n\t\t\tdelete input.errors['match'];\n\t\t\tif (!Object.keys(input.errors).length) {\n\t\t\t\tinput.setErrors(null);\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (input && value !== input.value && this.isReverse) {\n\t\t\tinput.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n*/\n/*\nstatic isValidString(control: FormControl) {\n\tif (!control.value || typeof control.value !== 'string') {\n\t\treturn {isNotValidString: true};\n\t}\n\treturn null;\n}\n\nstatic isValidName(control: FormControl) {\n\tif (control.valid && control.value !== 'John Doe') {\n\t\treturn {isNotValidName: true};\n\t}\n\treturn null;\n}\n*/\n","import { Inject, Injectable, Type } from '@angular/core';\nimport { FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { ControlConfig, CONTROL_CONFIG } from '../config/control.config';\nimport { matchValidator } from '../directives/match.validator';\nimport { IControlOption } from './control-option';\nimport { ControlComponent } from './control.component';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ControlService {\n\n\tpublic options: ControlConfig;\n\n\tconstructor(\n\t\t@Inject(CONTROL_CONFIG) options: ControlConfig\n\t) {\n\t\t// console.log('ControlService', options);\n\t\tthis.options = new ControlConfig(options || {});\n\t}\n\n\tresolve(options: IControlOption<any>): Type<ControlComponent> {\n\t\tlet component: Type<ControlComponent>;\n\t\tif (options) {\n\t\t\tcomponent = this.options.controls[options.schema].component || ControlComponent;\n\t\t} else {\n\t\t\tcomponent = ControlComponent;\n\t\t}\n\t\treturn component;\n\t}\n\n\tgetValidators(options: IControlOption<any>, group: FormGroup): ValidatorFn[] {\n\t\tconst validators: ValidatorFn[] = [];\n\t\tif (options.min) {\n\t\t\tvalidators.push(Validators.min(options.min));\n\t\t}\n\t\tif (options.max) {\n\t\t\tvalidators.push(Validators.max(options.max));\n\t\t}\n\t\tif (options.required) {\n\t\t\tvalidators.push(Validators.required);\n\t\t}\n\t\tif (options.requiredTrue) {\n\t\t\tvalidators.push(Validators.requiredTrue);\n\t\t}\n\t\tif (options.minlength) {\n\t\t\tvalidators.push(Validators.minLength(options.minlength));\n\t\t}\n\t\tif (options.maxlength) {\n\t\t\tvalidators.push(Validators.maxLength(options.maxlength));\n\t\t}\n\t\tif (options.pattern) {\n\t\t\tvalidators.push(Validators.pattern(options.pattern));\n\t\t}\n\t\tif (options.match) {\n\t\t\tvalidators.push(matchValidator(options.match, options.reverse, group));\n\t\t}\n\t\tif (options.schema === 'email') {\n\t\t\tvalidators.push(Validators.email);\n\t\t}\n\t\t// console.log(options.key, validators);\n\t\treturn validators;\n\t}\n\n\ttoFormGroup(options: IControlOption<any>[]): FormGroup {\n\t\tconst controls: { [key: string]: FormControl } = {};\n\t\toptions.forEach(x => {\n\t\t\t// group[x.key] = new FormControl(x.value, this.getValidators(x, group));\n\t\t\tconst control: FormControl = new FormControl(x.value);\n\t\t\tif (x.disabled) {\n\t\t\t\tcontrol.disable();\n\t\t\t}\n\t\t\tcontrols[x.key] = control;\n\t\t\t// x.setControl(control); // !!!\n\t\t});\n\t\tconst group: FormGroup = new FormGroup(controls);\n\t\t// console.log(group);\n\t\toptions.forEach(x => {\n\t\t\tconst validators = this.getValidators(x, group);\n\t\t\t// console.log(validators);\n\t\t\tgroup.controls[x.key].setValidators(validators);\n\t\t});\n\t\treturn group;\n\t}\n\n}\n","import { Component, ComponentFactory, ComponentFactoryResolver, ComponentRef, Input, OnDestroy, OnInit, Type, ViewChild, ViewContainerRef } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { IControlOption } from './control-option';\nimport { ControlComponent } from './control.component';\nimport { ControlService } from './control.service';\n\n@Component({\n\tselector: 'control-outlet',\n\ttemplate: `\n\t<!--\n\t<div class=\"control\" [ngClass]=\"classes\">\n\t\t<label class=\"form-label\" [attr.for]=\"option.key\">{{ option.label | label }}</label>\n\t\t<input class=\"form-control\" placeholder=\"{{ option.placeholder | label }}\" [id]=\"option.key\" type=\"text\">\n\t</div>\n\t-->\n\t<!-- [formControlName]=\"option.key\" -->\n\t<ng-template #outlet></ng-template>\n\t`,\n})\nexport class ControlOutletComponent implements OnInit, OnDestroy {\n\n\t@Input() option: IControlOption<any>;\n\t@Input() form: FormGroup;\n\n\t@ViewChild('outlet', { read: ViewContainerRef }) viewContainerRef: ViewContainerRef;\n\tprivate componentRef: ComponentRef<ControlComponent>;\n\n\tget classes(): { [key: string]: boolean } {\n\t\t// console.log('control', this.option.key, this.form.controls);\n\t\treturn this.componentRef ? this.componentRef.instance.classes : null;\n\t}\n\n\tget control(): AbstractControl {\n\t\t// console.log('control', this.option.key, this.form.controls);\n\t\treturn this.componentRef ? this.componentRef.instance.control : null;\n\t}\n\n\tconstructor(\n\t\tprivate componentFactoryResolver: ComponentFactoryResolver,\n\t\tprivate controlService: ControlService,\n\t) { }\n\n\tngOnInit() {\n\t\tconst component: Type<ControlComponent> = this.controlService.resolve(this.option);\n\t\tconst factory: ComponentFactory<ControlComponent> = this.componentFactoryResolver.resolveComponentFactory(component);\n\t\tthis.viewContainerRef.clear();\n\t\tconst componentRef = this.viewContainerRef.createComponent(factory);\n\t\tconst instance = componentRef.instance;\n\t\tinstance.option = this.option;\n\t\tinstance.form = this.form;\n\t\tif (typeof instance['ControlInit'] === 'function') {\n\t\t\tinstance['ControlInit']();\n\t\t}\n\t\tthis.componentRef = componentRef;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.componentRef.destroy();\n\t}\n\n}\n","\nimport { Directive, ElementRef, forwardRef, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const CONTROL_VALUE_ACCESSOR: any = {\n\tprovide: NG_VALUE_ACCESSOR,\n\t// tslint:disable-next-line:no-use-before-declare\n\tuseExisting: forwardRef(() => ControlAccessor),\n\tmulti: true\n};\n\n@Directive({\n\tselector:\n\t\t'input[designr-accessor][formControlName],input[designr-accessor][formControl],input[designr-accessor][ngModel]',\n\t// tslint:disable-next-line:use-host-property-decorator\n\thost: {\n\t\t'(change)': 'onChange($event.target.value)',\n\t\t'(input)': 'onChange($event.target.value)',\n\t\t'(blur)': 'onTouched()'\n\t},\n\tproviders: [CONTROL_VALUE_ACCESSOR]\n})\n// tslint:disable-next-line:directive-class-suffix\nexport class ControlAccessor<T> implements ControlValueAccessor {\n\n\tconstructor(\n\t\tprotected renderer: Renderer2,\n\t\tprotected element: ElementRef\n\t) { }\n\n\tprotected formatValue(value: T): string {\n\t\treturn value.toString();\n\t}\n\n\tprotected parseValue(value: any): T {\n\t\treturn value && value !== '' ? value : null;\n\t}\n\n\tonChange = (value: any) => { };\n\tonTouched = () => { };\n\n\twriteValue(value: T): void {\n\t\tconst formattedValue = this.formatValue(value);\n\t\tthis.renderer.setProperty(this.element.nativeElement, 'value', formattedValue);\n\t}\n\n\tregisterOnChange(callback: (x: T | null) => void): void {\n\t\tthis.onChange = (value: any) => {\n\t\t\tconst parsedValue = this.parseValue(value);\n\t\t\tconst formattedValue = this.formatValue(parsedValue);\n\t\t\tthis.renderer.setProperty(this.element.nativeElement, 'value', formattedValue);\n\t\t\tcallback(parsedValue);\n\t\t};\n\t}\n\n\tregisterOnTouched(callback: () => void): void {\n\t\tthis.onTouched = callback;\n\t}\n\n\tsetDisabledState(isDisabled: boolean): void {\n\t\tthis.renderer.setProperty(this.element.nativeElement, 'disabled', isDisabled);\n\t}\n\n}\n","\nimport { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { DisposableComponent } from '@designr/core';\nimport { IControlOption } from './control-option';\n\n@Component({\n\tselector: 'controls-component',\n\ttemplate: `<ng-container *ngFor=\"let option of options\">\n\t<control-outlet class=\"form-group\" [option]=\"option\" [form]=\"form\"></control-outlet>\n</ng-container>`,\n})\nexport class ControlsComponent extends DisposableComponent {\n\t@Input() options: IControlOption<any>[];\n\t@Input() form: FormGroup;\n}\n","import { Directive, forwardRef, Input } from '@angular/core';\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { catchError, debounceTime, switchMap, take } from 'rxjs/operators';\n\nconst DEBOUNCE_TIME: number = 250;\n\n@Directive({\n\tselector: '[exists][formControlName],[exists][formControl],[exists][ngModel]',\n\tproviders: [\n\t\t{ provide: NG_ASYNC_VALIDATORS, useExisting: forwardRef(() => ExistsValidator), multi: true },\n\t]\n})\nexport class ExistsValidator implements AsyncValidator {\n\n\tprivate values = new BehaviorSubject<string>(null);\n\tset value(value: string) {\n\t\tif (value && value.trim() !== '') {\n\t\t\tthis.values.next(value);\n\t\t}\n\t}\n\tprivate debounced$: Observable<ValidationErrors | null> = this.values.pipe(\n\t\tdebounceTime(DEBOUNCE_TIME),\n\t\tswitchMap((value: string) => {\n\t\t\t// console.log('ExistsValidator.debounced$', value);\n\t\t\treturn this.exists$(value);\n\t\t}),\n\t\tcatchError((response) => {\n\t\t\tconsole.log('ExistsValidator.debounced$.catchError', response);\n\t\t\treturn of(null);\n\t\t}),\n\t\ttake(1),\n\t);\n\n\t@Input() exists: Function;\n\n\texists$(value: string): Observable<ValidationErrors | null> {\n\t\tif (typeof this.exists === 'function') {\n\t\t\t// console.log('ExistsValidator.exists$', value);\n\t\t\treturn this.exists(value).pipe(\n\t\t\t\tswitchMap(exists => {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\treturn of({\n\t\t\t\t\t\t\texists: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn of(null);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t} else {\n\t\t\treturn of(null);\n\t\t}\n\t}\n\n\tvalidate(control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n\t\tthis.value = control.value;\n\t\treturn this.debounced$;\n\t}\n\n}\n","import { Attribute, Directive, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n@Directive({\n\tselector: '[match][formControlName],[match][formControl],[match][ngModel]',\n\tproviders: [\n\t\t{ provide: NG_VALIDATORS, useExisting: forwardRef(() => MatchValidator), multi: true }\n\t]\n})\nexport class MatchValidator implements Validator {\n\n\tconstructor(\n\t\t@Attribute('match') public match: string,\n\t\t@Attribute('reverse') public reverse: string\n\t) { }\n\n\tprivate get isReverse() {\n\t\tif (!this.reverse) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.reverse === 'true' ? true : false;\n\t}\n\n\tvalidate(control: AbstractControl): { [key: string]: any } {\n\n\t\t// self value\n\t\tconst value = control.value;\n\n\t\t// control value\n\t\tconst input = control.root.get(this.match);\n\n\t\t// value not equal\n\t\tif (input && value !== input.value && !this.isReverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (input && value === input.value && this.isReverse) {\n\t\t\tdelete input.errors['match'];\n\t\t\tif (!Object.keys(input.errors).length) {\n\t\t\t\tinput.setErrors(null);\n\t\t\t}\n\t\t}\n\n\t\t// value not equal and reverse\n\t\tif (input && value !== input.value && this.isReverse) {\n\t\t\tinput.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n\n}\n","import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n\tselector: '[ngModel][uppercase]'\n})\nexport class UppercaseDirective {\n\n\t@Output() ngModelChange: EventEmitter<any> = new EventEmitter();\n\tvalue: any;\n\n\t@HostListener('input', ['$event']) onInputChange($event) {\n\t\tthis.value = $event.target.value.toUpperCase();\n\t\tthis.ngModelChange.emit(this.value);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ControlInterface } from '../config/control.config';\nimport { ControlOption, IControlOption } from '../control/control-option';\nimport { ControlService } from '../control/control.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FormService {\n\n\tconstructor(\n\t\tprivate controlService: ControlService\n\t) { }\n\n\tgetFormGroup(options: ControlOption<any>[]): FormGroup {\n\t\treturn this.controlService.toFormGroup(options);\n\t}\n\n\tgetOptions(data: IControlOption<any>[]): ControlOption<any>[] {\n\t\tconst options: ControlOption<any>[] = data.map(o => {\n\t\t\tconst control: ControlInterface = this.controlService.options.controls[o.schema];\n\t\t\tif (control) {\n\t\t\t\tconst optionModel: Type<ControlOption<any>> = control.model;\n\t\t\t\treturn new optionModel(o);\n\t\t\t} else {\n\t\t\t\tconsole.error(`missing option for key ${o.schema}`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}).filter(x => x);\n\t\toptions.sort((a, b) => a.order - b.order);\n\t\treturn options;\n\t}\n\n\tgetFormGroupFromOptions(options: IControlOption<any>[]): FormGroup {\n\t\treturn this.getFormGroup(this.getOptions(options));\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CoreModule } from '@designr/core';\r\nimport { ControlConfig, CONTROL_CONFIG, entryComponents } from './config/control.config';\r\nimport { ControlModuleComponent } from './control-module.component';\r\nimport { ControlOutletComponent } from './control/control-outlet.component';\r\nimport { ControlAccessor } from './control/control.accessor';\r\nimport { ControlComponent } from './control/control.component';\r\nimport { ControlService } from './control/control.service';\r\nimport { ControlsComponent } from './control/controls.component';\r\nimport { ExistsValidator } from './directives/exists.directive';\r\nimport { MatchValidator } from './directives/match.directive';\r\nimport { UppercaseDirective } from './directives/uppercase.directive';\r\nimport { FormService } from './form/form.service';\r\n\r\nconst services = [\r\n\tControlService,\r\n\tFormService,\r\n];\r\n\r\nconst components = [\r\n\tControlsComponent,\r\n\tControlModuleComponent,\r\n\tControlOutletComponent,\r\n\tControlComponent,\r\n\t...entryComponents,\r\n];\r\n\r\nconst directives = [\r\n\tUppercaseDirective,\r\n\tControlAccessor,\r\n];\r\n\r\nconst pipes = [\r\n];\r\n\r\nconst validators = [\r\n\tExistsValidator,\r\n\tMatchValidator,\r\n];\r\n\r\nconst guards = [\r\n];\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tCoreModule,\r\n\t],\r\n\tproviders: [\r\n\t\t...services,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\tdeclarations: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\tentryComponents: [\r\n\t\t...entryComponents,\r\n\t],\r\n\texports: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n})\r\n\r\nexport class ControlModule {\r\n\r\n\tconstructor(\r\n\t\t@Optional() @SkipSelf() parentModule: ControlModule\r\n\t) {\r\n\t\t/*\r\n\t\tif (parentModule) {\r\n\t\t\tthrow new Error('ControlModule is already loaded. Import it in the AppModule only');\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\r\n\tpublic static forRoot(\r\n\t\tconfig?: ControlConfig,\r\n\t): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: ControlModule,\r\n\t\t\tproviders: [{\r\n\t\t\t\tprovide: CONTROL_CONFIG, useValue: config\r\n\t\t\t}]\r\n\t\t};\r\n\t}\r\n\r\n}\r\n"]}