{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@designr/control/lib/control/control-option.ts","ng://@designr/control/lib/control/checkbox/control-checkbox.ts","ng://@designr/control/lib/control/control.component.ts","ng://@designr/control/lib/control/checkbox/control-checkbox.component.ts","ng://@designr/control/lib/control/email/control-email.ts","ng://@designr/control/lib/control/email/control-email.component.ts","ng://@designr/control/lib/control/group/control-group.ts","ng://@designr/control/lib/control/group/control-group.component.ts","ng://@designr/control/lib/control/info/control-info.ts","ng://@designr/control/lib/control/info/control-info.component.ts","ng://@designr/control/lib/control/markdown/control-markdown.ts","ng://@designr/control/lib/control/markdown/control-markdown.component.ts","ng://@designr/control/lib/control/number/control-number.ts","ng://@designr/control/lib/control/number/control-number.component.ts","ng://@designr/control/lib/control/password/control-password.ts","ng://@designr/control/lib/control/password/control-password.component.ts","ng://@designr/control/lib/control/radio/control-radio.ts","ng://@designr/control/lib/control/radio/control-radio.component.ts","ng://@designr/control/lib/control/select/control-select.ts","ng://@designr/control/lib/control/select/control-select.component.ts","ng://@designr/control/lib/control/text/control-text.ts","ng://@designr/control/lib/control/text/control-text.component.ts","ng://@designr/control/lib/control/textarea/control-textarea.ts","ng://@designr/control/lib/control/textarea/control-textarea.component.ts","ng://@designr/control/lib/config/control.config.ts","ng://@designr/control/lib/control-module.component.ts","ng://@designr/control/lib/directives/match.validator.ts","ng://@designr/control/lib/control/control.service.ts","ng://@designr/control/lib/control/control-outlet.component.ts","ng://@designr/control/lib/control/control.accessor.ts","ng://@designr/control/lib/control/controls.component.ts","ng://@designr/control/lib/directives/exists.directive.ts","ng://@designr/control/lib/directives/match.directive.ts","ng://@designr/control/lib/directives/uppercase.directive.ts","ng://@designr/control/lib/form/form.service.ts","ng://@designr/control/lib/control.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","ControlOption","options","schema","ControlCheckbox","_this","_super","tslib_1.__extends","ControlComponent","defineProperty","form","controls","option","key","control","valid","invalid","dirty","empty","required","Boolean","requiredTrue","disabled","Component","args","selector","template","ContentChild","Input","DisposableComponent","ControlCheckboxComponent","ControlEmail","pattern","ControlEmailComponent","ControlGroup","ControlGroupComponent","ControlInfo","ControlInfoComponent","ControlMarkdown","ControlMarkdownComponent","ControlNumber","ControlNumberComponent","ControlPassword","ControlPasswordComponent","reveal","checked","ControlRadio","ControlRadioComponent","ControlSelect","ControlSelectComponent","getValue","getValue_","bind","compareWith","compareWith_","ngOnInit","options$","pipe","takeUntil","unsubscribe","tap","asObject","firstNullOptions","find","x","id","undefined","setValue","subscribe","isObservable","isArray","of","item","a","ControlText","ControlTextComponent","ControlTextarea","ControlTextareaComponent","entryComponents","checkbox","component","model","email","group","info","markdown","number","password","radio","select","text","textarea","ControlConfig","CONTROL_CONFIG","InjectionToken","ControlModuleComponent","version","matchValidator","otherKey","reverse","otherControl","match","errors","keys","setErrors","ControlService","toFormGroup","forEach","group_1","FormControl","disable","FormGroup","validators","getValidators","setValidators","min","Validators","max","minlength","minLength","maxlength","maxLength","resolve","Injectable","providedIn","decorators","type","Inject","ControlOutletComponent","componentFactoryResolver","controlService","componentRef","instance","classes","ngAfterViewInit","factory","resolveComponentFactory","viewContainerRef","clear","createComponent","inputRef","errorRef","ngOnDestroy","destroy","ComponentFactoryResolver","ViewChild","read","ViewContainerRef","CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","ControlAccessor","multi","renderer","element","onChange","onTouched","formatValue","toString","parseValue","writeValue","formattedValue","setProperty","nativeElement","registerOnChange","callback","parsedValue","registerOnTouched","setDisabledState","isDisabled","Directive","host","(change)","(input)","(blur)","providers","Renderer2","ElementRef","ControlsComponent","ExistsValidator","value$","BehaviorSubject","debounced$","debounceTime","switchMap","exists$","catchError","response","console","log","take","String","trim","exists","getValidationError","validate","NG_ASYNC_VALIDATORS","MatchValidator","input","root","get","isReverse","NG_VALIDATORS","Attribute","UppercaseDirective","ngModelChange","EventEmitter","onInputChange","$event","target","toUpperCase","emit","Output","HostListener","FormService","getOptions","data","map","optionModelInstance","options_1","sort","order","filter","getFormGroup","getFormGroupFromOptions","services","components","directives","pipes","ControlModule","parentModule","forRoot","config","ngModule","useValue","NgModule","imports","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","CoreModule","declarations","exports","Optional","SkipSelf"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\n// let UNIQUE_ID: number = 0;\n\nexport interface IControlOption<T> {\n\tschema: string;\n\tvalue?: T;\n\torder?: number;\n\tkey?: string;\n\tlabel?: string;\n\tplaceholder?: string;\n\ttitle?: string;\n\tabstract?: string;\n\tdescription?: string;\n\thidden?: boolean;\n\tdisabled?: boolean;\n\trequired?: boolean;\n\texists?: Function;\n\tmatch?: string;\n\treverse?: boolean;\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n\t[x: string]: any;\n}\n\nexport class ControlOption<T> {\n\tschema: string = 'text';\n\tvalue?: T;\n\torder?: number;\n\tkey?: string;\n\tlabel?: string;\n\tplaceholder?: string;\n\ttitle?: string;\n\tabstract?: string;\n\tdescription?: string;\n\thidden?: boolean;\n\tdisabled?: boolean;\n\trequired?: boolean;\n\texists?: Function;\n\tmatch?: string;\n\treverse?: boolean;\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n\n\tconstructor(options?: IControlOption<T>) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t}\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlCheckbox extends ControlOption<boolean> {\n\tschema: string = 'checkbox';\n\trequiredTrue?: boolean;\n}\n","import { NgForOfContext } from '@angular/common';\nimport { Component, ContentChild, Input, TemplateRef } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { DisposableComponent } from '@designr/core';\nimport { IControlOption } from './control-option';\n\n@Component({\n\tselector: 'control-component',\n\ttemplateUrl: 'control.component.html',\n})\nexport class ControlComponent extends DisposableComponent {\n\n\t// @ContentChild('controlRef') controlRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t// @ContentChild('labelRef') labelRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ContentChild('inputRef') inputRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ContentChild('errorRef') errorRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\n\t@Input() option: IControlOption<any>;\n\t@Input() form: FormGroup;\n\n\tget context(): ControlComponent {\n\t\treturn this;\n\t}\n\n\tget control(): AbstractControl {\n\t\t// console.log('control', this.option.key, this.form.controls);\n\t\treturn this.form.controls[this.option.key];\n\t}\n\n\tget isValid() { return this.control.valid; }\n\n\tget classes(): {\n\t\tvalid?: boolean,\n\t\tinvalid?: boolean,\n\t\tdirty?: boolean,\n\t\tempty?: boolean,\n\t\trequired?: boolean,\n\t\tdisabled?: boolean\n\t} {\n\t\treturn {\n\t\t\tvalid: this.control.valid,\n\t\t\tinvalid: this.control.invalid,\n\t\t\tdirty: this.control.dirty,\n\t\t\tempty: (this.control.value == null),\n\t\t\trequired: Boolean(this.option.required || this.option.requiredTrue),\n\t\t\tdisabled: this.option.disabled,\n\t\t};\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlCheckbox } from './control-checkbox';\n\n@Component({\n\tselector: 'control-checkbox-component',\n\ttemplateUrl: 'control-checkbox.component.html',\n})\nexport class ControlCheckboxComponent extends ControlComponent {\n\n\t@Input() option: ControlCheckbox;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlEmail extends ControlOption<string> {\n\tschema: string = 'email';\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp = '[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}';\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlEmail } from './control-email';\n\n@Component({\n\tselector: 'control-email-component',\n\ttemplateUrl: 'control-email.component.html',\n})\nexport class ControlEmailComponent extends ControlComponent {\n\n\t@Input() option: ControlEmail;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlGroup extends ControlOption<any[]> {\n\tschema: string = 'group';\n\ttitle?: string;\n\tabstract?: string;\n\toptions?: ControlOption<any>[];\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlGroup } from './control-group';\n\n@Component({\n\tselector: 'control-group-component',\n\ttemplateUrl: 'control-group.component.html',\n})\nexport class ControlGroupComponent extends ControlComponent {\n\t@Input() option: ControlGroup;\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlInfo extends ControlOption<any[]> {\n\tschema: string = 'info';\n\ttitle?: string;\n\tabstract?: string;\n}\n","import { Component, Input } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { ControlComponent } from '../control.component';\nimport { ControlInfo } from './control-info';\n\n@Component({\n\tselector: 'control-info-component',\n\ttemplateUrl: 'control-info.component.html',\n})\nexport class ControlInfoComponent extends ControlComponent {\n\n\t@Input() option: ControlInfo;\n\n\tget control(): AbstractControl {\n\t\treturn null;\n\t}\n\n\tget isValid() {\n\t\treturn true;\n\t}\n\n\tget classes(): {\n\t\tvalid?: boolean,\n\t\tinvalid?: boolean,\n\t\tdirty?: boolean,\n\t\tempty?: boolean,\n\t\trequired?: boolean,\n\t\tdisabled?: boolean\n\t} {\n\t\treturn {};\n\t}\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlMarkdown extends ControlOption<string> {\n\tschema: string = 'markdown';\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlMarkdown } from './control-markdown';\n\n@Component({\n\tselector: 'control-markdown-component',\n\ttemplateUrl: 'control-markdown.component.html',\n})\nexport class ControlMarkdownComponent extends ControlComponent {\n\n\t@Input() option: ControlMarkdown;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlNumber extends ControlOption<string> {\n\tschema: string = 'number';\n\tmin?: number;\n\tmax?: number;\n\tstep?: number;\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlNumber } from './control-number';\n\n@Component({\n\tselector: 'control-number-component',\n\ttemplateUrl: 'control-number.component.html',\n})\nexport class ControlNumberComponent extends ControlComponent {\n\n\t@Input() option: ControlNumber;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlPassword extends ControlOption<string> {\n\tschema: string = 'password';\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlPassword } from './control-password';\n\n@Component({\n\tselector: 'control-password-component',\n\ttemplateUrl: 'control-password.component.html',\n})\nexport class ControlPasswordComponent extends ControlComponent {\n\n\treveal: { checked: boolean } = { checked: false };\n\n\t@Input() option: ControlPassword;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlRadio extends ControlOption<boolean> {\n\tschema: string = 'radio';\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlRadio } from './control-radio';\n\n@Component({\n\tselector: 'control-radio-component',\n\ttemplateUrl: 'control-radio.component.html',\n})\nexport class ControlRadioComponent extends ControlComponent {\n\n\t@Input() option: ControlRadio;\n\n}\n","import { Observable } from 'rxjs';\nimport { ControlOption } from '../control-option';\n\nexport interface ControlSelectOption {\n\tid: any;\n\tname: string;\n}\n\nexport class ControlSelect extends ControlOption<string> {\n\tschema: string = 'select';\n\toptions?: ControlSelectOption[] | Observable<ControlSelectOption[]>;\n\tasObject: boolean;\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { isObservable, Observable, of } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { ControlComponent } from '../control.component';\nimport { ControlSelect, ControlSelectOption } from './control-select';\n\n@Component({\n\tselector: 'control-select-component',\n\ttemplateUrl: 'control-select.component.html',\n})\nexport class ControlSelectComponent extends ControlComponent implements OnInit {\n\n\t@Input() option: ControlSelect;\n\toptions: ControlSelectOption[] = [];\n\tgetValue: Function = this.getValue_.bind(this);\n\tcompareWith: Function = this.compareWith_.bind(this);\n\n\tconstructor(\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.options$().pipe(\n\t\t\ttakeUntil(this.unsubscribe),\n\t\t\ttap(options => {\n\t\t\t\tif (this.option.asObject && this.control.value === null) {\n\t\t\t\t\tconst firstNullOptions = options.find(x => x.id === null);\n\t\t\t\t\tif (firstNullOptions !== undefined) {\n\t\t\t\t\t\tthis.control.setValue(firstNullOptions);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t).subscribe(options => this.options = options);\n\t}\n\n\toptions$(): Observable<ControlSelectOption[]> {\n\t\tconst options = this.option.options;\n\t\tif (options) {\n\t\t\tif (isObservable(options)) {\n\t\t\t\treturn options;\n\t\t\t} else if (Array.isArray(options)) {\n\t\t\t\treturn of(options);\n\t\t\t} else {\n\t\t\t\treturn of([]);\n\t\t\t}\n\t\t} else {\n\t\t\treturn of([]);\n\t\t}\n\t}\n\n\tgetValue_(item: ControlSelectOption): any {\n\t\treturn this.option.asObject ? item : item.id;\n\t}\n\n\tcompareWith_(a: ControlSelectOption | string | number, b: ControlSelectOption | string | number) {\n\t\tif (this.option.asObject) {\n\t\t\ta = a as ControlSelectOption;\n\t\t\tb = b as ControlSelectOption;\n\t\t\treturn (b && b.id !== undefined) ? a.id === b.id : a.id === b;\n\t\t} else {\n\t\t\treturn b ? a === b : a === null;\n\t\t}\n\t}\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlText extends ControlOption<string> {\n\tschema: string = 'text';\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlText } from './control-text';\n\n@Component({\n\tselector: 'control-text-component',\n\ttemplateUrl: 'control-text.component.html',\n})\nexport class ControlTextComponent extends ControlComponent {\n\n\t@Input() option: ControlText;\n\n}\n","import { ControlOption } from '../control-option';\n\nexport class ControlTextarea extends ControlOption<string> {\n\tschema: string = 'textarea';\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n}\n","import { Component, Input } from '@angular/core';\nimport { ControlComponent } from '../control.component';\nimport { ControlTextarea } from './control-textarea';\n\n@Component({\n\tselector: 'control-textarea-component',\n\ttemplateUrl: 'control-textarea.component.html',\n})\nexport class ControlTextareaComponent extends ControlComponent {\n\n\t@Input() option: ControlTextarea;\n\n}\n","import { InjectionToken, Type } from '@angular/core';\nimport { ControlCheckbox } from '../control/checkbox/control-checkbox';\nimport { ControlCheckboxComponent } from '../control/checkbox/control-checkbox.component';\nimport { IControlOption } from '../control/control-option';\nimport { ControlComponent } from '../control/control.component';\nimport { ControlEmail } from '../control/email/control-email';\nimport { ControlEmailComponent } from '../control/email/control-email.component';\nimport { ControlGroup } from '../control/group/control-group';\nimport { ControlGroupComponent } from '../control/group/control-group.component';\nimport { ControlInfo } from '../control/info/control-info';\nimport { ControlInfoComponent } from '../control/info/control-info.component';\nimport { ControlMarkdown } from '../control/markdown/control-markdown';\nimport { ControlMarkdownComponent } from '../control/markdown/control-markdown.component';\nimport { ControlNumber } from '../control/number/control-number';\nimport { ControlNumberComponent } from '../control/number/control-number.component';\nimport { ControlPassword } from '../control/password/control-password';\nimport { ControlPasswordComponent } from '../control/password/control-password.component';\nimport { ControlRadio } from '../control/radio/control-radio';\nimport { ControlRadioComponent } from '../control/radio/control-radio.component';\nimport { ControlSelect } from '../control/select/control-select';\nimport { ControlSelectComponent } from '../control/select/control-select.component';\nimport { ControlText } from '../control/text/control-text';\nimport { ControlTextComponent } from '../control/text/control-text.component';\nimport { ControlTextarea } from '../control/textarea/control-textarea';\nimport { ControlTextareaComponent } from '../control/textarea/control-textarea.component';\n\nexport interface ControlInterface {\n\tcomponent: Type<ControlComponent>;\n\tmodel: Type<IControlOption<any>>;\n}\n\nexport interface Controls { [key: string]: ControlInterface; }\n\nexport const entryComponents = [\n\tControlCheckboxComponent,\n\tControlEmailComponent,\n\tControlGroupComponent,\n\tControlInfoComponent,\n\tControlMarkdownComponent,\n\tControlNumberComponent,\n\tControlPasswordComponent,\n\tControlRadioComponent,\n\tControlSelectComponent,\n\tControlTextComponent,\n\tControlTextareaComponent,\n];\n\nexport const controls: Controls = {\n\t'checkbox': {\n\t\tcomponent: ControlCheckboxComponent,\n\t\tmodel: ControlCheckbox\n\t},\n\t'email': {\n\t\tcomponent: ControlEmailComponent,\n\t\tmodel: ControlEmail\n\t},\n\t'group': {\n\t\tcomponent: ControlGroupComponent,\n\t\tmodel: ControlGroup\n\t},\n\t'info': {\n\t\tcomponent: ControlInfoComponent,\n\t\tmodel: ControlInfo\n\t},\n\t'markdown': {\n\t\tcomponent: ControlMarkdownComponent,\n\t\tmodel: ControlMarkdown\n\t},\n\t'number': {\n\t\tcomponent: ControlNumberComponent,\n\t\tmodel: ControlNumber\n\t},\n\t'password': {\n\t\tcomponent: ControlPasswordComponent,\n\t\tmodel: ControlPassword\n\t},\n\t'radio': {\n\t\tcomponent: ControlRadioComponent,\n\t\tmodel: ControlRadio\n\t},\n\t'select': {\n\t\tcomponent: ControlSelectComponent,\n\t\tmodel: ControlSelect\n\t},\n\t'text': {\n\t\tcomponent: ControlTextComponent,\n\t\tmodel: ControlText\n\t},\n\t'textarea': {\n\t\tcomponent: ControlTextareaComponent,\n\t\tmodel: ControlTextarea\n\t},\n};\n\nexport class ControlConfig {\n\n\tcontrols?: Controls = {};\n\n\tconstructor(options?: ControlConfig) {\n\t\t// console.log('ControlConfig', options);\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t\tthis.controls = {\n\t\t\t\t...controls,\n\t\t\t\t...(options.controls || {})\n\t\t\t};\n\t\t}\n\t}\n}\n\nexport const CONTROL_CONFIG = new InjectionToken<ControlConfig>('control.config');\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'control-module',\n\ttemplate: `<span class=\"control-module\">control {{version}}</span>`,\n\tstyles: []\n})\nexport class ControlModuleComponent implements OnInit {\n\n\tversion: string = '0.0.9';\n\n\tconstructor() { }\n\n\tngOnInit() {\n\t}\n\n}\n","import { FormControl, FormGroup, ValidatorFn } from '@angular/forms';\n\nexport function matchValidator(otherKey: string, reverse: boolean = false, group: FormGroup): ValidatorFn {\n\treturn (control: FormControl) => {\n\t\tconst otherControl = group.controls[otherKey];\n\n\t\tconst value = control.value;\n\n\t\t// value not equal\n\t\tif (otherControl && value !== otherControl.value && !reverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (otherControl && value === otherControl.value && reverse) {\n\t\t\tif (otherControl.errors) {\n\t\t\t\tdelete otherControl.errors['match'];\n\t\t\t\tif (!Object.keys(otherControl.errors).length) {\n\t\t\t\t\totherControl.setErrors(null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (otherControl && value !== otherControl.value && reverse) {\n\t\t\totherControl.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t};\n}\n\n/*\nexport function __matchValidator(key: string, otherKey: string, group: FormGroup): ValidatorFn {\n\treturn (control: FormControl) => {\n\n\t\t// const control = group.controls[key];\n\t\tconst otherControl = group.controls[otherKey];\n\n\t\t// console.log(control.touched, otherControl.touched);\n\n\t\tif (control.touched && otherControl.touched) {\n\t\t\tconst match = control.value === otherControl.value;\n\t\t\tif (!match && control.valid && otherControl.valid) {\n\t\t\t\tcontrol.setErrors({\n\t\t\t\t\tmatch: otherKey\n\t\t\t\t});\n\t\t\t\treturn {\n\t\t\t\t\tmatch: otherKey + ' != ' + key\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (match && control.hasError('match')) {\n\t\t\t\tcontrol.setErrors(null);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n}\n*/\n\n/*\nvalidate(control: AbstractControl): { [key: string]: any } {\n\t\t// self value\n\t\tconst value = control.value;\n\n\t\t// control value\n\t\tconst input = control.root.get(this.match);\n\n\t\t// value not equal\n\t\tif (input && value !== input.value && !this.isReverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (input && value === input.value && this.isReverse) {\n\t\t\tdelete input.errors['match'];\n\t\t\tif (!Object.keys(input.errors).length) {\n\t\t\t\tinput.setErrors(null);\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (input && value !== input.value && this.isReverse) {\n\t\t\tinput.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n*/\n/*\nstatic isValidString(control: FormControl) {\n\tif (!control.value || typeof control.value !== 'string') {\n\t\treturn {isNotValidString: true};\n\t}\n\treturn null;\n}\n\nstatic isValidName(control: FormControl) {\n\tif (control.valid && control.value !== 'John Doe') {\n\t\treturn {isNotValidName: true};\n\t}\n\treturn null;\n}\n*/\n","import { Inject, Injectable, Type } from '@angular/core';\nimport { FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { ControlConfig, CONTROL_CONFIG } from '../config/control.config';\nimport { matchValidator } from '../directives/match.validator';\nimport { ControlOption, IControlOption } from './control-option';\nimport { ControlComponent } from './control.component';\nimport { ControlGroup } from './group/control-group';\nimport { ControlInfo } from './info/control-info';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ControlService {\n\n\tpublic options: ControlConfig;\n\n\tconstructor(\n\t\t@Inject(CONTROL_CONFIG) options: ControlConfig\n\t) {\n\t\t// console.log('ControlService', options);\n\t\tthis.options = new ControlConfig(options || {});\n\t}\n\n\ttoFormGroup(options: IControlOption<any>[]): FormGroup {\n\t\tconst controls: { [key: string]: FormControl | FormGroup } = {};\n\t\toptions.forEach((option: ControlOption<any>) => {\n\t\t\t// group[x.key] = new FormControl(x.value, this.getValidators(x, group));\n\t\t\tif (option instanceof ControlGroup) {\n\t\t\t\tconst group: FormGroup = this.toFormGroup(option.options);\n\t\t\t\tcontrols[option.key] = group;\n\t\t\t} else if (!(option instanceof ControlInfo)) {\n\t\t\t\tconst control: FormControl = new FormControl(option.value);\n\t\t\t\tif (option.disabled) {\n\t\t\t\t\tcontrol.disable();\n\t\t\t\t}\n\t\t\t\tcontrols[option.key] = control;\n\t\t\t\t// x.setControl(control); // !!!\n\t\t\t}\n\t\t});\n\t\tconst group: FormGroup = new FormGroup(controls);\n\t\t// console.log(group);\n\t\toptions.forEach((option: ControlOption<any>) => {\n\t\t\tif (!(option instanceof ControlInfo)) {\n\t\t\t\tconst validators = this.getValidators(option, group);\n\t\t\t\t// console.log(validators);\n\t\t\t\tgroup.controls[option.key].setValidators(validators);\n\t\t\t}\n\t\t});\n\t\treturn group;\n\t}\n\n\tgetValidators(options: IControlOption<any>, group: FormGroup): ValidatorFn[] {\n\t\tconst validators: ValidatorFn[] = [];\n\t\tif (options.min) {\n\t\t\tvalidators.push(Validators.min(options.min));\n\t\t}\n\t\tif (options.max) {\n\t\t\tvalidators.push(Validators.max(options.max));\n\t\t}\n\t\tif (options.required) {\n\t\t\tvalidators.push(Validators.required);\n\t\t}\n\t\tif (options.requiredTrue) {\n\t\t\tvalidators.push(Validators.requiredTrue);\n\t\t}\n\t\tif (options.minlength) {\n\t\t\tvalidators.push(Validators.minLength(options.minlength));\n\t\t}\n\t\tif (options.maxlength) {\n\t\t\tvalidators.push(Validators.maxLength(options.maxlength));\n\t\t}\n\t\tif (options.pattern) {\n\t\t\tvalidators.push(Validators.pattern(options.pattern));\n\t\t}\n\t\tif (options.match) {\n\t\t\tvalidators.push(matchValidator(options.match, options.reverse, group));\n\t\t}\n\t\tif (options.schema === 'email') {\n\t\t\tvalidators.push(Validators.email);\n\t\t}\n\t\t// console.log(options.key, validators);\n\t\treturn validators;\n\t}\n\n\tresolve(options: IControlOption<any>): Type<ControlComponent> {\n\t\tlet component: Type<ControlComponent>;\n\t\tif (options) {\n\t\t\tcomponent = this.options.controls[options.schema].component || ControlComponent;\n\t\t} else {\n\t\t\tcomponent = ControlComponent;\n\t\t}\n\t\treturn component;\n\t}\n\n}\n","import { NgForOfContext } from '@angular/common';\nimport { AfterViewInit, Component, ComponentFactory, ComponentFactoryResolver, ComponentRef, ContentChild, Input, OnDestroy, OnInit, TemplateRef, Type, ViewChild, ViewContainerRef } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { IControlOption } from './control-option';\nimport { ControlComponent } from './control.component';\nimport { ControlService } from './control.service';\n\n@Component({\n\tselector: 'control-outlet',\n\ttemplateUrl: 'control-outlet.component.html',\n})\nexport class ControlOutletComponent implements OnInit, OnDestroy, AfterViewInit {\n\n\t@ContentChild('inputRef') inputRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ContentChild('errorRef') errorRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ContentChild('labelRef') labelRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ContentChild('descriptionRef') descriptionRef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ViewChild('descriptionDef') descriptionDef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ViewChild('labelDef') labelDef: TemplateRef<NgForOfContext<ControlComponent>>;\n\t@ViewChild('outlet', { read: ViewContainerRef }) viewContainerRef: ViewContainerRef;\n\n\t@Input() option: IControlOption<any>;\n\t@Input() form: FormGroup;\n\n\tprivate componentRef: ComponentRef<ControlComponent>;\n\n\tget context(): ControlOutletComponent {\n\t\treturn this;\n\t}\n\n\tget classes(): { [key: string]: boolean } {\n\t\t// console.log('control', this.option.key, this.form.controls);\n\t\treturn this.componentRef ? this.componentRef.instance.classes : null;\n\t}\n\n\tget control(): AbstractControl {\n\t\t// console.log('control', this.option.key, this.form.controls);\n\t\treturn this.componentRef ? this.componentRef.instance.control : null;\n\t}\n\n\tconstructor(\n\t\tprivate componentFactoryResolver: ComponentFactoryResolver,\n\t\tprivate controlService: ControlService,\n\t) { }\n\n\tngAfterViewInit() {\n\t}\n\n\tngOnInit() {\n\t\tconst component: Type<ControlComponent> = this.controlService.resolve(this.option);\n\t\tconst factory: ComponentFactory<ControlComponent> = this.componentFactoryResolver.resolveComponentFactory(component);\n\t\tthis.viewContainerRef.clear();\n\t\tconst componentRef = this.viewContainerRef.createComponent(factory);\n\t\tconst instance = componentRef.instance;\n\t\tinstance.option = this.option;\n\t\tinstance.form = this.form;\n\t\tinstance.inputRef = this.inputRef;\n\t\tinstance.errorRef = this.errorRef;\n\t\t// instance.labelRef = this.labelRef || this.labelDef;\n\t\tif (typeof instance['ControlInit'] === 'function') {\n\t\t\tinstance['ControlInit']();\n\t\t}\n\t\tthis.componentRef = componentRef;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.componentRef.destroy();\n\t}\n\n}\n","\nimport { Directive, ElementRef, forwardRef, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const CONTROL_VALUE_ACCESSOR: any = {\n\tprovide: NG_VALUE_ACCESSOR,\n\t// tslint:disable-next-line:no-use-before-declare\n\tuseExisting: forwardRef(() => ControlAccessor),\n\tmulti: true\n};\n\n@Directive({\n\tselector:\n\t\t'input[designr-accessor][formControlName],input[designr-accessor][formControl],input[designr-accessor][ngModel]',\n\t// tslint:disable-next-line:use-host-property-decorator\n\thost: {\n\t\t'(change)': 'onChange($event.target.value)',\n\t\t'(input)': 'onChange($event.target.value)',\n\t\t'(blur)': 'onTouched()'\n\t},\n\tproviders: [CONTROL_VALUE_ACCESSOR]\n})\n// tslint:disable-next-line:directive-class-suffix\nexport class ControlAccessor<T> implements ControlValueAccessor {\n\n\tconstructor(\n\t\tprotected renderer: Renderer2,\n\t\tprotected element: ElementRef\n\t) { }\n\n\tprotected formatValue(value: T): string {\n\t\treturn value.toString();\n\t}\n\n\tprotected parseValue(value: any): T {\n\t\treturn value && value !== '' ? value : null;\n\t}\n\n\tonChange = (value: any) => { };\n\tonTouched = () => { };\n\n\twriteValue(value: T): void {\n\t\tconst formattedValue = this.formatValue(value);\n\t\tthis.renderer.setProperty(this.element.nativeElement, 'value', formattedValue);\n\t}\n\n\tregisterOnChange(callback: (x: T | null) => void): void {\n\t\tthis.onChange = (value: any) => {\n\t\t\tconst parsedValue = this.parseValue(value);\n\t\t\tconst formattedValue = this.formatValue(parsedValue);\n\t\t\tthis.renderer.setProperty(this.element.nativeElement, 'value', formattedValue);\n\t\t\tcallback(parsedValue);\n\t\t};\n\t}\n\n\tregisterOnTouched(callback: () => void): void {\n\t\tthis.onTouched = callback;\n\t}\n\n\tsetDisabledState(isDisabled: boolean): void {\n\t\tthis.renderer.setProperty(this.element.nativeElement, 'disabled', isDisabled);\n\t}\n\n}\n","\nimport { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { DisposableComponent } from '@designr/core';\nimport { IControlOption } from './control-option';\n\n@Component({\n\tselector: 'controls-component',\n\ttemplateUrl: 'controls.component.html',\n})\nexport class ControlsComponent extends DisposableComponent {\n\t@Input() options: IControlOption<any>[];\n\t@Input() form: FormGroup;\n}\n","import { Directive, forwardRef, Input } from '@angular/core';\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { BehaviorSubject, isObservable, Observable, of } from 'rxjs';\nimport { catchError, debounceTime, switchMap, take } from 'rxjs/operators';\n\nconst DEBOUNCE_TIME: number = 250;\n\n@Directive({\n\tselector: '[exists][formControlName],[exists][formControl],[exists][ngModel]',\n\tproviders: [\n\t\t{ provide: NG_ASYNC_VALIDATORS, useExisting: forwardRef(() => ExistsValidator), multi: true },\n\t]\n})\nexport class ExistsValidator implements AsyncValidator {\n\n\t@Input() exists: Function;\n\n\tprivate value$ = new BehaviorSubject<string>(null);\n\n\tprivate debounced$: Observable<ValidationErrors | null> = this.value$.pipe(\n\t\tdebounceTime(DEBOUNCE_TIME),\n\t\tswitchMap((value: string) => {\n\t\t\t// console.log('ExistsValidator.debounced$', value);\n\t\t\treturn this.exists$(value);\n\t\t}),\n\t\tcatchError((response) => {\n\t\t\tconsole.log('ExistsValidator.debounced$.catchError', response);\n\t\t\treturn of(null);\n\t\t}),\n\t\ttake(1),\n\t);\n\n\tset value(value: string) {\n\t\t// console.log('value', value);\n\t\tif (value && String(value).trim() !== '') {\n\t\t\tthis.value$.next(value);\n\t\t}\n\t}\n\n\texists$(value: string): Observable<ValidationErrors | null> {\n\t\tif (typeof this.exists === 'function') {\n\t\t\tconst exists = this.exists(value);\n\t\t\tif (isObservable(exists)) {\n\t\t\t\t// console.log('ExistsValidator.exists$', value);\n\t\t\t\treturn exists.pipe(\n\t\t\t\t\tswitchMap(exists => {\n\t\t\t\t\t\t// console.log('ExistsValidator.exists$', exists);\n\t\t\t\t\t\treturn of(this.getValidationError(Boolean(exists)));\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn of(this.getValidationError(Boolean(exists)));\n\t\t\t}\n\t\t} else {\n\t\t\treturn of(this.getValidationError(value ? true : false));\n\t\t}\n\t}\n\n\tgetValidationError(exists: boolean): ValidationErrors | null {\n\t\t// console.log('ExistsValidator.getValidationError', exists);\n\t\tif (exists) {\n\t\t\treturn {\n\t\t\t\texists: true,\n\t\t\t};\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tvalidate(control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n\t\tthis.value = control.value;\n\t\t// console.log('ExistsValidator.validate', control.value, control);\n\t\treturn this.debounced$;\n\t}\n\n}\n","import { Attribute, Directive, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n@Directive({\n\tselector: '[match][formControlName],[match][formControl],[match][ngModel]',\n\tproviders: [\n\t\t{ provide: NG_VALIDATORS, useExisting: forwardRef(() => MatchValidator), multi: true }\n\t]\n})\nexport class MatchValidator implements Validator {\n\n\tconstructor(\n\t\t@Attribute('match') public match: string,\n\t\t@Attribute('reverse') public reverse: string\n\t) { }\n\n\tprivate get isReverse() {\n\t\tif (!this.reverse) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.reverse === 'true' ? true : false;\n\t}\n\n\tvalidate(control: AbstractControl): { [key: string]: any } {\n\n\t\t// self value\n\t\tconst value = control.value;\n\n\t\t// control value\n\t\tconst input = control.root.get(this.match);\n\n\t\t// value not equal\n\t\tif (input && value !== input.value && !this.isReverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (input && value === input.value && this.isReverse) {\n\t\t\tdelete input.errors['match'];\n\t\t\tif (!Object.keys(input.errors).length) {\n\t\t\t\tinput.setErrors(null);\n\t\t\t}\n\t\t}\n\n\t\t// value not equal and reverse\n\t\tif (input && value !== input.value && this.isReverse) {\n\t\t\tinput.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n\n}\n","import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n\tselector: '[ngModel][uppercase]'\n})\nexport class UppercaseDirective {\n\n\t@Output() ngModelChange: EventEmitter<any> = new EventEmitter();\n\tvalue: any;\n\n\t@HostListener('input', ['$event']) onInputChange($event) {\n\t\tthis.value = $event.target.value.toUpperCase();\n\t\tthis.ngModelChange.emit(this.value);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ControlInterface } from '../config/control.config';\nimport { ControlOption, IControlOption } from '../control/control-option';\nimport { ControlService } from '../control/control.service';\nimport { ControlGroup } from '../control/group/control-group';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FormService {\n\n\tconstructor(\n\t\tprivate controlService: ControlService\n\t) { }\n\n\tgetOptions(data: IControlOption<any>[]): ControlOption<any>[] {\n\t\tconst options: ControlOption<any>[] = data.map((option: IControlOption<any>) => {\n\t\t\tconst control: ControlInterface = this.controlService.options.controls[option.schema];\n\t\t\tif (control) {\n\t\t\t\tconst optionModel: Type<ControlOption<any>> = control.model;\n\t\t\t\tconst optionModelInstance: ControlOption<any> = new optionModel(option);\n\t\t\t\tif (optionModelInstance instanceof ControlGroup) {\n\t\t\t\t\tconst options = this.getOptions(optionModelInstance.options);\n\t\t\t\t\toptions.sort((a, b) => a.order - b.order);\n\t\t\t\t\toptionModelInstance.options = options;\n\t\t\t\t}\n\t\t\t\treturn optionModelInstance;\n\t\t\t} else {\n\t\t\t\tconsole.error(`missing option for key ${option.schema}`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}).filter(x => x);\n\t\toptions.sort((a, b) => a.order - b.order);\n\t\treturn options;\n\t}\n\n\tgetFormGroup(options: ControlOption<any>[]): FormGroup {\n\t\treturn this.controlService.toFormGroup(options);\n\t}\n\n\tgetFormGroupFromOptions(options: IControlOption<any>[]): FormGroup {\n\t\treturn this.getFormGroup(this.getOptions(options));\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CoreModule } from '@designr/core';\r\nimport { ControlConfig, CONTROL_CONFIG, entryComponents } from './config/control.config';\r\nimport { ControlModuleComponent } from './control-module.component';\r\nimport { ControlOutletComponent } from './control/control-outlet.component';\r\nimport { ControlAccessor } from './control/control.accessor';\r\nimport { ControlComponent } from './control/control.component';\r\nimport { ControlService } from './control/control.service';\r\nimport { ControlsComponent } from './control/controls.component';\r\nimport { ExistsValidator } from './directives/exists.directive';\r\nimport { MatchValidator } from './directives/match.directive';\r\nimport { UppercaseDirective } from './directives/uppercase.directive';\r\nimport { FormService } from './form/form.service';\r\n\r\nconst services = [\r\n\tControlService,\r\n\tFormService,\r\n];\r\n\r\nconst components = [\r\n\tControlsComponent,\r\n\tControlModuleComponent,\r\n\tControlOutletComponent,\r\n\tControlComponent,\r\n\t...entryComponents,\r\n];\r\n\r\nconst directives = [\r\n\tUppercaseDirective,\r\n\tControlAccessor,\r\n];\r\n\r\nconst pipes = [\r\n];\r\n\r\nconst validators = [\r\n\tExistsValidator,\r\n\tMatchValidator,\r\n];\r\n\r\nconst guards = [\r\n];\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tCoreModule,\r\n\t],\r\n\tproviders: [\r\n\t\t...services,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\tdeclarations: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\tentryComponents: [\r\n\t\t...entryComponents,\r\n\t],\r\n\texports: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n})\r\n\r\nexport class ControlModule {\r\n\r\n\tconstructor(\r\n\t\t@Optional() @SkipSelf() parentModule: ControlModule\r\n\t) {\r\n\t\t/*\r\n\t\tif (parentModule) {\r\n\t\t\tthrow new Error('ControlModule is already loaded. Import it in the AppModule only');\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\r\n\tpublic static forRoot(\r\n\t\tconfig?: ControlConfig,\r\n\t): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: ControlModule,\r\n\t\t\tproviders: [{\r\n\t\t\t\tprovide: CONTROL_CONFIG, useValue: config\r\n\t\t\t}]\r\n\t\t};\r\n\t}\r\n\r\n}\r\n"]}