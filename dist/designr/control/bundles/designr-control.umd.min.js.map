{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@designr/control/lib/control/base/control-base.ts","ng://@designr/control/lib/control/checkbox/control-checkbox.ts","ng://@designr/control/lib/control/base/control-base.component.ts","ng://@designr/control/lib/control/checkbox/control-checkbox.component.ts","ng://@designr/control/lib/control/email/control-email.ts","ng://@designr/control/lib/control/email/control-email.component.ts","ng://@designr/control/lib/control/markdown/control-markdown.ts","ng://@designr/control/lib/control/markdown/control-markdown.component.ts","ng://@designr/control/lib/control/number/control-number.ts","ng://@designr/control/lib/control/number/control-number.component.ts","ng://@designr/control/lib/control/password/control-password.ts","ng://@designr/control/lib/control/password/control-password.component.ts","ng://@designr/control/lib/control/radio/control-radio.ts","ng://@designr/control/lib/control/radio/control-radio.component.ts","ng://@designr/control/lib/control/select/control-select.ts","ng://@designr/control/lib/control/select/control-select.component.ts","ng://@designr/control/lib/control/text/control-text.ts","ng://@designr/control/lib/control/text/control-text.component.ts","ng://@designr/control/lib/control/textarea/control-textarea.ts","ng://@designr/control/lib/control/textarea/control-textarea.component.ts","ng://@designr/control/lib/config/control.config.ts","ng://@designr/control/lib/control-module.component.ts","ng://@designr/control/lib/directives/match.validator.ts","ng://@designr/control/lib/control/control.service.ts","ng://@designr/control/lib/control/control-outlet.component.ts","ng://@designr/control/lib/control/controls.component.ts","ng://@designr/control/lib/directives/exists.directive.ts","ng://@designr/control/lib/directives/match.directive.ts","ng://@designr/control/lib/directives/uppercase.directive.ts","ng://@designr/control/lib/form/form.service.ts","ng://@designr/control/lib/control.module.ts","ng://@designr/control/lib/control/control-value.accessor.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","ControlBaseOptions","ControlBase","options","schema","_originalValue","key","name","uid","label","placeholder","order","undefined","type","min","max","required","requiredTrue","email","minlength","maxlength","pattern","match","reverse","disabled","step","format","ControlCheckbox","_this","_super","tslib_1.__extends","ControlBaseComponent","renderer","reveal","checked","onChange","onTouched","defineProperty","form","controls","control","controlRef","valid","formatValue","console","log","setProperty","element","parseValue","parsed","innervalue","onInput","event","target","onFocus","blurred","onBlur","getFormattedValue","writeValue","registerOnChange","method","registerOnTouched","setDisabledState","isDisabled","Component","args","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","Renderer2","Input","ControlCheckboxComponent","ControlEmail","ControlEmailComponent","ControlMarkdown","ControlMarkdownComponent","ControlNumber","ControlNumberComponent","ControlPassword","ControlPasswordComponent","ControlRadio","ControlRadioComponent","ControlSelect","ControlSelectComponent","ControlText","ControlTextComponent","ControlTextarea","ControlTextareaComponent","entryComponents","BaseControls","checkbox","component","model","markdown","number","password","radio","select","text","textarea","ControlConfig","CONTROL_CONFIG","InjectionToken","ControlModuleComponent","version","ngOnInit","matchValidator","otherKey","group","otherControl","errors","keys","setErrors","ControlService","resolve","getValidators","validators","Validators","minLength","maxLength","toFormGroup","forEach","x","formControl","FormControl","disable","FormGroup","setValidators","Injectable","providedIn","decorators","Inject","ControlOutletComponent","componentFactoryResolver","controlService","factory","resolveComponentFactory","viewContainerRef","clear","componentRef","createComponent","instance","ngOnDestroy","destroy","ComponentFactoryResolver","ViewChild","read","ViewContainerRef","DisposableComponent","ControlsComponent","ExistsValidator","values","BehaviorSubject","debounced$","pipe","debounceTime","switchMap","exists$","catchError","response","of","take","trim","exists","validate","Directive","NG_ASYNC_VALIDATORS","MatchValidator","input","root","get","isReverse","NG_VALIDATORS","Attribute","UppercaseDirective","ngModelChange","EventEmitter","onInputChange","$event","toUpperCase","emit","Output","HostListener","FormService","getControlsFromOptions","map","filter","sort","a","getGroupFromOptions","getGroupFromControls","services","components","directives","pipes","ControlModule","parentModule","forRoot","config","ngModule","useValue","NgModule","imports","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","CoreModule","declarations","exports","Optional","SkipSelf","ValueAccessorBase","changed","touched","innerValue","f","touch","fn"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport class ControlBaseOptions<T> {\n\tvalue?: T;\n\tkey?: string;\n\tlabel?: string;\n\tplaceholder?: string;\n\t// order\n\torder?: number;\n\tschema?: string;\n\ttype?: string;\n\t// validators\n\tmin?: number;\n\tmax?: number;\n\trequired?: boolean;\n\trequiredTrue?: boolean;\n\temail?: boolean;\n\tminlength?: number;\n\tmaxlength?: number;\n\tpattern?: string | RegExp;\n\tmatch?: string;\n\t// options\n\treverse?: boolean;\n\toptions?: { key: string, value: string }[];\n\t// state\n\tdisabled?: boolean;\n\t// formatters\n\tstep?: number;\n\tformat?: string;\n}\n\nexport class ControlBase<T> {\n\t// export class ControlBase<T> implements ControlValueAccessor {\n\n\tstatic uid: number = 0;\n\n\treadonly schema: string = 'base';\n\n\tprivate _originalValue: T;\n\tvalue: T;\n\tkey: string;\n\t//\n\tlabel: string;\n\tplaceholder: string;\n\t// order\n\torder: number;\n\ttype: string;\n\t// validators\n\tmin: number;\n\tmax: number;\n\trequired: boolean;\n\trequiredTrue: boolean;\n\temail: boolean;\n\tminlength: number;\n\tmaxlength: number;\n\tpattern: string | RegExp;\n\tmatch: string;\n\t// options\n\treverse: boolean;\n\toptions: { key: string, value: string }[];\n\t// state\n\tdisabled: boolean;\n\t// formatters\n\tstep: number;\n\tformat: string;\n\n\tconstructor(options: ControlBaseOptions<T> = {}) {\n\t\tthis._originalValue = options.value;\n\t\tthis.value = options.value;\n\t\tthis.key = options.key;\n\t\t//\n\t\tconst name = `${options.key || 'Control'} ${++ControlBase.uid}`;\n\t\tthis.label = options.label || name;\n\t\tthis.placeholder = options.placeholder || name;\n\t\t// order\n\t\tthis.order = options.order === undefined ? 1 : options.order;\n\t\tthis.schema = options.schema || 'text';\n\t\tthis.type = options.type || this.schema;\n\t\t// validators\n\t\tthis.min = options.min || null;\n\t\tthis.max = options.max || null;\n\t\tthis.required = !!options.required;\n\t\tthis.requiredTrue = !!options.requiredTrue;\n\t\tthis.email = !!options.email;\n\t\tthis.minlength = options.minlength || null;\n\t\tthis.maxlength = options.maxlength || null;\n\t\tthis.pattern = options.pattern || null;\n\t\tthis.match = options.match || null;\n\t\t// options\n\t\tthis.reverse = !!options.reverse;\n\t\tthis.options = options.options || [];\n\t\t// state\n\t\tthis.disabled = !!options.disabled;\n\t\t// formatters\n\t\tthis.step = options.step || null;\n\t\tthis.format = options.format || null;\n\t}\n\n}\n","import { ControlBase, ControlBaseOptions } from '../base/control-base';\n\nexport class ControlCheckbox extends ControlBase<boolean> {\n\n\treadonly schema: string = 'checkbox';\n\n\tconstructor(options: ControlBaseOptions<boolean> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBase } from './control-base';\n\n@Component({\n\tselector: 'control-base-component',\n\ttemplateUrl: './control-base.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlBaseComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlBaseComponent implements ControlValueAccessor {\n\n\t@Input() control: ControlBase<any>;\n\t@Input() form: FormGroup;\n\n\tprotected element: any;\n\tprotected blurred: boolean;\n\tprotected innervalue: any;\n\n\treveal: { checked: boolean } = { checked: false };\n\n\tconstructor(\n\t\tprotected renderer: Renderer2\n\t) { }\n\n\tget controlRef(): AbstractControl {\n\t\t// console.log('controlRef', this.control.key, this.form.controls);\n\t\treturn this.form.controls[this.control.key];\n\t}\n\n\tget isValid() { return this.controlRef.valid; }\n\n\tprotected onChange = (value: any) => { };\n\n\tprotected onTouched = () => { };\n\n\tprotected formatValue(value: any): void {\n\t\tconsole.log('ControlBaseComponent.formatValue', value);\n\t\tthis.renderer.setProperty(this.element, 'value', value);\n\t\t// console.log('ControlEditableComponent.writeValue', value);\n\t}\n\n\tprotected parseValue(value: any) {\n\t\tconsole.log('ControlBaseComponent.parseValue', value);\n\t\tconst parsed = this.innervalue;\n\t\tthis.onChange(parsed);\n\t}\n\n\tonInput(event: Event): void {\n\t\tthis.element = event.target;\n\t\tthis.onChange(this.element.value);\n\t}\n\n\tonFocus(event: Event): void {\n\t\tthis.blurred = false;\n\t\tthis.element = event.target;\n\t\t// this.element.value = this.controlRef.value;\n\t\tthis.renderer.setProperty(this.element, 'value', this.controlRef.value);\n\t\t// console.log('ControlBaseComponent.onFocus', this.controlRef);\n\t}\n\n\tonBlur(event: Event): void {\n\t\tthis.blurred = true;\n\t\tthis.element = event.target;\n\t\t// this.element.value = this.controlRef.value;\n\t\tthis.renderer.setProperty(this.element, 'value', this.controlRef.value);\n\t\t// console.log('ControlBaseComponent.onBlur', this.controlRef);\n\t\t/*\n\t\tif (this.innervalue) {\n\t\t\tthis.control.patchValue(this.innervalue + ' H', { emitEvent: false });\n\t\t}\n\t\t*/\n\t}\n\n\tgetFormattedValue(): any {\n\t\t// console.log('ControlBaseComponent.getFormattedValue', this.controlRef.value);\n\t\treturn this.controlRef.value;\n\t}\n\n\t// ControlValueAccessor\n\n\twriteValue(value: any): void {\n\t\tthis.formatValue(value);\n\t}\n\n\tregisterOnChange(method: any): void {\n\t\tthis.onChange = method;\n\t\t// console.log('ControlEditableComponent.registerOnChange');\n\t}\n\n\tregisterOnTouched(method: any): void {\n\t\tthis.onTouched = method;\n\t\t// console.log('ControlEditableComponent.registerOnTouched');\n\t}\n\n\tsetDisabledState(isDisabled: boolean): void {\n\t\t// const node = this.textarea.nativeElement;\n\t\t/*\n\t\tif (isDisabled) {\n\t\t\tthis.renderer.addClass(this.element, 'disabled');\n\t\t} else {\n\t\t\tthis.renderer.removeClass(this.element, 'disabled');\n\t\t}\n\t\t// console.log('ControlEditableComponent.setDisabledState', isDisabled);\n\t\t*/\n\t}\n\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBaseComponent } from '../base/control-base.component';\nimport { ControlCheckbox } from './control-checkbox';\n\n@Component({\n\tselector: 'control-checkbox-component',\n\ttemplateUrl: './control-checkbox.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlCheckboxComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlCheckboxComponent extends ControlBaseComponent implements ControlValueAccessor {\n\n\t@Input() control: ControlCheckbox;\n\n\tconstructor(\n\t\tprotected renderer: Renderer2\n\t) {\n\t\tsuper(renderer);\n\t}\n\n}\n","import { ControlBase, ControlBaseOptions } from '../base/control-base';\n\nexport class ControlEmail extends ControlBase<string> {\n\n\treadonly schema: string = 'email';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t\tthis.email = true;\n\t\tthis.pattern = options.pattern || '[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}';\n\t}\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBaseComponent } from '../base/control-base.component';\nimport { ControlEmail } from './control-email';\n\n@Component({\n\tselector: 'control-email-component',\n\ttemplateUrl: './control-email.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlEmailComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlEmailComponent extends ControlBaseComponent implements ControlValueAccessor {\n\n\t@Input() control: ControlEmail;\n\n\tconstructor(\n\t\tprotected renderer: Renderer2\n\t) {\n\t\tsuper(renderer);\n\t}\n\n}\n","import { ControlBase, ControlBaseOptions } from '../base/control-base';\n\nexport class ControlMarkdown extends ControlBase<string> {\n\n\treadonly schema: string = 'markdown';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBaseComponent } from '../base/control-base.component';\nimport { ControlMarkdown } from './control-markdown';\n\n@Component({\n\tselector: 'control-markdown-component',\n\ttemplateUrl: './control-markdown.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlMarkdownComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlMarkdownComponent extends ControlBaseComponent implements ControlValueAccessor {\n\n\t@Input() control: ControlMarkdown;\n\n\tconstructor(\n\t\tprotected renderer: Renderer2\n\t) {\n\t\tsuper(renderer);\n\t}\n\n}\n","import { ControlBase, ControlBaseOptions } from '../base/control-base';\n\nexport class ControlNumber extends ControlBase<string> {\n\n\treadonly schema: string = 'number';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBaseComponent } from '../base/control-base.component';\nimport { ControlNumber } from './control-number';\n\n@Component({\n\tselector: 'control-number-component',\n\ttemplateUrl: './control-number.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlNumberComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlNumberComponent extends ControlBaseComponent implements ControlValueAccessor {\n\n\t@Input() control: ControlNumber;\n\n\tconstructor(\n\t\tprotected renderer: Renderer2\n\t) {\n\t\tsuper(renderer);\n\t}\n\n}\n","import { ControlBase, ControlBaseOptions } from '../base/control-base';\n\nexport class ControlPassword extends ControlBase<string> {\n\n\treadonly schema: string = 'password';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBaseComponent } from '../base/control-base.component';\nimport { ControlPassword } from './control-password';\n\n@Component({\n\tselector: 'control-password-component',\n\ttemplateUrl: './control-password.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlPasswordComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlPasswordComponent extends ControlBaseComponent implements ControlValueAccessor {\n\n\t@Input() control: ControlPassword;\n\n\tconstructor(\n\t\tprotected renderer: Renderer2\n\t) {\n\t\tsuper(renderer);\n\t}\n\n}\n","import { ControlBase, ControlBaseOptions } from '../base/control-base';\n\nexport class ControlRadio extends ControlBase<boolean> {\n\n\treadonly schema: string = 'radio';\n\n\tconstructor(options: ControlBaseOptions<boolean> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBaseComponent } from '../base/control-base.component';\nimport { ControlRadio } from './control-radio';\n\n@Component({\n\tselector: 'control-radio-component',\n\ttemplateUrl: './control-radio.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlRadioComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlRadioComponent extends ControlBaseComponent implements ControlValueAccessor {\n\n\t@Input() control: ControlRadio;\n\n\tconstructor(\n\t\tprotected renderer: Renderer2\n\t) {\n\t\tsuper(renderer);\n\t}\n\n}\n","import { ControlBase, ControlBaseOptions } from '../base/control-base';\n\nexport class ControlSelect extends ControlBase<string> {\n\n\treadonly schema: string = 'select';\n\n\toptions: { key: string, value: string }[] = [];\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.options = options.options || [];\n\t}\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBaseComponent } from '../base/control-base.component';\nimport { ControlSelect } from './control-select';\n\n@Component({\n\tselector: 'control-select-component',\n\ttemplateUrl: './control-select.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlSelectComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlSelectComponent extends ControlBaseComponent implements ControlValueAccessor {\n\n\t@Input() control: ControlSelect;\n\n\tconstructor(\n\t\tprotected renderer: Renderer2\n\t) {\n\t\tsuper(renderer);\n\t}\n\n}\n","import { ControlBase, ControlBaseOptions } from '../base/control-base';\n\nexport class ControlText extends ControlBase<string> {\n\n\treadonly schema: string = 'text';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBaseComponent } from '../base/control-base.component';\nimport { ControlText } from './control-text';\n\n@Component({\n\tselector: 'control-text-component',\n\ttemplateUrl: './control-text.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlTextComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlTextComponent extends ControlBaseComponent implements ControlValueAccessor {\n\n\t@Input() control: ControlText;\n\n\tconstructor(\n\t\tprotected renderer: Renderer2\n\t) {\n\t\tsuper(renderer);\n\t}\n\n}\n","import { ControlBase, ControlBaseOptions } from '../base/control-base';\n\nexport class ControlTextarea extends ControlBase<string> {\n\n\treadonly schema: string = 'textarea';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBaseComponent } from '../base/control-base.component';\nimport { ControlTextarea } from './control-textarea';\n\n@Component({\n\tselector: 'control-textarea-component',\n\ttemplateUrl: './control-textarea.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlTextareaComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlTextareaComponent extends ControlBaseComponent implements ControlValueAccessor {\n\n\t@Input() control: ControlTextarea;\n\n\tconstructor(\n\t\tprotected renderer: Renderer2\n\t) {\n\t\tsuper(renderer);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\nimport { ControlCheckbox } from '../control/checkbox/control-checkbox';\nimport { ControlCheckboxComponent } from '../control/checkbox/control-checkbox.component';\nimport { Controls } from '../control/controls';\nimport { ControlEmail } from '../control/email/control-email';\nimport { ControlEmailComponent } from '../control/email/control-email.component';\nimport { ControlMarkdown } from '../control/markdown/control-markdown';\nimport { ControlMarkdownComponent } from '../control/markdown/control-markdown.component';\nimport { ControlNumber } from '../control/number/control-number';\nimport { ControlNumberComponent } from '../control/number/control-number.component';\nimport { ControlPassword } from '../control/password/control-password';\nimport { ControlPasswordComponent } from '../control/password/control-password.component';\nimport { ControlRadio } from '../control/radio/control-radio';\nimport { ControlRadioComponent } from '../control/radio/control-radio.component';\nimport { ControlSelect } from '../control/select/control-select';\nimport { ControlSelectComponent } from '../control/select/control-select.component';\nimport { ControlText } from '../control/text/control-text';\nimport { ControlTextComponent } from '../control/text/control-text.component';\nimport { ControlTextarea } from '../control/textarea/control-textarea';\nimport { ControlTextareaComponent } from '../control/textarea/control-textarea.component';\n\nexport const entryComponents = [\n\tControlCheckboxComponent,\n\tControlEmailComponent,\n\tControlMarkdownComponent,\n\tControlNumberComponent,\n\tControlPasswordComponent,\n\tControlRadioComponent,\n\tControlSelectComponent,\n\tControlTextComponent,\n\tControlTextareaComponent,\n];\n\nexport const BaseControls: Controls = {\n\t'checkbox': {\n\t\tcomponent: ControlCheckboxComponent,\n\t\tmodel: ControlCheckbox\n\t},\n\t'email': {\n\t\tcomponent: ControlEmailComponent,\n\t\tmodel: ControlEmail\n\t},\n\t'markdown': {\n\t\tcomponent: ControlMarkdownComponent,\n\t\tmodel: ControlMarkdown\n\t},\n\t'number': {\n\t\tcomponent: ControlNumberComponent,\n\t\tmodel: ControlNumber\n\t},\n\t'password': {\n\t\tcomponent: ControlPasswordComponent,\n\t\tmodel: ControlPassword\n\t},\n\t'radio': {\n\t\tcomponent: ControlRadioComponent,\n\t\tmodel: ControlRadio\n\t},\n\t'select': {\n\t\tcomponent: ControlSelectComponent,\n\t\tmodel: ControlSelect\n\t},\n\t'text': {\n\t\tcomponent: ControlTextComponent,\n\t\tmodel: ControlText\n\t},\n\t'textarea': {\n\t\tcomponent: ControlTextareaComponent,\n\t\tmodel: ControlTextarea\n\t},\n};\n\nexport class ControlConfig {\n\n\tcontrols?: Controls = {};\n\n\tconstructor(options?: ControlConfig) {\n\t\t// console.log('ControlConfig', options);\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t\tthis.controls = {\n\t\t\t\t...BaseControls,\n\t\t\t\t...(options.controls || {})\n\t\t\t};\n\t\t}\n\t}\n}\n\nexport const CONTROL_CONFIG = new InjectionToken<ControlConfig>('control.config');\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'control-module',\n\ttemplate: `<span class=\"control-module\">control {{version}}</span>`,\n\tstyles: []\n})\nexport class ControlModuleComponent implements OnInit {\n\n\tversion: string = '0.0.3';\n\n\tconstructor() { }\n\n\tngOnInit() {\n\t}\n\n}\n","import { FormControl, FormGroup, ValidatorFn } from '@angular/forms';\n\nexport function matchValidator(otherKey: string, reverse: boolean = false, group: FormGroup): ValidatorFn {\n\treturn (control: FormControl) => {\n\t\tconst otherControl = group.controls[otherKey];\n\n\t\tconst value = control.value;\n\n\t\t// value not equal\n\t\tif (otherControl && value !== otherControl.value && !reverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (otherControl && value === otherControl.value && reverse) {\n\t\t\tif (otherControl.errors) {\n\t\t\t\tdelete otherControl.errors['match'];\n\t\t\t\tif (!Object.keys(otherControl.errors).length) {\n\t\t\t\t\totherControl.setErrors(null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (otherControl && value !== otherControl.value && reverse) {\n\t\t\totherControl.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t};\n}\n\n/*\nexport function __matchValidator(key: string, otherKey: string, group: FormGroup): ValidatorFn {\n\treturn (control: FormControl) => {\n\n\t\t// const control = group.controls[key];\n\t\tconst otherControl = group.controls[otherKey];\n\n\t\t// console.log(control.touched, otherControl.touched);\n\n\t\tif (control.touched && otherControl.touched) {\n\t\t\tconst match = control.value === otherControl.value;\n\t\t\tif (!match && control.valid && otherControl.valid) {\n\t\t\t\tcontrol.setErrors({\n\t\t\t\t\tmatch: otherKey\n\t\t\t\t});\n\t\t\t\treturn {\n\t\t\t\t\tmatch: otherKey + ' != ' + key\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (match && control.hasError('match')) {\n\t\t\t\tcontrol.setErrors(null);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n}\n*/\n\n/*\nvalidate(control: AbstractControl): { [key: string]: any } {\n\t\t// self value\n\t\tconst value = control.value;\n\n\t\t// control value\n\t\tconst input = control.root.get(this.match);\n\n\t\t// value not equal\n\t\tif (input && value !== input.value && !this.isReverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (input && value === input.value && this.isReverse) {\n\t\t\tdelete input.errors['match'];\n\t\t\tif (!Object.keys(input.errors).length) {\n\t\t\t\tinput.setErrors(null);\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (input && value !== input.value && this.isReverse) {\n\t\t\tinput.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n*/\n/*\nstatic isValidString(control: FormControl) {\n\tif (!control.value || typeof control.value !== 'string') {\n\t\treturn {isNotValidString: true};\n\t}\n\treturn null;\n}\n\nstatic isValidName(control: FormControl) {\n\tif (control.valid && control.value !== 'John Doe') {\n\t\treturn {isNotValidName: true};\n\t}\n\treturn null;\n}\n*/\n","import { Inject, Injectable, Type } from '@angular/core';\nimport { FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { ControlConfig, CONTROL_CONFIG } from '../config/control.config';\nimport { matchValidator } from '../directives/match.validator';\nimport { ControlBase } from './base/control-base';\nimport { ControlBaseComponent } from './base/control-base.component';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ControlService {\n\n\tpublic options: ControlConfig;\n\n\tconstructor(\n\t\t@Inject(CONTROL_CONFIG) options: ControlConfig\n\t) {\n\t\t// console.log('ControlService', options);\n\t\toptions = options || {};\n\t\tthis.options = new ControlConfig(options);\n\t}\n\n\tresolve(control: ControlBase<any>): Type<ControlBaseComponent> {\n\t\tlet component: Type<ControlBaseComponent>;\n\t\tif (control) {\n\t\t\tcomponent = this.options.controls[control.schema].component || ControlBaseComponent;\n\t\t} else {\n\t\t\tcomponent = ControlBaseComponent;\n\t\t}\n\t\treturn component;\n\t}\n\n\tgetValidators(control: ControlBase<any>, group: FormGroup): ValidatorFn[] {\n\t\tconst validators: ValidatorFn[] = [];\n\t\tif (control.min) {\n\t\t\tvalidators.push(Validators.min(control.min));\n\t\t}\n\t\tif (control.max) {\n\t\t\tvalidators.push(Validators.max(control.max));\n\t\t}\n\t\tif (control.required) {\n\t\t\tvalidators.push(Validators.required);\n\t\t}\n\t\tif (control.requiredTrue) {\n\t\t\tvalidators.push(Validators.requiredTrue);\n\t\t}\n\t\tif (control.email) {\n\t\t\tvalidators.push(Validators.email);\n\t\t}\n\t\tif (control.minlength) {\n\t\t\tvalidators.push(Validators.minLength(control.minlength));\n\t\t}\n\t\tif (control.maxlength) {\n\t\t\tvalidators.push(Validators.maxLength(control.maxlength));\n\t\t}\n\t\tif (control.pattern) {\n\t\t\tvalidators.push(Validators.pattern(control.pattern));\n\t\t}\n\t\tif (control.match) {\n\t\t\tvalidators.push(matchValidator(control.match, control.reverse, group));\n\t\t}\n\t\t// console.log(control.key, validators);\n\t\treturn validators;\n\t}\n\n\ttoFormGroup(controls: ControlBase<any>[]): FormGroup {\n\t\tconst options: any = {};\n\t\tcontrols.forEach(x => {\n\t\t\t// group[x.key] = new FormControl(x.value, this.getValidators(x, group));\n\t\t\tconst formControl: FormControl = new FormControl(x.value);\n\t\t\tif (x.disabled) {\n\t\t\t\tformControl.disable();\n\t\t\t}\n\t\t\toptions[x.key] = formControl;\n\t\t\t// x.setControl(formControl); // !!!\n\t\t});\n\t\tconst group: FormGroup = new FormGroup(options);\n\t\t// console.log(group);\n\t\tcontrols.forEach(x => {\n\t\t\tconst validators = this.getValidators(x, group);\n\t\t\t// console.log(validators);\n\t\t\tgroup.controls[x.key].setValidators(validators);\n\t\t});\n\t\treturn group;\n\t}\n\n}\n","import { Component, ComponentFactory, ComponentFactoryResolver, ComponentRef, Input, OnDestroy, OnInit, Type, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { DisposableComponent } from '@designr/core';\nimport { ControlBase } from './base/control-base';\nimport { ControlBaseComponent } from './base/control-base.component';\nimport { ControlService } from './control.service';\n\n@Component({\n\tselector: 'control-outlet',\n\ttemplate: '<ng-template #outlet></ng-template>',\n})\nexport class ControlOutletComponent extends DisposableComponent implements OnInit, OnDestroy {\n\n\t@Input() control: ControlBase<any>;\n\t@Input() form: FormGroup;\n\n\t@ViewChild('outlet', { read: ViewContainerRef }) viewContainerRef: ViewContainerRef;\n\tprivate componentRef: ComponentRef<ControlBaseComponent>;\n\n\tconstructor(\n\t\tprivate componentFactoryResolver: ComponentFactoryResolver,\n\t\tprivate controlService: ControlService,\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tconst component: Type<ControlBaseComponent> = this.controlService.resolve(this.control);\n\t\tconst factory: ComponentFactory<ControlBaseComponent> = this.componentFactoryResolver.resolveComponentFactory(component);\n\t\tthis.viewContainerRef.clear();\n\t\tconst componentRef = this.viewContainerRef.createComponent(factory);\n\t\tconst instance = componentRef.instance;\n\t\tinstance.control = this.control;\n\t\tinstance.form = this.form;\n\t\tif (typeof instance['ControlInit'] === 'function') {\n\t\t\tinstance['ControlInit']();\n\t\t}\n\t\tthis.componentRef = componentRef;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.componentRef.destroy();\n\t}\n\n}\n","\nimport { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { DisposableComponent } from '@designr/core';\nimport { ControlBase } from './base/control-base';\n\n@Component({\n\tselector: 'controls-component',\n\ttemplate: `<ng-container *ngFor=\"let control of controls\">\n\t<control-outlet class=\"form-group\" [control]=\"control\" [form]=\"form\"></control-outlet>\n</ng-container>`,\n})\nexport class ControlsComponent extends DisposableComponent {\n\n\t@Input() controls: ControlBase<any>[];\n\t@Input() form: FormGroup;\n\n}\n","import { Directive, forwardRef, Input } from '@angular/core';\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { catchError, debounceTime, switchMap, take } from 'rxjs/operators';\n\nconst DEBOUNCE_TIME: number = 250;\n\n@Directive({\n\tselector: '[exists][formControlName],[exists][formControl],[exists][ngModel]',\n\tproviders: [\n\t\t{ provide: NG_ASYNC_VALIDATORS, useExisting: forwardRef(() => ExistsValidator), multi: true },\n\t]\n})\nexport class ExistsValidator implements AsyncValidator {\n\n\tprivate values = new BehaviorSubject<string>(null);\n\tset value(value: string) {\n\t\tif (value && value.trim() !== '') {\n\t\t\tthis.values.next(value);\n\t\t}\n\t}\n\tprivate debounced$: Observable<ValidationErrors | null> = this.values.pipe(\n\t\tdebounceTime(DEBOUNCE_TIME),\n\t\tswitchMap((value: string) => {\n\t\t\t// console.log('ExistsValidator.debounced$', value);\n\t\t\treturn this.exists$(value);\n\t\t}),\n\t\tcatchError((response) => {\n\t\t\tconsole.log('ExistsValidator.debounced$.catchError', response);\n\t\t\treturn of(null);\n\t\t}),\n\t\ttake(1),\n\t);\n\n\t@Input() exists: Function;\n\n\texists$(value: string): Observable<ValidationErrors | null> {\n\t\tif (typeof this.exists === 'function') {\n\t\t\t// console.log('ExistsValidator.exists$', value);\n\t\t\treturn this.exists(value).pipe(\n\t\t\t\tswitchMap(exists => {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\treturn of({\n\t\t\t\t\t\t\texists: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn of(null);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t} else {\n\t\t\treturn of(null);\n\t\t}\n\t}\n\n\tvalidate(control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n\t\tthis.value = control.value;\n\t\treturn this.debounced$;\n\t}\n\n}\n","import { Attribute, Directive, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n@Directive({\n\tselector: '[match][formControlName],[match][formControl],[match][ngModel]',\n\tproviders: [\n\t\t{ provide: NG_VALIDATORS, useExisting: forwardRef(() => MatchValidator), multi: true }\n\t]\n})\nexport class MatchValidator implements Validator {\n\n\tconstructor(\n\t\t@Attribute('match') public match: string,\n\t\t@Attribute('reverse') public reverse: string\n\t) { }\n\n\tprivate get isReverse() {\n\t\tif (!this.reverse) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.reverse === 'true' ? true : false;\n\t}\n\n\tvalidate(control: AbstractControl): { [key: string]: any } {\n\n\t\t// self value\n\t\tconst value = control.value;\n\n\t\t// control value\n\t\tconst input = control.root.get(this.match);\n\n\t\t// value not equal\n\t\tif (input && value !== input.value && !this.isReverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (input && value === input.value && this.isReverse) {\n\t\t\tdelete input.errors['match'];\n\t\t\tif (!Object.keys(input.errors).length) {\n\t\t\t\tinput.setErrors(null);\n\t\t\t}\n\t\t}\n\n\t\t// value not equal and reverse\n\t\tif (input && value !== input.value && this.isReverse) {\n\t\t\tinput.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n\n}\n","import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n\tselector: '[ngModel][uppercase]'\n})\nexport class UppercaseDirective {\n\n\t@Output() ngModelChange: EventEmitter<any> = new EventEmitter();\n\tvalue: any;\n\n\t@HostListener('input', ['$event']) onInputChange($event) {\n\t\tthis.value = $event.target.value.toUpperCase();\n\t\tthis.ngModelChange.emit(this.value);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ControlBase, ControlBaseOptions } from '../control/base/control-base';\nimport { ControlService } from '../control/control.service';\nimport { ControlInterface } from '../control/controls';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FormService {\n\n\tconstructor(\n\t\tprivate controlService: ControlService\n\t) { }\n\n\tgetControlsFromOptions(options: ControlBaseOptions<any>[]): ControlBase<any>[] {\n\t\tconst controls: ControlBase<any>[] = options.map(o => {\n\t\t\tconst control: ControlInterface = this.controlService.options.controls[o.schema];\n\t\t\tif (control) {\n\t\t\t\tconst controlBase: Type<ControlBase<any>> = control.model;\n\t\t\t\treturn new controlBase(o);\n\t\t\t} else {\n\t\t\t\tconsole.error(`missing control for key ${o.schema}`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}).filter(x => x);\n\t\tcontrols.sort((a, b) => a.order - b.order);\n\t\treturn controls;\n\t}\n\n\tgetGroupFromOptions(options: ControlBaseOptions<any>[]): FormGroup {\n\t\tconst controls: ControlBase<any>[] = this.getControlsFromOptions(options);\n\t\tconst group = this.controlService.toFormGroup(controls);\n\t\treturn group;\n\t}\n\n\tgetGroupFromControls(controls: ControlBase<any>[]): FormGroup {\n\t\tconst group = this.controlService.toFormGroup(controls);\n\t\treturn group;\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CoreModule } from '@designr/core';\r\nimport { ControlConfig, CONTROL_CONFIG, entryComponents } from './config/control.config';\r\nimport { ControlModuleComponent } from './control-module.component';\r\nimport { ControlBaseComponent } from './control/base/control-base.component';\r\nimport { ControlOutletComponent } from './control/control-outlet.component';\r\nimport { ControlService } from './control/control.service';\r\nimport { ControlsComponent } from './control/controls.component';\r\nimport { ExistsValidator } from './directives/exists.directive';\r\nimport { MatchValidator } from './directives/match.directive';\r\nimport { UppercaseDirective } from './directives/uppercase.directive';\r\nimport { FormService } from './form/form.service';\r\n\r\nconst services = [\r\n\tControlService,\r\n\tFormService,\r\n];\r\n\r\nconst components = [\r\n\tControlsComponent,\r\n\tControlModuleComponent,\r\n\tControlOutletComponent,\r\n\tControlBaseComponent,\r\n\t...entryComponents,\r\n];\r\n\r\nconst directives = [\r\n\tUppercaseDirective,\r\n];\r\n\r\nconst pipes = [\r\n];\r\n\r\nconst validators = [\r\n\tExistsValidator,\r\n\tMatchValidator,\r\n];\r\n\r\nconst guards = [\r\n];\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tCoreModule,\r\n\t],\r\n\tproviders: [\r\n\t\t...services,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\tdeclarations: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\tentryComponents: [\r\n\t\t...entryComponents,\r\n\t],\r\n\texports: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n})\r\n\r\nexport class ControlModule {\r\n\r\n\tconstructor(\r\n\t\t@Optional() @SkipSelf() parentModule: ControlModule\r\n\t) {\r\n\t\t/*\r\n\t\tif (parentModule) {\r\n\t\t\tthrow new Error('ControlModule is already loaded. Import it in the AppModule only');\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\r\n\tpublic static forRoot(\r\n\t\tconfig?: ControlConfig,\r\n\t): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: ControlModule,\r\n\t\t\tproviders: [{\r\n\t\t\t\tprovide: CONTROL_CONFIG, useValue: config\r\n\t\t\t}]\r\n\t\t};\r\n\t}\r\n\r\n}\r\n","\nimport { ControlValueAccessor } from '@angular/forms';\n\nexport class ValueAccessorBase<T> implements ControlValueAccessor {\n\tprivate innerValue: T;\n\n\tprivate changed = new Array<(value: T) => void>();\n\tprivate touched = new Array<() => void>();\n\n\tget value(): T {\n\t\treturn this.innerValue;\n\t}\n\n\tset value(value: T) {\n\t\tif (this.innerValue !== value) {\n\t\t\tthis.innerValue = value;\n\t\t\tthis.changed.forEach(f => f(value));\n\t\t}\n\t}\n\n\ttouch() {\n\t\tthis.touched.forEach(f => f());\n\t}\n\n\twriteValue(value: T) {\n\t\tthis.innerValue = value;\n\t}\n\n\tregisterOnChange(fn: (value: T) => void) {\n\t\tthis.changed.push(fn);\n\t}\n\n\tregisterOnTouched(fn: () => void) {\n\t\tthis.touched.push(fn);\n\t}\n}\n"]}