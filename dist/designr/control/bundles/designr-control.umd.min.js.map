{"version":3,"sources":["ng://@designr/control/lib/config/control.config.ts","ng://@designr/control/lib/control-module.component.ts","node_modules/tslib/tslib.es6.js","ng://@designr/control/lib/control/control.component.ts","ng://@designr/control/lib/directives/match.validator.ts","ng://@designr/control/lib/control/control.service.ts","ng://@designr/control/lib/directives/exists.directive.ts","ng://@designr/control/lib/directives/match.directive.ts","ng://@designr/control/lib/directives/uppercase.directive.ts","ng://@designr/control/lib/control/control-base.ts","ng://@designr/control/lib/control/control-checkbox.ts","ng://@designr/control/lib/control/control-email.ts","ng://@designr/control/lib/control/control-markdown.ts","ng://@designr/control/lib/control/control-number.ts","ng://@designr/control/lib/control/control-password.ts","ng://@designr/control/lib/control/control-radio.ts","ng://@designr/control/lib/control/control-select.ts","ng://@designr/control/lib/control/control-text.ts","ng://@designr/control/lib/form/form.service.ts","ng://@designr/control/lib/control.module.ts","ng://@designr/control/lib/control/control-value.accessor.ts"],"names":["ControlConfig","options","this","controls","Object","assign","CONTROL_CONFIG","InjectionToken","ControlModuleComponent","version","prototype","ngOnInit","Component","args","selector","template","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","ControlComponent","renderer","reveal","checked","onChange","onTouched","defineProperty","form","control","key","controlRef","valid","getFormattedValue","onInput","$event","element","target","onFocus","blurred","setProperty","onBlur","formatValue","parseValue","parsed","innervalue","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","Renderer2","Input","matchValidator","otherKey","reverse","group","otherControl","match","errors","keys","setErrors","ControlService","getValidators","validators","min","Validators","max","required","requiredTrue","email","minLength","maxLength","pattern","toFormGroup","_this","forEach","x","formControl","FormControl","disabled","disable","FormGroup","setValidators","Injectable","providedIn","decorators","type","Inject","ExistsValidator","values","BehaviorSubject","debounced$","pipe","debounceTime","switchMap","exists$","catchError","response","console","log","of","take","trim","exists","validate","Directive","NG_ASYNC_VALIDATORS","MatchValidator","input","root","get","isReverse","NG_VALIDATORS","Attribute","UppercaseDirective","ngModelChange","EventEmitter","onInputChange","toUpperCase","emit","Output","HostListener","ControlBaseOptions","ControlBase","_originalValue","name","uid","label","placeholder","order","undefined","schema","step","format","ControlCheckbox","_super","tslib_1.__extends","ControlEmail","ControlMarkdown","ControlNumber","ControlPassword","ControlRadio","ControlSelect","ControlText","FormService","controlService","getControlsFromOptions","map","sort","a","getGroupFromOptions","getGroupFromControls","services","components","directives","pipes","ControlModule","parentModule","Error","forRoot","config","ngModule","useValue","NgModule","imports","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","CoreModule","declarations","exports","Optional","SkipSelf","ValueAccessorBase","changed","touched","innerValue","f","touch"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { Controls } from '../control/controls';\n\nexport class ControlConfig {\n\tcontrols?: Controls = {};\n\n\tconstructor(options?: ControlConfig) {\n\t\t// console.log('ControlConfig', options);\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t\tthis.controls = options.controls || {};\n\t\t}\n\t}\n}\n\nexport const CONTROL_CONFIG = new InjectionToken<ControlConfig>('control.config');\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'control-module',\n\ttemplate: `<span class=\"control-module\">control {{version}}</span>`,\n\tstyles: []\n})\nexport class ControlModuleComponent implements OnInit {\n\n\tversion: string = '0.0.3';\n\n\tconstructor() { }\n\n\tngOnInit() {\n\t}\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBase } from './control-base';\n\n@Component({\n\tselector: 'core-control',\n\ttemplateUrl: './control.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlComponent implements ControlValueAccessor {\n\t@Input() control: ControlBase<any>;\n\t@Input() form: FormGroup;\n\n\tprivate element: any;\n\tprivate blurred: boolean;\n\tprivate innervalue: any;\n\n\treveal: { checked: boolean } = { checked: false };\n\n\tconstructor(\n\t\tprivate renderer: Renderer2\n\t) { }\n\n\tget controlRef(): AbstractControl {\n\t\t// console.log('controlRef', this.control.key, this.form.controls);\n\t\treturn this.form.controls[this.control.key];\n\t}\n\n\tget isValid() { return this.controlRef.valid; }\n\n\t// ControlValueAccessor\n\n\tgetFormattedValue(): any {\n\t\t// console.log('ControlComponent.getFormattedValue', this.controlRef.value);\n\t\treturn this.controlRef.value;\n\t}\n\n\tonInput($event): void {\n\t\tthis.element = $event.target;\n\t\tthis.onChange(this.element.value);\n\t}\n\n\tonFocus($event): void {\n\t\tthis.blurred = false;\n\t\tthis.element = $event.target;\n\t\t// this.element.value = this.controlRef.value;\n\t\tthis.renderer.setProperty(this.element, 'value', this.controlRef.value);\n\t\t// console.log('ControlComponent.onFocus', this.controlRef);\n\t}\n\n\tonBlur($event): void {\n\t\tthis.blurred = true;\n\t\tthis.element = $event.target;\n\t\t// this.element.value = this.controlRef.value;\n\t\tthis.renderer.setProperty(this.element, 'value', this.controlRef.value);\n\t\t// console.log('ControlComponent.onBlur', this.controlRef);\n\t\t/*\n\t\tif (this.innervalue) {\n\t\t\tthis.control.patchValue(this.innervalue + ' H', { emitEvent: false });\n\t\t}\n\t\t*/\n\t}\n\n\tprivate onChange = (value: any) => { };\n\n\tprivate onTouched = () => { };\n\n\tprivate formatValue(value: any): void {\n\t\t// console.log('ControlComponent.formatValue', value);\n\t\tthis.renderer.setProperty(this.element, 'value', value);\n\t\t// console.log('ControlEditableComponent.writeValue', value);\n\t}\n\n\tprivate parseValue(value: any) {\n\t\t// console.log('ControlComponent.parseValue', value);\n\t\tconst parsed = this.innervalue;\n\t\tthis.onChange(parsed);\n\t}\n\n\twriteValue(value: any): void {\n\t\tthis.formatValue(value);\n\t}\n\n\tregisterOnChange(fn: any): void {\n\t\tthis.onChange = fn;\n\t\t// console.log('ControlEditableComponent.registerOnChange');\n\t}\n\n\tregisterOnTouched(fn: any): void {\n\t\tthis.onTouched = fn;\n\t\t// console.log('ControlEditableComponent.registerOnTouched');\n\t}\n\n\tsetDisabledState(isDisabled: boolean): void {\n\t\t// const node = this.textarea.nativeElement;\n\t\t/*\n\t\tif (isDisabled) {\n\t\t\tthis.renderer.addClass(this.element, 'disabled');\n\t\t} else {\n\t\t\tthis.renderer.removeClass(this.element, 'disabled');\n\t\t}\n\t\t// console.log('ControlEditableComponent.setDisabledState', isDisabled);\n\t\t*/\n\t}\n\n}\n","import { FormControl, FormGroup, ValidatorFn } from '@angular/forms';\n\nexport function matchValidator(otherKey: string, reverse: boolean = false, group: FormGroup): ValidatorFn {\n\treturn (control: FormControl) => {\n\t\tconst otherControl = group.controls[otherKey];\n\n\t\tconst value = control.value;\n\n\t\t// value not equal\n\t\tif (otherControl && value !== otherControl.value && !reverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (otherControl && value === otherControl.value && reverse) {\n\t\t\tif (otherControl.errors) {\n\t\t\t\tdelete otherControl.errors['match'];\n\t\t\t\tif (!Object.keys(otherControl.errors).length) {\n\t\t\t\t\totherControl.setErrors(null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (otherControl && value !== otherControl.value && reverse) {\n\t\t\totherControl.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t};\n}\n\n/*\nexport function __matchValidator(key: string, otherKey: string, group: FormGroup): ValidatorFn {\n\treturn (control: FormControl) => {\n\n\t\t// const control = group.controls[key];\n\t\tconst otherControl = group.controls[otherKey];\n\n\t\t// console.log(control.touched, otherControl.touched);\n\n\t\tif (control.touched && otherControl.touched) {\n\t\t\tconst match = control.value === otherControl.value;\n\t\t\tif (!match && control.valid && otherControl.valid) {\n\t\t\t\tcontrol.setErrors({\n\t\t\t\t\tmatch: otherKey\n\t\t\t\t});\n\t\t\t\treturn {\n\t\t\t\t\tmatch: otherKey + ' != ' + key\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (match && control.hasError('match')) {\n\t\t\t\tcontrol.setErrors(null);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n}\n*/\n\n/*\nvalidate(control: AbstractControl): { [key: string]: any } {\n\t\t// self value\n\t\tconst value = control.value;\n\n\t\t// control value\n\t\tconst input = control.root.get(this.match);\n\n\t\t// value not equal\n\t\tif (input && value !== input.value && !this.isReverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (input && value === input.value && this.isReverse) {\n\t\t\tdelete input.errors['match'];\n\t\t\tif (!Object.keys(input.errors).length) {\n\t\t\t\tinput.setErrors(null);\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (input && value !== input.value && this.isReverse) {\n\t\t\tinput.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n*/\n/*\nstatic isValidString(control: FormControl) {\n\tif (!control.value || typeof control.value !== 'string') {\n\t\treturn {isNotValidString: true};\n\t}\n\treturn null;\n}\n\nstatic isValidName(control: FormControl) {\n\tif (control.valid && control.value !== 'John Doe') {\n\t\treturn {isNotValidName: true};\n\t}\n\treturn null;\n}\n*/\n","import { Inject, Injectable } from '@angular/core';\nimport { FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { ControlConfig, CONTROL_CONFIG } from '../config/control.config';\nimport { matchValidator } from '../directives/match.validator';\nimport { ControlBase } from './control-base';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ControlService {\n\n\tpublic options: ControlConfig;\n\n\tconstructor(\n\t\t@Inject(CONTROL_CONFIG) options: ControlConfig\n\t) {\n\t\t// console.log('ControlService', options);\n\t\toptions = options || {};\n\t\tthis.options = new ControlConfig(options);\n\t}\n\n\tgetValidators(control: ControlBase<any>, group: FormGroup): ValidatorFn[] {\n\t\tconst validators: ValidatorFn[] = [];\n\t\tif (control.min) {\n\t\t\tvalidators.push(Validators.min(control.min));\n\t\t}\n\t\tif (control.max) {\n\t\t\tvalidators.push(Validators.max(control.max));\n\t\t}\n\t\tif (control.required) {\n\t\t\tvalidators.push(Validators.required);\n\t\t}\n\t\tif (control.requiredTrue) {\n\t\t\tvalidators.push(Validators.requiredTrue);\n\t\t}\n\t\tif (control.email) {\n\t\t\tvalidators.push(Validators.email);\n\t\t}\n\t\tif (control.minLength) {\n\t\t\tvalidators.push(Validators.minLength(control.minLength));\n\t\t}\n\t\tif (control.maxLength) {\n\t\t\tvalidators.push(Validators.maxLength(control.maxLength));\n\t\t}\n\t\tif (control.pattern) {\n\t\t\tvalidators.push(Validators.pattern(control.pattern));\n\t\t}\n\t\tif (control.match) {\n\t\t\tvalidators.push(matchValidator(control.match, control.reverse, group));\n\t\t}\n\t\t// console.log(control.key, validators);\n\t\treturn validators;\n\t}\n\n\ttoFormGroup(controls: ControlBase<any>[]): FormGroup {\n\t\tconst options: any = {};\n\t\tcontrols.forEach(x => {\n\t\t\t// group[x.key] = new FormControl(x.value, this.getValidators(x, group));\n\t\t\tconst formControl: FormControl = new FormControl(x.value);\n\t\t\tif (x.disabled) {\n\t\t\t\tformControl.disable();\n\t\t\t}\n\t\t\toptions[x.key] = formControl;\n\t\t\t// x.setControl(formControl); // !!!\n\t\t});\n\t\tconst group: FormGroup = new FormGroup(options);\n\t\t// console.log(group);\n\t\tcontrols.forEach(x => {\n\t\t\tconst validators = this.getValidators(x, group);\n\t\t\t// console.log(validators);\n\t\t\tgroup.controls[x.key].setValidators(validators);\n\t\t});\n\t\treturn group;\n\t}\n\n}\n","import { Directive, forwardRef, Input } from '@angular/core';\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { catchError, debounceTime, switchMap, take } from 'rxjs/operators';\n\nconst DEBOUNCE_TIME: number = 250;\n\n@Directive({\n\tselector: '[exists][formControlName],[exists][formControl],[exists][ngModel]',\n\tproviders: [\n\t\t{ provide: NG_ASYNC_VALIDATORS, useExisting: forwardRef(() => ExistsValidator), multi: true },\n\t]\n})\nexport class ExistsValidator implements AsyncValidator {\n\n\tprivate values = new BehaviorSubject<string>(null);\n\tset value(value: string) {\n\t\tif (value && value.trim() !== '') {\n\t\t\tthis.values.next(value);\n\t\t}\n\t}\n\tprivate debounced$: Observable<ValidationErrors | null> = this.values.pipe(\n\t\tdebounceTime(DEBOUNCE_TIME),\n\t\tswitchMap((value: string) => {\n\t\t\t// console.log('ExistsValidator.debounced$', value);\n\t\t\treturn this.exists$(value);\n\t\t}),\n\t\tcatchError((response) => {\n\t\t\tconsole.log('ExistsValidator.debounced$.catchError', response);\n\t\t\treturn of(null);\n\t\t}),\n\t\ttake(1),\n\t);\n\n\t@Input() exists: Function;\n\n\texists$(value: string): Observable<ValidationErrors | null> {\n\t\tif (typeof this.exists === 'function') {\n\t\t\t// console.log('ExistsValidator.exists$', value);\n\t\t\treturn this.exists(value).pipe(\n\t\t\t\tswitchMap(exists => {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\treturn of({\n\t\t\t\t\t\t\texists: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn of(null);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t} else {\n\t\t\treturn of(null);\n\t\t}\n\t}\n\n\tvalidate(control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n\t\tthis.value = control.value;\n\t\treturn this.debounced$;\n\t}\n\n}\n","import { Attribute, Directive, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n@Directive({\n\tselector: '[match][formControlName],[match][formControl],[match][ngModel]',\n\tproviders: [\n\t\t{ provide: NG_VALIDATORS, useExisting: forwardRef(() => MatchValidator), multi: true }\n\t]\n})\nexport class MatchValidator implements Validator {\n\n\tconstructor(\n\t\t@Attribute('match') public match: string,\n\t\t@Attribute('reverse') public reverse: string\n\t) { }\n\n\tprivate get isReverse() {\n\t\tif (!this.reverse) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.reverse === 'true' ? true : false;\n\t}\n\n\tvalidate(control: AbstractControl): { [key: string]: any } {\n\n\t\t// self value\n\t\tconst value = control.value;\n\n\t\t// control value\n\t\tconst input = control.root.get(this.match);\n\n\t\t// value not equal\n\t\tif (input && value !== input.value && !this.isReverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (input && value === input.value && this.isReverse) {\n\t\t\tdelete input.errors['match'];\n\t\t\tif (!Object.keys(input.errors).length) {\n\t\t\t\tinput.setErrors(null);\n\t\t\t}\n\t\t}\n\n\t\t// value not equal and reverse\n\t\tif (input && value !== input.value && this.isReverse) {\n\t\t\tinput.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n\n}\n","import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n\tselector: '[ngModel][uppercase]'\n})\nexport class UppercaseDirective {\n\n\t@Output() ngModelChange: EventEmitter<any> = new EventEmitter();\n\tvalue: any;\n\n\t@HostListener('input', ['$event']) onInputChange($event) {\n\t\tthis.value = $event.target.value.toUpperCase();\n\t\tthis.ngModelChange.emit(this.value);\n\t}\n\n}\n","export class ControlBaseOptions<T> {\n\tvalue?: T;\n\tkey?: string;\n\tlabel?: string;\n\tplaceholder?: string;\n\t// order\n\torder?: number;\n\tschema?: string;\n\ttype?: string;\n\t// validators\n\tmin?: number;\n\tmax?: number;\n\trequired?: boolean;\n\trequiredTrue?: boolean;\n\temail?: boolean;\n\tminLength?: number;\n\tmaxLength?: number;\n\tpattern?: string | RegExp;\n\tmatch?: string;\n\t// options\n\treverse?: boolean;\n\toptions?: { key: string, value: string }[];\n\t// state\n\tdisabled?: boolean;\n\t// formatters\n\tstep?: number;\n\tformat?: string;\n}\n\nexport class ControlBase<T> {\n\t// export class ControlBase<T> implements ControlValueAccessor {\n\n\tstatic uid: number = 0;\n\n\tprivate _originalValue: T;\n\tvalue: T;\n\tkey: string;\n\t//\n\tlabel: string;\n\tplaceholder: string;\n\t// order\n\torder: number;\n\tschema: string;\n\ttype: string;\n\t// validators\n\tmin: number;\n\tmax: number;\n\trequired: boolean;\n\trequiredTrue: boolean;\n\temail: boolean;\n\tminLength: number;\n\tmaxLength: number;\n\tpattern: string | RegExp;\n\tmatch: string;\n\t// options\n\treverse: boolean;\n\toptions: { key: string, value: string }[];\n\t// state\n\tdisabled: boolean;\n\t// formatters\n\tstep: number;\n\tformat: string;\n\n\tconstructor(options: ControlBaseOptions<T> = {}) {\n\t\tthis._originalValue = options.value;\n\t\tthis.value = options.value;\n\t\tthis.key = options.key;\n\t\t//\n\t\tconst name = `${options.key || 'Control'} ${++ControlBase.uid}`;\n\t\tthis.label = options.label || name;\n\t\tthis.placeholder = options.placeholder || name;\n\t\t// order\n\t\tthis.order = options.order === undefined ? 1 : options.order;\n\t\tthis.schema = options.schema || 'text';\n\t\tthis.type = options.type || this.schema;\n\t\t// validators\n\t\tthis.min = options.min || null;\n\t\tthis.max = options.max || null;\n\t\tthis.required = !!options.required;\n\t\tthis.requiredTrue = !!options.requiredTrue;\n\t\tthis.email = !!options.email;\n\t\tthis.minLength = options.minLength || null;\n\t\tthis.maxLength = options.maxLength || null;\n\t\tthis.pattern = options.pattern || null;\n\t\tthis.match = options.match || null;\n\t\t// options\n\t\tthis.reverse = !!options.reverse;\n\t\tthis.options = options.options || [];\n\t\t// state\n\t\tthis.disabled = !!options.disabled;\n\t\t// formatters\n\t\tthis.step = options.step || null;\n\t\tthis.format = options.format || null;\n\t}\n\n\t/*\n\t//\n\tcontrol?: FormControl;\n\tinnervalue: any;\n\tblurred: boolean = false;\n\n\tfocus(): void {\n\t\t// console.log('ControlBase.focus', this.control.value);\n\t\tthis.blurred = false;\n\t\tif (this.innervalue) {\n\t\t\tthis.control.patchValue(this.innervalue, { emitEvent: false });\n\t\t}\n\t}\n\n\tblur(): void {\n\t\t// console.log('ControlBase.blur', this.control.value);\n\t\tthis.blurred = true;\n\t\tif (this.innervalue) {\n\t\t\tthis.control.patchValue(this.innervalue + ' H', { emitEvent: false });\n\t\t}\n\t}\n\n\tsetControl(control: FormControl): void {\n\t\tthis.control = control;\n\t\tthis.innervalue = control.value;\n\t\tcontrol.valueChanges.subscribe(value => {\n\t\t\t// console.log('ControlBase.control.valueChanges', value);\n\t\t\tif (this.blurred) {\n\t\t\t\tcontrol.patchValue(value + ' H', { emitEvent: false });\n\t\t\t} else {\n\t\t\t\tthis.innervalue = value;\n\t\t\t}\n\t\t});\n\t\t// this.blur();\n\t}\n\n\tformatValue(): string {\n\t\t// console.log('ControlBase.formatValue', this, this.control);\n\t\treturn 'aaa';\n\t}\n\n\tparseValue(e: Event) {\n\t\t// console.log('ControlBase.parseValue', e);\n\t}\n\n\tprivate onChange = (value: any) => { };\n\n\tprivate onTouched = () => { };\n\n\twriteValue(value: any): void {\n\t\t// console.log('ControlBase.writeValue', value);\n\t\t// this.formattedValue = value;\n\t\tthis.onChange(this.value);\n\t}\n\n\tregisterOnChange(fn: (value: any) => void): void {\n\t\t// console.log('ControlBase.registerOnChange', fn);\n\t\tthis.onChange = fn;\n\t\t// this.onChange('my new value');\n\t}\n\n\tregisterOnTouched(fn: () => void): void {\n\t\t// console.log('ControlBase.registerOnTouched', fn);\n\t\tthis.onTouched = fn;\n\t}\n\n\tsetDisabledState?(isDisabled: boolean): void {\n\t\t// console.log('ControlBase.setDisabledState', isDisabled);\n\t\tthis.disabled = isDisabled;\n\t}\n\t*/\n\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlCheckbox extends ControlBase<boolean> {\n\n\tschema = 'checkbox';\n\n\tconstructor(options: ControlBaseOptions<boolean> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlEmail extends ControlBase<string> {\n\n\tschema = 'email';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t\tthis.email = true;\n\t\tthis.pattern = options.pattern || '[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}';\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlMarkdown extends ControlBase<string> {\n\n\tschema = 'markdown';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlNumber extends ControlBase<string> {\n\n\tschema = 'number';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlPassword extends ControlBase<string> {\n\n\tschema = 'password';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlRadio extends ControlBase<boolean> {\n\n\tschema = 'radio';\n\n\tconstructor(options: ControlBaseOptions<boolean> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlSelect extends ControlBase<string> {\n\n\tschema = 'select';\n\toptions: { key: string, value: string }[] = [];\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.options = options.options || [];\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlText extends ControlBase<string> {\n\n\tschema = 'text';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ControlBase, ControlBaseOptions } from '../control/control-base';\nimport { ControlCheckbox } from '../control/control-checkbox';\nimport { ControlEmail } from '../control/control-email';\nimport { ControlMarkdown } from '../control/control-markdown';\nimport { ControlNumber } from '../control/control-number';\nimport { ControlPassword } from '../control/control-password';\nimport { ControlRadio } from '../control/control-radio';\nimport { ControlSelect } from '../control/control-select';\nimport { ControlText } from '../control/control-text';\nimport { ControlService } from '../control/control.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FormService {\n\n\tconstructor(\n\t\tprivate controlService: ControlService\n\t) { }\n\n\tgetControlsFromOptions(options: ControlBaseOptions<any>[]): ControlBase<any>[] {\n\t\tconst controls: ControlBase<any>[] = options.map(o => {\n\t\t\tswitch (o.schema) {\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\treturn new ControlCheckbox(o);\n\t\t\t\tcase 'email':\n\t\t\t\t\treturn new ControlEmail(o);\n\t\t\t\tcase 'number':\n\t\t\t\t\treturn new ControlNumber(o);\n\t\t\t\tcase 'password':\n\t\t\t\t\treturn new ControlPassword(o);\n\t\t\t\tcase 'radio':\n\t\t\t\t\treturn new ControlRadio(o);\n\t\t\t\tcase 'select':\n\t\t\t\t\treturn new ControlSelect(o);\n\t\t\t\tcase 'markdown':\n\t\t\t\t\treturn new ControlMarkdown(o);\n\t\t\t\tcase 'text':\n\t\t\t\t\treturn new ControlText(o);\n\t\t\t\tdefault:\n\t\t\t\t\treturn new ControlText(o);\n\t\t\t}\n\t\t});\n\t\tcontrols.sort((a, b) => a.order - b.order);\n\t\treturn controls;\n\t}\n\n\tgetGroupFromOptions(options: ControlBaseOptions<any>[]): FormGroup {\n\t\tconst controls: ControlBase<any>[] = this.getControlsFromOptions(options);\n\t\tconst group = this.controlService.toFormGroup(controls);\n\t\treturn group;\n\t}\n\n\tgetGroupFromControls(controls: ControlBase<any>[]): FormGroup {\n\t\tconst group = this.controlService.toFormGroup(controls);\n\t\treturn group;\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CoreModule } from '@designr/core';\r\nimport { ControlConfig, CONTROL_CONFIG } from './config/control.config';\r\nimport { ControlModuleComponent } from './control-module.component';\r\nimport { ControlComponent } from './control/control.component';\r\nimport { ControlService } from './control/control.service';\r\nimport { ExistsValidator } from './directives/exists.directive';\r\nimport { MatchValidator } from './directives/match.directive';\r\nimport { UppercaseDirective } from './directives/uppercase.directive';\r\nimport { FormService } from './form/form.service';\r\n\r\nconst services = [\r\n\tControlService,\r\n\tFormService,\r\n];\r\n\r\nconst components = [\r\n\tControlComponent,\r\n\tControlModuleComponent,\r\n];\r\n\r\nconst directives = [\r\n\tUppercaseDirective,\r\n];\r\n\r\nconst pipes = [\r\n];\r\n\r\nconst validators = [\r\n\tExistsValidator,\r\n\tMatchValidator,\r\n];\r\n\r\nconst guards = [\r\n];\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tCoreModule,\r\n\t],\r\n\tproviders: [\r\n\t\t...services,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\tdeclarations: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\texports: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n})\r\n\r\nexport class ControlModule {\r\n\r\n\tconstructor(\r\n\t\t@Optional() @SkipSelf() parentModule: ControlModule\r\n\t) {\r\n\t\tif (parentModule) {\r\n\t\t\tthrow new Error('ControlModule is already loaded. Import it in the AppModule only');\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static forRoot(\r\n\t\tconfig?: ControlConfig,\r\n\t): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: ControlModule,\r\n\t\t\tproviders: [{\r\n\t\t\t\tprovide: CONTROL_CONFIG, useValue: config\r\n\t\t\t}]\r\n\t\t};\r\n\t}\r\n\r\n}\r\n","\nimport { ControlValueAccessor } from '@angular/forms';\n\nexport class ValueAccessorBase<T> implements ControlValueAccessor {\n\tprivate innerValue: T;\n\n\tprivate changed = new Array<(value: T) => void>();\n\tprivate touched = new Array<() => void>();\n\n\tget value(): T {\n\t\treturn this.innerValue;\n\t}\n\n\tset value(value: T) {\n\t\tif (this.innerValue !== value) {\n\t\t\tthis.innerValue = value;\n\t\t\tthis.changed.forEach(f => f(value));\n\t\t}\n\t}\n\n\ttouch() {\n\t\tthis.touched.forEach(f => f());\n\t}\n\n\twriteValue(value: T) {\n\t\tthis.innerValue = value;\n\t}\n\n\tregisterOnChange(fn: (value: T) => void) {\n\t\tthis.changed.push(fn);\n\t}\n\n\tregisterOnTouched(fn: () => void) {\n\t\tthis.touched.push(fn);\n\t}\n}\n"]}