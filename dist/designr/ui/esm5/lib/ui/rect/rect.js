var Point = /** @class */ (function () {
    function Point() {
        this.top = 0;
        this.left = 0;
        this.x = 0;
        this.y = 0;
    }
    return Point;
}());
export { Point };
var Rect = /** @class */ (function () {
    function Rect(rect) {
        this.top = 0;
        this.left = 0;
        this.width = 0;
        this.height = 0;
        this.right = 0;
        this.bottom = 0;
        this.center = new Point();
        this.set(rect);
    }
    Rect.contains = function (rect, left, top) {
        return rect.top <= top && top <= rect.bottom && rect.left <= left && left <= rect.right;
    };
    Rect.intersectRect = function (r1, r2) {
        return !(r2.left > r1.right ||
            r2.right < r1.left ||
            r2.top > r1.bottom ||
            r2.bottom < r1.top);
    };
    Rect.fromNode = function (node) {
        if (!node.getClientRects().length) {
            return new Rect();
        }
        var rect = node.getBoundingClientRect();
        // const defaultView = node.ownerDocument.defaultView;
        return new Rect({
            // top: rect.top + defaultView.pageYOffset,
            // left: rect.left + defaultView.pageXOffset,
            top: rect.top,
            left: rect.left,
            width: rect.width,
            height: rect.height,
        });
    };
    Rect.prototype.set = function (rect) {
        if (rect) {
            Object.assign(this, rect);
            this.right = this.left + this.width;
            this.bottom = this.top + this.height;
        }
        var y = this.top + this.height / 2;
        var x = this.left + this.width / 2;
        this.center = {
            left: x,
            top: y,
            x: x,
            y: y,
        };
    };
    Rect.prototype.contains = function (left, top) {
        return Rect.contains(this, left, top);
    };
    Rect.prototype.intersect = function (rect) {
        return Rect.intersectRect(this, rect);
    };
    Rect.prototype.intersection = function (rect) {
        var center = {
            x: (this.center.x - rect.center.x) / (rect.width / 2),
            y: (this.center.y - rect.center.y) / (rect.height / 2),
        };
        if (this.intersect(rect)) {
            var dx = this.left > rect.left ? 0 : Math.abs(rect.left - this.left);
            var dy = this.top > rect.top ? 0 : Math.abs(rect.top - this.top);
            var x = dx ? (1 - dx / this.width) : ((rect.left + rect.width) - this.left) / this.width;
            var y = dy ? (1 - dy / this.height) : ((rect.top + rect.height) - this.top) / this.height;
            x = Math.min(1, x);
            y = Math.min(1, y);
            return {
                x: x,
                y: y,
                center: center
            };
        }
        else {
            return { x: 0, y: 0, center: center };
        }
    };
    return Rect;
}());
export default Rect;
//# sourceMappingURL=data:application/json;base64,