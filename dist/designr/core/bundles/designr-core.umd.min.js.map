{"version":3,"sources":["ng://@designr/core/lib/storage/storage.service.ts","ng://@designr/core/lib/auth/auth.service.ts","ng://@designr/core/lib/config/core.config.ts","ng://@designr/core/lib/config/core.service.ts","ng://@designr/core/lib/content/default-content.directive.ts","ng://@designr/core/lib/core-module.component.ts","node_modules/tslib/tslib.es6.js","ng://@designr/core/lib/disposable/disposable.component.ts","ng://@designr/core/lib/highlight/highlight.pipe.ts","ng://@designr/core/lib/logger/logger.ts","ng://@designr/core/lib/pipes/segment.pipe.ts","ng://@designr/core/lib/api/api.service.ts","ng://@designr/core/lib/translate/translate.service.ts","ng://@designr/core/lib/route/route.service.ts","ng://@designr/core/lib/http/http-status-code.service.ts","ng://@designr/core/lib/http/http-response.interceptor.ts","ng://@designr/core/lib/json-formatter/json-formatter.component.ts","ng://@designr/core/lib/label/label.service.ts","ng://@designr/core/lib/label/label.directive.ts","ng://@designr/core/lib/pipes/custom-async.pipe.ts","ng://@designr/core/lib/label/label.pipe.ts","ng://@designr/core/lib/logger/logger.component.ts","ng://@designr/core/lib/models/event-dispatcher.service.ts","ng://@designr/core/lib/models/identity.service.ts","ng://@designr/core/lib/models/entity.service.ts","ng://@designr/core/lib/models/menu.service.ts","ng://@designr/core/lib/modules/core.modules.ts","ng://@designr/core/lib/modules/lazy-module.directive.ts","ng://@designr/core/lib/once/once.service.ts","ng://@designr/core/lib/pipes/asset.pipe.ts","ng://@designr/core/lib/models/image.ts","ng://@designr/core/lib/pipes/image-url.pipe.ts","ng://@designr/core/lib/pipes/image.pipe.ts","ng://@designr/core/lib/pipes/public.pipe.ts","ng://@designr/core/lib/route/route.pipe.ts","ng://@designr/core/lib/slug/slug.service.ts","ng://@designr/core/lib/slug/slug-async.pipe.ts","ng://@designr/core/lib/slug/slug.pipe.ts","ng://@designr/core/lib/translate/translate.directive.ts","ng://@designr/core/lib/translate/translate.pipe.ts","ng://@designr/core/lib/trust/safe-style.pipe.ts","ng://@designr/core/lib/trust/safe-url.pipe.ts","ng://@designr/core/lib/trust/trust.pipe.ts","ng://@designr/core/lib/core.module.ts","ng://@designr/core/lib/label/label.ts","ng://@designr/core/lib/models/document.ts","ng://@designr/core/lib/models/document.service.ts","ng://@designr/core/lib/models/entity.ts","ng://@designr/core/lib/models/feature.ts","ng://@designr/core/lib/models/identity.ts","ng://@designr/core/lib/models/menu-item.ts","ng://@designr/core/lib/models/taxonomy.ts","ng://@designr/core/lib/translate/translate.ts"],"names":["StorageService","prototype","delete","name","exist","get","set","value","days","on","of","tryGet","this","Injectable","args","providedIn","CookieStorageService","platformId","storageService","isSupported","setter","document","cookie","indexOf","cookieName","ca","split","i","length","c","charAt","substring","model","JSON","parse","decodeURIComponent","atob","e","console","log","cache_1","json","stringify","key","push","btoa","encodeURIComponent","interval","timeout","elapsed","checkCookie","setTimeout","expires","date","Date","setTime","getTime","toUTCString","isPlatformBrowser","Inject","PLATFORM_ID","SessionStorageService","cookieStorageService","window","sessionStorage","removeItem","undefined","cache_2","setItem","supported","LocalStorageService","localStorage","cache_3","Bearer","Cookie","AuthToken","accessToken","expiresIn","AuthService","injector","localStorageService","cachedRequests","paths","setToken","authToken","retryFailedRequests","getToken","getFakeToken","isValid","now","isAuthenticated","collectFailedRequest","request","Injector","CoreTransitionConfig","options","Object","assign","CoreConfig","assets","authStrategy","AuthStrategy","defaultLanguage","defaultMarket","languages","id","lang","origin","production","public","urlStrategy","useLang","useMarket","transition","CORE_CONFIG","InjectionToken","CoreService","decorators","type","DefaultContentDirective","element","container","renderer","hasContent","nativeElement","ngAfterContentChecked","childNodes","node","nodeType","clear","createEmbeddedView","default","Directive","selector","ElementRef","ViewContainerRef","Renderer2","Input","CoreModuleComponent","version","ngOnInit","Component","template","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__read","o","n","m","Symbol","iterator","r","call","ar","next","done","error","__spread","arguments","concat","DisposableComponent","unsubscribe","Subject","ngOnDestroy","complete","HighlightPipe","transform","text","query","encodeHTML","regExp","RegExp","escapeRegexChars","replace","match","toLowerCase","safeToString","toString","trim","Pipe","_super","LoggerError","tslib_1.__extends","HttpErrorResponse","Logger","coreService","logs","_i","s","join","apply","warn","http","httpError","message","status","statusText","url","SegmentPipe","location","segments","path","isArray","normalize","Location","ApiRequestOptions","headers","HttpHeaders","Content-Type","params","HttpParams","ApiService","defineProperty","_logger","_http","HttpClient","_state","TransferState","_platformId","_config","_origin","config","base","collection","getUrl","method","first","second","_this","pipe","tap","x","logger","post","third","put","patch","identity","toCamelCase","input","output","keyCamelCase","map","slice","getStateKey","flatMap","substr","keys","k","makeStateKey","stateGet","stateKey","state","hasKey","cached","remove","isPlatformServer","onSerialize","statePost","TranslateService","events","EventEmitter","cache","_language","BehaviorSubject","language","asObservable","_languages","_lang","getTranslation","subscribe","getValue","find","take","labels","emit","getTranslate","defaultValue","shift","parseTranslate","missingTranslate","parseParams","missingHandler","replacer","use","setDefaultLang","addLangs","getBrowserLang","RouteService","translateService","route","router","segment","pageParams$","currentMarket","setLanguages","subscribeToRouter","getPageParams","queryParams","distinctUntilChanged","switchMap","parsed","forEach","serializeParams","serialized","serialize","base64","Buffer","from","_a","object","getId","snapshot","paramMap","getSlug","toRoute","data","market","marketIndex","splice","langIndex","toSlug","filter","datas","toParams","toData","setLanguage","silent","replaceState","navigate","event","NavigationStart","lang_1","detectLanguage","acceptLanguage","detectedLanguage","regexp","performance","time","process","hrtime","start","startTime","end","endTime","ActivatedRoute","Router","HttpStatusCodeService","statusCode","redirectUrl","setStatusCode","getStatusCode","getRedirectUrl","HttpResponseInterceptor","statusCodeService","_router","_routeService","routeService","intercept","handle","catchError","throwError","JsonFormatterComponent","ngOnChanges","isObject","elementRef","removeChild","require","render","appendChild","encapsulation","ViewEncapsulation","Emulated","ViewChild","LabelService","collectedKeys","labels$","emitter","parseLabel","missingLabel","getKey","enumerable","writable","items","label","register","collectKeys","collect","LabelDirective","labelService","innerHTML","labelParams","takeUntil","CustomAsyncPipe","changeDetector","subject","subscription","cachedValue","observableToValue","dispose","markForCheck","WrappedValue","wrap","_observableToValue","pure","ChangeDetectorRef","LabelPipe","asyncPipe","LoggerComponent","EventDispatcherService","observe","IdentityService","getList","getDetailByIdNo404","identities","getDetailById","add","update","EntityService","getDetailByName","MenuService","CORE_MODULES","LazyModuleDirective","modules","loader","load","lazyModule","then","moduleFactory","moduleRef","rootComponentType","factory","componentFactoryResolver","resolveComponentFactory","createComponent","destroy","NgModuleFactoryLoader","OnceService","zone","uid","script","callback","Event","callbackName_1","callback$","createElement","Promise","resolve","reject","async","fromEvent","scripts","getElementsByTagName","parentNode","insertBefore","nextSibling","src","NgZone","AssetPipe","unshift","Default","Gallery","Share","Image","ImageUrlPipe","images","queryString","imageType","ImageType","image","ImagePipe","PublicPipe","RoutePipe","SlugService","slugs$","item","getSlugs","dictionary","mnemonic","slug","SlugAsyncPipe","slugService","routePipe","slugs","SlugPipe","TranslateDirective","translate","translateParams","TranslatePipe","ref","SafeStylePipe","sanitizer","style","bypassSecurityTrustStyle","DomSanitizer","SafeUrlPipe","bypassSecurityTrustResourceUrl","TrustPipe","bypassSecurityTrustHtml","services","components","directives","pipes","validators","CoreModule","parentModule","forRoot","ngModule","providers","provide","useValue","NgModule","imports","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","HTTP_INTERCEPTORS","useClass","multi","SystemJsNgModuleLoader","declarations","exports","Optional","SkipSelf","Label","Document","DocumentIndex","DocumentService","getDetailBySlug","Entity","Feature","readmore","Identity","MenuItem","Taxonomy","Translate"],"mappings":"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","sourcesContent":["import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nconst TIMEOUT = 5 * 60 * 1000; // five minutes\n\n/*\nexport class StorageEvent extends Event {}\n\nexport class CookieStorageEvent extends StorageEvent { }\n\nexport class SessionStorageEvent extends StorageEvent { }\n\nexport class LocalStorageEvent extends StorageEvent { }\n*/\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class StorageService {\n\tpublic delete(name: string): void { }\n\tpublic exist(name: string): boolean { return false; }\n\tpublic get(name: string): any { return null; }\n\tpublic set(name: string, value: any, days?: number): void { }\n\tpublic on(): Observable<any> { return of(null); }\n\tpublic tryGet(): StorageService {\n\t\t// console.log('no StorageService available...');\n\t\treturn this;\n\t}\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CookieStorageService implements StorageService {\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate storageService: StorageService,\n\t) { }\n\n\tpublic tryGet(): StorageService {\n\t\tif (this.isSupported()) {\n\t\t\t// console.log('CookieStorageService.supported');\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn this.storageService.tryGet();\n\t\t}\n\t}\n\n\tpublic delete(name: string): void {\n\t\tthis.setter(name, '', -1);\n\t}\n\n\tpublic exist(name: string): boolean {\n\t\treturn document.cookie.indexOf(';' + name + '=') !== -1 || document.cookie.indexOf(name + '=') === 0;\n\t}\n\n\tpublic get(name: string): any {\n\t\tconst cookieName = name + '=';\n\t\tconst ca = document.cookie.split(';');\n\t\tfor (let i = 0; i < ca.length; i++) {\n\t\t\tlet c = ca[i];\n\t\t\twhile (c.charAt(0) === ' ') {\n\t\t\t\tc = c.substring(1, c.length);\n\t\t\t}\n\t\t\tif (c.indexOf(cookieName) === 0) {\n\t\t\t\tconst value = c.substring(cookieName.length, c.length);\n\t\t\t\tlet model = null;\n\t\t\t\ttry {\n\t\t\t\t\tmodel = JSON.parse(decodeURIComponent(atob(value)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.log('Cookie.get.error parsing', name, e);\n\t\t\t\t}\n\t\t\t\treturn model;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic set(name: string, value: any, days?: number) {\n\t\ttry {\n\t\t\tlet cache = [];\n\t\t\tconst json = JSON.stringify(value, function (key, value) {\n\t\t\t\tif (key === 'pool') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (typeof value === 'object' && value !== null) {\n\t\t\t\t\tif (cache.indexOf(value) !== -1) {\n\t\t\t\t\t\t// throw (new Error('circular reference found, discard key'));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcache.push(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t\tcache = null;\n\t\t\tthis.setter(name, btoa(encodeURIComponent(json)), days);\n\t\t} catch (e) {\n\t\t\tconsole.log('CookieSet.error serializing', name, value, e);\n\t\t}\n\t}\n\n\tpublic on(): Observable<any> {\n\t\t// todo\n\t\tconst interval: number = 1000, timeout: number = TIMEOUT;\n\t\tlet i, elapsed: number = 0;\n\t\tfunction checkCookie() {\n\t\t\tif (elapsed > timeout) {\n\t\t\t\t// promise.reject('timeout');\n\t\t\t} else {\n\t\t\t\tconst c: any = this.get(name);\n\t\t\t\tif (c) {\n\t\t\t\t\t// promise.resolve(c);\n\t\t\t\t} else {\n\t\t\t\t\telapsed += interval;\n\t\t\t\t\ti = setTimeout(checkCookie, interval);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcheckCookie();\n\t\treturn of(null);\n\t}\n\n\tprivate setter(name: string, value: any, days?: number) {\n\t\tlet expires;\n\t\tif (days) {\n\t\t\tconst date = new Date();\n\t\t\tdate.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n\t\t\texpires = '; expires=' + date.toUTCString();\n\t\t} else {\n\t\t\texpires = '';\n\t\t}\n\t\tdocument.cookie = name + '=' + value + expires + '; path=/';\n\t}\n\n\tprivate isSupported(): boolean {\n\t\treturn isPlatformBrowser(this.platformId);\n\t}\n\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SessionStorageService implements StorageService {\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate cookieStorageService: CookieStorageService,\n\t) { }\n\n\tpublic tryGet(): StorageService {\n\t\tif (this.isSupported()) {\n\t\t\t// console.log('SessionStorageService.supported');\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn this.cookieStorageService.tryGet();\n\t\t}\n\t}\n\n\tpublic delete(name: string): void {\n\t\twindow.sessionStorage.removeItem(name);\n\t}\n\n\tpublic exist(name: string): boolean {\n\t\treturn window.sessionStorage[name] !== undefined;\n\t}\n\n\tpublic get(name: string): any {\n\t\tlet value = null;\n\t\tif (window.sessionStorage[name] !== undefined) {\n\t\t\ttry {\n\t\t\t\tvalue = JSON.parse(window.sessionStorage[name]);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log('SessionStorage.get.error parsing', name, e);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\tpublic on(): Observable<any> {\n\t\t/*\n\t\treturn $promise(function (promise) {\n\t\t\tconst timeout = TIMEOUT;\n\t\t\tlet i;\n\t\t\tfunction storageEvent(e) {\n\t\t\t\tif (i) {\n\t\t\t\t\tclearTimeout(i);\n\t\t\t\t}\n\t\t\t\tif (e.originalEvent.key === name) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet value = JSON.parse(e.originalEvent.newValue);\n\t\t\t\t\t\tpromise.resolve(value);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.log('SessionStorage.on.error parsing', name, error);\n\t\t\t\t\t\tpromise.reject('error parsing ' + name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// return fromEvent(window, 'storage');\n\t\t\tangular.element(window).on('storage', storageEvent);\n\t\t\ti = setTimeout(function () {\n\t\t\t\tpromise.reject('timeout');\n\t\t\t}, timeout);\n\t\t});\n\t\t*/\n\t\treturn of(null);\n\t}\n\n\tpublic set(name: string, value: any, days?: number): void {\n\t\ttry {\n\t\t\tlet cache = [];\n\t\t\tconst json = JSON.stringify(value, function (key, value) {\n\t\t\t\tif (key === 'pool') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (typeof value === 'object' && value !== null) {\n\t\t\t\t\tif (cache.indexOf(value) !== -1) {\n\t\t\t\t\t\t// throw (new Error('circular reference found, discard key'));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcache.push(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t\tcache = null;\n\t\t\twindow.sessionStorage.setItem(name, json);\n\t\t} catch (e) {\n\t\t\tconsole.log('SessionStorage.set.error serializing', name, value, e);\n\t\t}\n\t}\n\n\tprivate isSupported(): boolean {\n\t\tlet supported: boolean = false;\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\ttry {\n\t\t\t\tsupported = 'sessionStorage' in window && window.sessionStorage !== null;\n\t\t\t\tif (supported) {\n\t\t\t\t\twindow.sessionStorage.setItem('test', '1');\n\t\t\t\t\twindow.sessionStorage.removeItem('test');\n\t\t\t\t} else {\n\t\t\t\t\tsupported = false;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tsupported = false;\n\t\t\t}\n\t\t}\n\t\treturn supported;\n\t}\n\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LocalStorageService implements StorageService {\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate cookieStorageService: CookieStorageService,\n\t) { }\n\n\tpublic tryGet(): StorageService {\n\t\tif (this.isSupported()) {\n\t\t\t// console.log('LocalStorageService.supported');\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn this.cookieStorageService.tryGet();\n\t\t}\n\t}\n\n\tpublic delete(name: string): void {\n\t\twindow.localStorage.removeItem(name);\n\t}\n\n\tpublic exist(name: string): boolean {\n\t\treturn window.localStorage[name] !== undefined;\n\t}\n\n\tpublic get(name: string): any {\n\t\tlet value = null;\n\t\tif (window.localStorage[name] !== undefined) {\n\t\t\ttry {\n\t\t\t\tvalue = JSON.parse(window.localStorage[name]);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log('LocalStorage.get.error parsing', name, e);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\tpublic on(): Observable<any> {\n\t\t/*\n\t\treturn $promise(function (promise) {\n\t\t\tconst timeout = TIMEOUT;\n\t\t\tlet i;\n\t\t\tfunction storageEvent(e) {\n\t\t\t\tif (i) {\n\t\t\t\t\tclearTimeout(i);\n\t\t\t\t}\n\t\t\t\tif (e.originalEvent.key === name) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet value = JSON.parse(e.originalEvent.newValue);\n\t\t\t\t\t\tpromise.resolve(value);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.log('LocalStorage.on.error parsing', name, error);\n\t\t\t\t\t\tpromise.reject('error parsing ' + name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// return fromEvent(window, 'storage');\n\t\t\tangular.element(window).on('storage', storageEvent);\n\t\t\ti = setTimeout(function () {\n\t\t\t\tpromise.reject('timeout');\n\t\t\t}, timeout);\n\t\t});\n\t\t*/\n\t\treturn of(null);\n\t}\n\n\tpublic set(name: string, value: any, days?: number): void {\n\t\ttry {\n\t\t\tlet cache = [];\n\t\t\tconst json = JSON.stringify(value, function (key, value) {\n\t\t\t\tif (key === 'pool') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (typeof value === 'object' && value !== null) {\n\t\t\t\t\tif (cache.indexOf(value) !== -1) {\n\t\t\t\t\t\t// throw (new Error('circular reference found, discard key'));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcache.push(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t\tcache = null;\n\t\t\twindow.localStorage.setItem(name, json);\n\t\t} catch (e) {\n\t\t\tconsole.log('LocalStorage.set.error serializing', name, value, e);\n\t\t}\n\t}\n\n\tprivate isSupported(): boolean {\n\t\tlet supported: boolean = false;\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\ttry {\n\t\t\t\tsupported = 'localStorage' in window && window.localStorage !== null;\n\t\t\t\tif (supported) {\n\t\t\t\t\twindow.localStorage.setItem('test', '1');\n\t\t\t\t\twindow.localStorage.removeItem('test');\n\t\t\t\t} else {\n\t\t\t\t\tsupported = false;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tsupported = false;\n\t\t\t}\n\t\t}\n\t\treturn supported;\n\t}\n\n}\n","import { HttpRequest } from '@angular/common/http';\nimport { Inject, Injectable, Injector, PLATFORM_ID } from '@angular/core';\nimport { LocalStorageService } from '../storage/storage.service';\n\nexport enum AuthStrategy {\n\tBearer = 0,\n\tCookie = 1,\n}\n\nexport class AuthToken {\n\tconstructor(\n\t\tpublic accessToken: string,\n\t\tpublic expiresIn: number = 0\n\t) { }\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthService {\n\n\tprivate cachedRequests: Array<HttpRequest<any>> = [];\n\tprivate paths: string[] = [];\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate injector: Injector,\n\t\tprivate localStorageService: LocalStorageService,\n\t) { }\n\n\tsetToken(authToken: AuthToken): void {\n\t\tthis.localStorageService.set('authToken', authToken);\n\t\tthis.retryFailedRequests();\n\t}\n\n\tgetToken(): AuthToken {\n\t\treturn this.localStorageService.get('authToken') as AuthToken;\n\t}\n\n\tgetFakeToken(): AuthToken {\n\t\treturn new AuthToken('fakeToken');\n\t}\n\n\tisValid(authToken: AuthToken): boolean {\n\t\t// return a boolean reflecting whether or not the token is expired\n\t\treturn authToken && (authToken.expiresIn > Date.now() || authToken.expiresIn === 0);\n\t}\n\n\tisAuthenticated(): boolean {\n\t\tconst authToken = this.getToken();\n\t\treturn this.isValid(authToken);\n\t}\n\n\tcollectFailedRequest(request): void {\n\t\tthis.cachedRequests.push(request);\n\t}\n\n\tretryFailedRequests(): void {\n\t\t// this method can be called after the token is refreshed\n\t\t// console.log('AuthService.retryFailedRequests');\n\t\t// retry the requests.\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\nimport { AuthStrategy } from '../auth/auth.service';\n\nexport class Language {\n\tid?: number;\n\tname?: string;\n\tlang?: string;\n}\n\nexport class CoreTransitionConfig {\n\tappId: string;\n\n\tconstructor(options?: CoreTransitionConfig) {\n\t\t// console.log('CoreTransitionConfig', options);\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t}\n}\n\nexport class CoreConfig {\n\tassets?: string = '';\n\tauthStrategy?: AuthStrategy = AuthStrategy.Cookie;\n\tdefaultLanguage?: string = 'it';\n\tdefaultMarket?: string = 'it';\n\tlanguages?: Language[] = [{ id: 1, name: 'Italiano', lang: 'it' }];\n\torigin?: string = '';\n\tproduction?: boolean = false;\n\tpublic?: string = '';\n\ttransition?: CoreTransitionConfig;\n\turlStrategy?: string = '';\n\tuseLang?: boolean = false;\n\tuseMarket?: boolean = false;\n\tuseServiceWorker?: boolean;\n\trouting?: any; // ExtraOptions\n\n\tconstructor(options?: CoreConfig) {\n\t\t// console.log('CoreConfig', options);\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t\tthis.transition = new CoreTransitionConfig(options.transition);\n\t\t} else {\n\t\t\tthis.transition = new CoreTransitionConfig();\n\t\t}\n\t}\n}\n\nexport const CORE_CONFIG = new InjectionToken<CoreConfig>('core.config');\n","\nimport { Inject, Injectable } from '@angular/core';\nimport { CoreConfig, CORE_CONFIG } from './core.config';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CoreService {\n\n\tpublic options: CoreConfig;\n\n\tconstructor(\n\t\t@Inject(CORE_CONFIG) options: CoreConfig\n\t) {\n\t\t// console.log('CoreService', options);\n\t\toptions = options || {};\n\t\t// options.defaultPage = (options.defaultPage || PageNotFoundComponent) as Type<PageComponent>;\n\t\t// options.notFoundPage = (options.notFoundPage || PageNotFoundComponent) as Type<PageComponent>;\n\t\tthis.options = new CoreConfig(options);\n\t}\n\n}\n","import { AfterContentChecked, Directive, ElementRef, Input, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n\tselector: '[default]',\n})\nexport class DefaultContentDirective implements AfterContentChecked {\n\n\t@Input() default: TemplateRef<any>;\n\tprivate element: HTMLElement;\n\tprivate hasContent = true;\n\n\tconstructor(\n\t\telement: ElementRef,\n\t\tprivate container: ViewContainerRef,\n\t\tprivate renderer: Renderer2) {\n\t\tthis.element = element.nativeElement;\n\t}\n\n\tngAfterContentChecked(): void {\n\t\tlet hasContent = false;\n\t\tconsole.log('DefaultContentDirective', this.element.childNodes);\n\t\tfor (let i = this.element.childNodes.length - 1; i >= 0; --i) {\n\t\t\tconst node = this.element.childNodes[i];\n\t\t\tif (node.nodeType === 1 || node.nodeType === 3) {\n\t\t\t\thasContent = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (hasContent !== this.hasContent) {\n\t\t\tthis.hasContent = hasContent;\n\t\t\tif (hasContent) {\n\t\t\t\t// this.renderer.removeClass(this.element, 'is-empty');\n\t\t\t\tthis.container.clear();\n\t\t\t} else {\n\t\t\t\t// this.renderer.addClass(this.element, 'is-empty');\n\t\t\t\tthis.container.createEmbeddedView(this.default);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'core-module',\n\ttemplate: `<span class=\"core-module\">core {{version}}</span>`,\n\tstyles: []\n})\nexport class CoreModuleComponent implements OnInit {\n\n\tversion: string = '0.0.3';\n\n\tconstructor() { }\n\n\tngOnInit() {\n\t}\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nimport { Component, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n\ttemplate: ''\n})\nexport class DisposableComponent implements OnDestroy {\n\n\tprotected unsubscribe: any = new Subject();\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe.next();\n\t\tthis.unsubscribe.complete();\n\t\t// console.log('DisposableComponent.ngOnDestroy', this);\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'highlight',\n\t// pure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class HighlightPipe implements PipeTransform {\n\n\ttransform(text: string, query: string): string {\n\t\tif (!query) {\n\t\t\treturn text;\n\t\t}\n\t\ttext = this.encodeHTML(text);\n\t\tquery = this.encodeHTML(query);\n\t\tconst regExp = new RegExp('&[^;]+;|' + this.escapeRegexChars(query), 'gi');\n\t\treturn text.replace(regExp, function (match) {\n\t\t\treturn match.toLowerCase() === query.toLowerCase() ? '<strong>' + match + '</strong>' : match;\n\t\t});\n\t}\n\n\tescapeRegexChars(text: string) {\n\t\treturn text.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n\t}\n\n\tsafeToString(text: string) {\n\t\treturn text === undefined || text === null ? '' : text.toString().trim();\n\t}\n\n\tencodeHTML(text: string) {\n\t\treturn this.safeToString(text)\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;');\n\t}\n\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CoreService } from '../config/core.service';\n\nexport class LoggerError extends HttpErrorResponse {\n\tbody?: any;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class Logger {\n\n\thttpError: LoggerError;\n\tlogs: string[] = [];\n\n\tconstructor(\n\t\tprivate coreService: CoreService,\n\t) {\n\t\t//\n\t}\n\n\trequest(...args: any[]) {\n\t\tif (!this.coreService.options.production) {\n\t\t\tconst s = args.join(', ');\n\t\t\tthis.logs.push(s);\n\t\t\t// console.log.apply(this, ['%c %s', 'background: #dddddd; color: #111'].concat(args));\n\t\t}\n\t}\n\n\tlog(...args: any[]) {\n\t\tif (!this.coreService.options.production) {\n\t\t\tconst s = args.join(', ');\n\t\t\tthis.logs.push(s);\n\t\t\tconsole.log.apply(this, ['%c%s', 'background: #1976d2; color: #fff; border-radius: 3px; padding: 4px 8px; margin-bottom: 4px;'].concat(args));\n\t\t}\n\t}\n\n\twarn(...args: any[]) {\n\t\tif (!this.coreService.options.production) {\n\t\t\tconst s = args.join(', ');\n\t\t\tthis.logs.push(s);\n\t\t\tconsole.log.apply(this, ['%c%s', 'background: #ff5500; color: #fff'].concat(args));\n\t\t}\n\t}\n\n\terror(...args: any[]) {\n\t\tif (!this.coreService.options.production) {\n\t\t\tconst s = args.join(', ');\n\t\t\tthis.logs.push(s);\n\t\t\tconsole.error.apply(console, args);\n\t\t}\n\t}\n\n\thttp(error: HttpErrorResponse) {\n\t\tthis.httpError = error;\n\t\tif (!this.coreService.options.production) {\n\t\t\tthis.logs.push(error.message);\n\t\t}\n\t\tconsole.warn('Logger.http.error', error.status, error.statusText, error.url);\n\t}\n\n\tclear() {\n\t\tthis.httpError = null;\n\t\tthis.logs = [];\n\t}\n}\n","\nimport { Location } from '@angular/common';\nimport { Injectable, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'segment',\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SegmentPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate location: Location\n\t) { }\n\n\ttransform(segments: any[] | string): any[] {\n\t\tsegments = segments != null ? (Array.isArray(segments) ? segments : segments.split('/')) : [];\n\t\tlet path: string = segments.join('/');\n\t\tpath = this.location.normalize(path);\n\t\tif (path.indexOf('/') !== 0) {\n\t\t\tpath = `/${path}`;\n\t\t}\n\t\tsegments = path.split('/');\n\t\treturn segments;\n\t}\n\n}\n","import { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable, Injector, PLATFORM_ID } from '@angular/core';\nimport { makeStateKey, StateKey, TransferState } from '@angular/platform-browser';\nimport { Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CoreConfig } from '../config/core.config';\nimport { CoreService } from '../config/core.service';\nimport { Logger } from '../logger/logger';\nimport { Identity } from '../models/identity';\n\nexport class ApiRequestOptions {\n\theaders?: HttpHeaders;\n\tparams?: HttpParams;\n\tconstructor(options?: {}) {\n\t\tthis.headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\t\tthis.params = options ? new HttpParams(options) : null;\n\t}\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ApiService<T extends Identity> {\n\n\tget collection(): string {\n\t\treturn '/api';\n\t}\n\n\tprivate _logger: Logger;\n\tget logger(): Logger {\n\t\tif (!this._logger) {\n\t\t\tthis._logger = this.injector.get(Logger);\n\t\t}\n\t\treturn this._logger;\n\t}\n\n\tprivate _http: HttpClient;\n\tget http(): HttpClient {\n\t\tif (!this._http) {\n\t\t\tthis._http = this.injector.get(HttpClient);\n\t\t}\n\t\treturn this._http;\n\t}\n\n\tprivate _state: TransferState;\n\tget state(): TransferState {\n\t\tif (!this._state) {\n\t\t\tthis._state = this.injector.get(TransferState);\n\t\t}\n\t\treturn this._state;\n\t}\n\n\tprivate _platformId: string;\n\tget platformId(): string {\n\t\tif (!this._platformId) {\n\t\t\tthis._platformId = this.injector.get<string>(PLATFORM_ID);\n\t\t}\n\t\treturn this._platformId;\n\t}\n\n\tprivate _config: CoreConfig;\n\tget config(): CoreConfig {\n\t\tif (!this._config) {\n\t\t\tthis._config = this.injector.get(CoreService).options;\n\t\t}\n\t\treturn this._config;\n\t}\n\n\tprivate _origin: string;\n\tget origin(): string {\n\t\tif (!this._origin) {\n\t\t\tthis._origin = this.config.origin;\n\t\t}\n\t\treturn this._origin;\n\t}\n\n\tget url(): string {\n\t\tlet base: string = this.origin;\n\t\tconst collection = this.collection.toLowerCase();\n\t\tif (collection.indexOf('http') === 0) {\n\t\t\tbase = '';\n\t\t}\n\t\treturn `${base}${collection}`;\n\t}\n\n\tconstructor(\n\t\tprotected injector: Injector\n\t) { }\n\n\tgetUrl(method: string = ''): string {\n\t\treturn `${this.url}${method}`;\n\t}\n\n\tget(first?: string | {}, second?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst params: {} = (typeof first === 'object' ? first : second);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\treturn this.http.get<T>(url, options).pipe(\n\t\t\ttap(x => this.logger.request(url)),\n\t\t);\n\t}\n\n\tpost(first: string | {}, second?: {}, third?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst model: {} = (typeof first === 'object' ? first : second);\n\t\tconst params: {} = (typeof second === 'object' ? second : third);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\treturn this.http.post<T>(url, model, options).pipe(\n\t\t\ttap(x => this.logger.request(url)),\n\t\t);\n\t}\n\n\tput(first: string | T, second?: T | {}, third?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst model: T = (typeof first === 'object' ? first : second) as T;\n\t\tconst params: {} = (typeof second === 'object' ? second : third);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\treturn this.http.put<T>(url, model, options).pipe(\n\t\t\ttap(x => this.logger.request(url)),\n\t\t);\n\t}\n\n\tpatch(first: string | T, second?: T | {}, third?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst model: T = (typeof first === 'object' ? first : second) as T;\n\t\tconst params: {} = (typeof second === 'object' ? second : third);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\treturn this.http.patch<T>(url, model, options).pipe(\n\t\t\ttap(x => this.logger.request(url)),\n\t\t);\n\t}\n\n\tdelete(first: string | T | number, second?: T | number | {}, third?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst identity: T | number = (typeof first !== 'string' ? first : second) as T | number;\n\t\tconst id = identity ? (typeof identity === 'number' ? identity : identity.id) : null;\n\t\tconst params: {} = (typeof second === 'object' ? second : third);\n\t\tconst url: string = id !== null ? this.getUrl(`${method}/${id}`) : this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\treturn this.http.delete<T[]>(url, options).pipe(\n\t\t\ttap(x => this.logger.request(url)),\n\t\t);\n\t}\n\n\ttoCamelCase(input: any): any {\n\t\tlet output, key, keyCamelCase, value;\n\t\tif (input instanceof Array) {\n\t\t\treturn input.map((value: any) => {\n\t\t\t\tif (typeof value === 'object') {\n\t\t\t\t\tvalue = this.toCamelCase(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t} else {\n\t\t\toutput = {};\n\t\t\tfor (key in input) {\n\t\t\t\tif (input.hasOwnProperty(key)) {\n\t\t\t\t\tkeyCamelCase = (key.charAt(0).toLowerCase() + key.slice(1) || key).toString();\n\t\t\t\t\tvalue = input[key];\n\t\t\t\t\tif (value instanceof Array || (value !== null && value.constructor === Object)) {\n\t\t\t\t\t\tvalue = this.toCamelCase(value);\n\t\t\t\t\t}\n\t\t\t\t\toutput[keyCamelCase] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// TRANSFER STATE\n\n\tgetStateKey(url: string, model: {}): StateKey<T> {\n\t\tconst flatMap = (s: string, x: any) => {\n\t\t\tif (typeof x === 'number') {\n\t\t\t\ts += x.toString();\n\t\t\t} else if (typeof x === 'string') {\n\t\t\t\ts += x.substr(0, 10);\n\t\t\t} else if (x && typeof x === 'object') {\n\t\t\t\ts += '_' + Object.keys(x).map(k => k + '_' + flatMap('', x[k])).join('_');\n\t\t\t}\n\t\t\treturn s;\n\t\t};\n\t\turl = flatMap(url, model);\n\t\t// console.log('ApiService.getStateKey.url', url);\n\t\tconst key: string = url.replace(/(\\W)/gm, '_');\n\t\t// this.logger.log('ApiService.getStateKey.key', key);\n\t\treturn makeStateKey(key);\n\t}\n\n\tstateGet(first?: string | {}, second?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst params: {} = (typeof first === 'object' ? first : second);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\tconst stateKey = this.getStateKey(url, params);\n\t\tif (isPlatformBrowser(this.platformId) && this.state.hasKey(stateKey)) {\n\t\t\tconst cached = this.state.get(stateKey, null);\n\t\t\tthis.state.remove(stateKey);\n\t\t\treturn of(cached);\n\t\t} else {\n\t\t\treturn this.http.get<T>(url, options).pipe(\n\t\t\t\ttap(x => {\n\t\t\t\t\tif (isPlatformServer(this.platformId)) {\n\t\t\t\t\t\tthis.state.onSerialize(stateKey, () => x);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n\n\tstatePost(first: string | {}, second?: {}, third?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst model: {} = (typeof first === 'object' ? first : second);\n\t\tconst params: {} = (typeof second === 'object' ? second : third);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\tconst stateKey = this.getStateKey(url, model);\n\t\tif (isPlatformBrowser(this.platformId) && this.state.hasKey(stateKey)) {\n\t\t\tconst cached = this.state.get(stateKey, null);\n\t\t\tthis.state.remove(stateKey);\n\t\t\treturn of(cached);\n\t\t} else {\n\t\t\treturn this.http.post<T>(url, model, options).pipe(\n\t\t\t\ttap(x => {\n\t\t\t\t\tif (isPlatformServer(this.platformId)) {\n\t\t\t\t\t\tthis.state.onSerialize(stateKey, () => x);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Injectable, Injector } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { ApiService } from '../api/api.service';\nimport { Translate } from './translate';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class TranslateService<T extends Translate> extends ApiService<T> {\n\n\tget collection(): string {\n\t\treturn '/api/translate';\n\t}\n\n\t// private cache: { [key: string]: string; } = {};\n\tpublic events: EventEmitter<any> = new EventEmitter();\n\tpublic missingHandler?: Function;\n\tpublic cache: {} = {};\n\n\tprivate _language: any = new BehaviorSubject({});\n\tpublic readonly language: Observable<any> = this._language.asObservable();\n\tprivate _languages: BehaviorSubject<Array<any>> = new BehaviorSubject([]);\n\tpublic readonly languages: Observable<any[]> = this._languages.asObservable();\n\n\tprivate _lang: string;\n\tpublic get lang(): string {\n\t\treturn this._lang;\n\t}\n\tpublic set lang(lang: string) {\n\t\tif (lang !== this._lang) {\n\t\t\tthis._lang = lang;\n\t\t\tconst language = this._languages.getValue().find(x => x.lang === lang);\n\t\t\tthis._language.next(language);\n\t\t}\n\t}\n\n\tconstructor(\n\t\tprotected injector: Injector\n\t) {\n\t\tsuper(injector);\n\t\tthis._languages.next(this.config.languages);\n\t\tthis._lang = this.config.defaultLanguage;\n\t\tthis.getTranslation(this.lang).subscribe(x => {\n\t\t\t// console.log(x);\n\t\t});\n\t}\n\n\tpublic getTranslation(lang: string): Observable<{}> {\n\t\tif (!lang || !lang.trim()) {\n\t\t\treturn of(null);\n\t\t}\n\t\tthis.lang = lang;\n\t\tif (this.cache[lang]) {\n\t\t\treturn of(this.cache[lang]);\n\t\t} else {\n\t\t\treturn this.get({ lang }).pipe(\n\t\t\t\ttake(1),\n\t\t\t\tmap((x: Translate[]) => {\n\t\t\t\t\tif (x[0]) {\n\t\t\t\t\t\tconst labels = x[0].labels;\n\t\t\t\t\t\tthis.cache[lang] = labels;\n\t\t\t\t\t\tthis.events.emit(labels);\n\t\t\t\t\t\treturn labels;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn of(null);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\t/*\n\t\t\t\ttap(x => {\n\t\t\t\t\t// this.logger.log(`found label matching \"${lang}\"`);\n\t\t\t\t})\n\t\t\t\t*/\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic getTranslate(key: string, defaultValue?: string, params?: any): string | any {\n\t\tlet value: string | null = null;\n\t\tlet labels: any = this.cache[this.lang];\n\t\tif (labels) {\n\t\t\tconst keys: string[] = key.split('.');\n\t\t\tlet k = keys.shift();\n\t\t\twhile (keys.length > 0 && labels[k]) {\n\t\t\t\tlabels = labels[k];\n\t\t\t\tk = keys.shift();\n\t\t\t}\n\t\t\tvalue = labels[k] || `{${k}}`;\n\t\t}\n\t\treturn this.parseTranslate(value, key, defaultValue, params);\n\t}\n\n\tprivate parseTranslate(value: string | null, key: string, defaultValue?: string, params?: any): string | any {\n\t\tif (value == null) {\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\tif (value == null) {\n\t\t\treturn this.missingTranslate(key);\n\t\t} else if (params) {\n\t\t\treturn this.parseParams(value, params);\n\t\t}\n\t\treturn value;\n\t}\n\n\tprivate missingTranslate(key: string): string {\n\t\tconsole.log('missingTranslate', key, this.missingHandler);\n\t\tif (this.missingHandler) {\n\t\t\treturn typeof this.missingHandler === 'function' ?\n\t\t\t\tthis.missingHandler(key) :\n\t\t\t\tthis.missingHandler;\n\t\t}\n\t\tconsole.log('missingTranslate', key);\n\t\treturn key;\n\t}\n\n\tprivate parseParams(value: string, params: any): string {\n\t\tconst TEMPLATE_REGEXP: RegExp = /@\\s?([^{}\\s]*)\\s?/g; // /{{\\s?([^{}\\s]*)\\s?}}/g;\n\t\treturn value.replace(TEMPLATE_REGEXP, (text: string, key: string) => {\n\t\t\tconst replacer: string = params[key] as string;\n\t\t\treturn typeof replacer !== 'undefined' ? replacer : text;\n\t\t});\n\t}\n\n\tpublic use(lang: string) {\n\n\t}\n\n\tpublic setDefaultLang(lang: string) {\n\n\t}\n\n\tpublic addLangs(lang: string[]) {\n\n\t}\n\n\tpublic getBrowserLang(): string {\n\t\treturn 'it';\n\t}\n}\n\n// !!!\nexport function CustomTranslateLoader(injector: Injector) {\n\treturn new TranslateService(injector);\n}\n","\n\nimport { isPlatformBrowser, isPlatformServer, Location } from '@angular/common';\nimport { Inject, Injectable, Injector, PLATFORM_ID } from '@angular/core';\nimport { ActivatedRoute, NavigationStart, Params, Router } from '@angular/router';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, switchMap } from 'rxjs/operators';\nimport { CoreService } from '../config/core.service';\nimport { SegmentPipe } from '../pipes/segment.pipe';\nimport { Translate } from '../translate/translate';\nimport { TranslateService } from '../translate/translate.service';\n\ndeclare const Buffer;\ndeclare const process;\n\n// @dynamic\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class RouteService {\n\n\tstatic startTime: number;\n\tstatic endTime: number;\n\tprivate urlStrategy: string;\n\tprivate _language: any = new BehaviorSubject({});\n\tpublic readonly language: Observable<any> = this._language.asObservable();\n\tprivate _languages: BehaviorSubject<Array<any>> = new BehaviorSubject([]);\n\tpublic readonly languages: Observable<any[]> = this._languages.asObservable();\n\tprivate _lang: string;\n\tprivate path: string;\n\tpublic params: Observable<Params>;\n\tpublic queryParams: Observable<Params>;\n\tpublic currentMarket: string;\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate coreService: CoreService,\n\t\tprivate injector: Injector,\n\t\tprivate translateService: TranslateService<Translate>,\n\t\tprivate location: Location,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate router: Router,\n\t\tprivate segment: SegmentPipe,\n\t) {\n\t\tthis.urlStrategy = this.coreService.options.urlStrategy;\n\t\tthis._languages.next(this.coreService.options.languages);\n\t\tthis.currentMarket = this.coreService.options.defaultMarket;\n\t\tthis.setLanguages();\n\t\tif (this.coreService.options.useLang || this.coreService.options.useMarket) {\n\t\t\tthis.subscribeToRouter();\n\t\t}\n\t}\n\n\tprivate get lang(): string {\n\t\treturn this._lang;\n\t}\n\n\tprivate set lang(lang: string) {\n\t\tif (lang !== this._lang) {\n\t\t\tthis._lang = lang;\n\t\t\tconst language = this._languages.getValue().find(x => x.lang === lang);\n\t\t\tthis._language.next(language);\n\t\t\tthis.translateService.use(lang);\n\t\t\t// console.log('RouteService.set lang', lang, this.coreService.options.useLang);\n\t\t\tif (this.coreService.options.useLang) {\n\t\t\t\tconst _lang: string = this._lang;\n\t\t\t\tlet path = this.location.path();\n\t\t\t\tif (path.indexOf(`/${_lang}`) === 0) {\n\t\t\t\t\tpath = path.replace(`/${_lang}`, `/${lang}`);\n\t\t\t\t} else if (path.indexOf(`/${lang}`) !== 0) {\n\t\t\t\t\tpath = `/${lang}` + path;\n\t\t\t\t}\n\t\t\t\tthis.path = path;\n\t\t\t\t// const langIndex = this.urlStrategy.split('/').indexOf(':lang');\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get currentLang(): string {\n\t\treturn this._lang;\n\t}\n\n\tpublic pageParams$: BehaviorSubject<Params> = new BehaviorSubject({});\n\tpublic getPageParams(): Observable<Params> {\n\t\t// console.log('RouteService.getPageParams', this.router.url);\n\t\treturn this.route.queryParams.pipe(\n\t\t\tdistinctUntilChanged(),\n\t\t\tswitchMap(params => {\n\t\t\t\t// console.log(params);\n\t\t\t\tconst parsed = this.parseParams(params);\n\t\t\t\tthis.pageParams$.next(parsed);\n\t\t\t\treturn of(parsed);\n\t\t\t}),\n\t\t\t// tap(params => console.log('RouteService.getPageParams', params)),\n\t\t);\n\t}\n\n\tpublic parseParams(params: any): any {\n\t\tconst parsed = {};\n\t\tObject.keys(params).forEach(k => parsed[k] = this.parse(params[k]));\n\t\t/*\n\t\tfor (const key in params) {\n\t\t\tif (typeof (params[key]) === 'string') {\n\t\t\t\tparsed[key] = this.parse(params[key]);\n\t\t\t} else {\n\t\t\t\tparsed[key] = params[key];\n\t\t\t}\n\t\t}\n\t\t*/\n\t\treturn parsed;\n\t}\n\n\tpublic serializeParams(params: any) {\n\t\tconst serialized = {};\n\t\tObject.keys(params).forEach(k => serialized[k] = this.serialize(params[k]));\n\t\treturn serialized;\n\t}\n\n\tpublic parse(base64) {\n\t\ttry {\n\t\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\t\treturn JSON.parse(window.atob(base64));\n\t\t\t} else {\n\t\t\t\treturn JSON.parse(Buffer.from(base64, 'base64').toString('ascii'));\n\t\t\t}\n\t\t} catch {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic serialize(object) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\treturn window.btoa(JSON.stringify(object));\n\t\t} else {\n\t\t\treturn Buffer.from(JSON.stringify(object), 'ascii').toString('base64');\n\t\t}\n\t}\n\n\tpublic getId(): number {\n\t\treturn +this.route.snapshot.paramMap.get('id');\n\t}\n\n\tpublic getSlug(): string {\n\t\treturn this.route.snapshot.paramMap.get('slug');\n\t}\n\n\tpublic toRoute(data: any[] | string): any[] {\n\t\tconst segments = this.segment.transform(data);\n\t\tif (this.coreService.options.useMarket) {\n\t\t\tconst market: string = this.currentMarket;\n\t\t\tconst marketIndex = this.urlStrategy.split('/').indexOf(':market');\n\t\t\tsegments.splice(marketIndex, 0, market);\n\t\t}\n\t\tif (this.coreService.options.useLang) {\n\t\t\tconst lang: string = this._lang;\n\t\t\tconst langIndex = this.urlStrategy.split('/').indexOf(':lang');\n\t\t\tsegments.splice(langIndex, 0, lang);\n\t\t}\n\t\t// console.log('RouteService.toRoute', segments);\n\t\treturn segments;\n\t}\n\n\tpublic toSlug(data: any[] | string): any[] {\n\t\tconst segments = this.segment.transform(data);\n\t\tlet paths = segments.filter(x => {\n\t\t\treturn typeof x === 'string';\n\t\t});\n\t\tconst datas = segments.filter(x => {\n\t\t\treturn typeof x !== 'string';\n\t\t});\n\t\tif (this.coreService.options.useMarket) {\n\t\t\tconst marketIndex = this.urlStrategy.split('/').indexOf(':market');\n\t\t\tif (paths.length > marketIndex) {\n\t\t\t\tpaths[marketIndex] = '*';\n\t\t\t}\n\t\t}\n\t\tif (this.coreService.options.useLang) {\n\t\t\tconst langIndex = this.urlStrategy.split('/').indexOf(':lang');\n\t\t\tif (paths.length > langIndex) {\n\t\t\t\tpaths[langIndex] = '*';\n\t\t\t}\n\t\t}\n\t\tpaths = paths.join('/').replace(/\\/\\*/gi, '').split('/');\n\t\t// console.log('RouteService.toSlug', data, paths);\n\t\treturn paths.concat(datas);\n\t}\n\n\tpublic toParams(data: any): any {\n\t\treturn {\n\t\t\tdata: window.btoa(JSON.stringify(data))\n\t\t};\n\t}\n\n\tpublic toData(params: any): any {\n\t\tif (params && params.data) {\n\t\t\treturn JSON.parse(window.atob(params.data));\n\t\t}\n\t}\n\n\t/*\n\tpublic getParams(): Observable<ComponentFactory<PageComponent>> {\n\t\treturn this.router.events.pipe(\n\t\t\tfilter(event => event instanceof ActivationEnd),\n\t\t\tmap(() => this.route),\n\t\t\tdistinctUntilChanged(),\n\t\t\tmap(route => route.firstChild),\n\t\t\tswitchMap(route => route.params),\n\t\t\tconcatMap(x => {\n\t\t\t\treturn of(this.toData(x));\n\t\t\t})\n\t\t);\n\t}\n\t*/\n\n\tpublic setLanguage(lang: string, silent?: boolean) {\n\t\tthis.lang = lang;\n\t\tif (this.coreService.options.useLang && this.path) {\n\t\t\t// console.log('RouteService.setLanguage', this.path, this._lang, lang, silent);\n\t\t\tif (silent) {\n\t\t\t\tthis.location.replaceState(this.path);\n\t\t\t} else {\n\t\t\t\tthis.router.navigate([this.path]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// PRIVATE METHODS\n\n\tprivate setLanguages() {\n\t\tthis.translateService.addLangs(this.coreService.options.languages ? this.coreService.options.languages.map(x => x.lang) : []);\n\t\tthis.translateService.setDefaultLang(this.coreService.options.defaultLanguage);\n\t\t// this.setLanguage(this.detectLanguage(), true);\n\t\tthis.setLanguage(this.coreService.options.defaultLanguage, true);\n\t\t/*\n\t\tthis.translateService.onLangChange.subscribe((e: LangChangeEvent) => {\n\t\t\t// console.log('RouteService.onLangChange', e);\n\t\t});\n\t\t*/\n\t}\n\n\tprivate subscribeToRouter() {\n\t\tthis.router.events.pipe(\n\t\t\tfilter(event => event instanceof NavigationStart)\n\t\t).subscribe((event: NavigationStart) => {\n\t\t\tconst location = this.location.normalize(event.url).split('/');\n\t\t\tif (this.coreService.options.useMarket) {\n\t\t\t\tconst marketIndex = this.urlStrategy.split('/').indexOf(':market');\n\t\t\t\tconst market = location[marketIndex];\n\t\t\t\tif (market !== this.currentMarket) {\n\t\t\t\t\tthis.currentMarket = market;\n\t\t\t\t\t// console.log('RouteService.setMarket', market, event.url);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.coreService.options.useLang) {\n\t\t\t\tconst langIndex = this.urlStrategy.split('/').indexOf(':lang');\n\t\t\t\tconst lang = location[langIndex];\n\t\t\t\tif (lang !== this._lang) {\n\t\t\t\t\tconst language = this._languages.getValue().find(x => x.lang === lang);\n\t\t\t\t\tthis._language.next(language);\n\t\t\t\t\tthis.translateService.use(lang);\n\t\t\t\t\t// console.log('RouteService.setLang', lang, this._lang, langIndex, location, event.url);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate detectLanguage(): string {\n\t\tlet acceptLanguage: string = null;\n\t\tif (isPlatformServer(this.platformId)) {\n\t\t\t/*\n\t\t\t// server side express engine\n\t\t\tapp.engine('html',  (_, options, callback) => {\n\t\t\t\tlet engine = ngExpressEngine({\n\t\t\t\t\tbootstrap: ServerAppModule,\n\t\t\t\t\tproviders: [ { provide: 'request', useFactory: () => options.req } ]\n\t\t\t\t});\n\t\t\t\tengine(_, options, callback)\n\t\t\t})\n\t\t\t*/\n\t\t\tconst request = this.injector.get('request');\n\t\t\tif (request) {\n\t\t\t\tacceptLanguage = request.headers['accept-language'];\n\t\t\t\tconst languages: string[] = acceptLanguage.match(/[a-zA-Z\\-]{2,10}/g) || [];\n\t\t\t\tif (languages.length > 0) {\n\t\t\t\t\tacceptLanguage = languages[0].split('-')[0];\n\t\t\t\t} else {\n\t\t\t\t\tacceptLanguage = null;\n\t\t\t\t}\n\t\t\t\t// console.log('request', request, 'acceptLanguage', acceptLanguage);\n\t\t\t}\n\t\t\t// console.log('RouteService.isPlatformServer', this.platformId, acceptLanguage);\n\t\t} else if (isPlatformBrowser(this.platformId)) {\n\t\t\tacceptLanguage = this.translateService.getBrowserLang();\n\t\t\t// console.log('RouteService.isPlatformBrowser', this.platformId, acceptLanguage);\n\t\t}\n\t\tlet detectedLanguage: string = this.coreService.options.defaultLanguage;\n\t\tconst regexp: RegExp = new RegExp(`(${this.coreService.options.languages ? this.coreService.options.languages.map(x => x.lang).join('|') : ''})`, 'gi');\n\t\tconst match = (acceptLanguage || '').match(regexp);\n\t\tdetectedLanguage = match ? match[0] : detectedLanguage;\n\t\t// console.log('RouteService.detectLanguage', detectedLanguage);\n\t\treturn detectedLanguage;\n\t}\n\n\tpublic getTime() {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\treturn (performance || Date).now();\n\t\t} else {\n\t\t\tconst time = process.hrtime();\n\t\t\treturn (time[0] * 1e9 + time[1]) / 1e6;\n\t\t}\n\t}\n\n\tpublic start() {\n\t\tRouteService.startTime = this.getTime();\n\t}\n\n\tpublic end() {\n\t\tRouteService.endTime = this.getTime();\n\t\tconsole.log('RouteService.end', RouteService.endTime - RouteService.startTime);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class HttpStatusCodeService {\n\n\tprivate statusCode: number;\n\tprivate redirectUrl: string;\n\n\tconstructor() {\n\t\tthis.statusCode = 200;\n\t\tthis.redirectUrl = null;\n\t}\n\n\tpublic setStatusCode(statusCode: number, redirectUrl: string = null) {\n\t\tthis.statusCode = statusCode;\n\t\tthis.redirectUrl = redirectUrl;\n\t}\n\n\tpublic getStatusCode(): number {\n\t\treturn (this.statusCode === 309 ? 301 : this.statusCode);\n\t}\n\n\tpublic getRedirectUrl(): string {\n\t\treturn this.redirectUrl;\n\t}\n\n}\n","\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Logger } from '../logger/logger';\nimport { RouteService } from '../route/route.service';\nimport { HttpStatusCodeService } from './http-status-code.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class HttpResponseInterceptor implements HttpInterceptor {\n\n\tprivate _logger: Logger;\n\tget logger() {\n\t\tif (!this._logger) {\n\t\t\tthis._logger = this.injector.get(Logger);\n\t\t}\n\t\treturn this._logger;\n\t}\n\n\tprivate _router: Router;\n\tget router() {\n\t\tif (!this._router) {\n\t\t\tthis._router = this.injector.get(Router);\n\t\t}\n\t\treturn this._router;\n\t}\n\n\tprivate _routeService: RouteService;\n\tget routeService() {\n\t\tif (!this._routeService) {\n\t\t\tthis._routeService = this.injector.get(RouteService);\n\t\t}\n\t\treturn this.routeService;\n\t}\n\n\tconstructor(\n\t\tprivate injector: Injector,\n\t\tprivate statusCodeService: HttpStatusCodeService,\n\t) { }\n\n\tintercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\t// injecting request\n\t\t// parsing response\n\t\treturn next.handle(request).pipe(\n\t\t\ttap((event: HttpEvent<any>) => {\n\t\t\t\t// console.log('HttpResponseInterceptor', event);\n\t\t\t\tthis.logger.httpError = null;\n\t\t\t\t// this.logger.log(event);\n\t\t\t\t/*\n\t\t\t\tif (event instanceof HttpResponse) {\n\t\t\t\t\t// console.log('event instanceof HttpResponse');\n\t\t\t\t\t// do stuff with response if you want\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t}),\n\t\t\tcatchError((error: any) => {\n\t\t\t\t// console.warn('HttpResponseInterceptor', error);\n\t\t\t\tif (error instanceof HttpErrorResponse) {\n\t\t\t\t\t// this.statusCodeService.setStatusCode(error.status);\n\t\t\t\t\tswitch (error.status) {\n\t\t\t\t\t\tcase 401:\n\t\t\t\t\t\t\t// unauthorized\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 404:\n\t\t\t\t\t\t\t// not found\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 409:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 410:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthis.logger.http(error);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn throwError(error);\n\t\t\t})\n\t\t);\n\t}\n\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { Component, ElementRef, Inject, Input, OnChanges, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isArray, isObject } from 'util';\n// import JSONFormatter from 'json-formatter-js';\n\n@Component({\n\tselector: 'json-formatter',\n\ttemplate: `<div #jsonFormatter></div>`,\n\tstyleUrls: ['./json-formatter.component.scss'],\n\tencapsulation: ViewEncapsulation.Emulated,\n})\nexport class JsonFormatterComponent implements OnChanges {\n\t@ViewChild(`jsonFormatter`) input: ElementRef;\n\n\t@Input() json: Array<any> | Object | any;\n\n\telementRef: ElementRef;\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t) { }\n\n\tngOnChanges() {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tif (!isObject(this.json) && !isArray(this.json)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// console.log('JsonFormatterComponent', this.json);\n\t\t\tif (this.elementRef) {\n\t\t\t\tthis.input.nativeElement.removeChild(this.elementRef.nativeElement);\n\t\t\t}\n\t\t\tconst JSONFormatter = require('json-formatter-js').default;\n\t\t\tconst formatter = new JSONFormatter(this.json);\n\t\t\tconst elementRef = formatter.render();\n\t\t\tthis.input.nativeElement.appendChild(elementRef);\n\t\t\tthis.elementRef = new ElementRef(elementRef);\n\t\t}\n\t}\n}\n","import { EventEmitter, Injectable, Injector } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { catchError, filter, first, map, tap } from 'rxjs/operators';\nimport { ApiService } from '../api/api.service';\nimport { Label } from './label';\n\nexport class LabelKey {\n\tid?: string;\n\tvalue?: string;\n\tdefaultValue?: string;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LabelService<T extends Label> extends ApiService<T> {\n\n\tget collection(): string {\n\t\treturn '/api/label';\n\t}\n\n\t// !!! new async pipe\n\tprivate collectedKeys: { [key: string]: LabelKey; } = {};\n\t// private cache: { [key: string]: string; } = {};\n\n\tpublic missingHandler?: Function;\n\n\tpublic cache: {} = {};\n\tprivate labels$: Subject<{ [key: string]: string; }> = new Subject();\n\tprivate emitter: EventEmitter<any> = new EventEmitter();\n\n\tconstructor(\n\t\tprotected injector: Injector,\n\t) {\n\t\tsuper(injector);\n\t}\n\n\tprivate parseLabel(value: string | null, key: string, defaultValue?: string, params?: any): string | any {\n\t\tconsole.log('parseLabel', value, key, defaultValue, params);\n\t\tif (value == null) {\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\tif (value == null) {\n\t\t\treturn this.missingLabel(key);\n\t\t} else if (params) {\n\t\t\treturn this.parseParams(value, params);\n\t\t}\n\t\treturn value;\n\t}\n\n\tprivate missingLabel(key: string): string {\n\t\tconsole.log('missingLabel', key, this.missingHandler);\n\t\tif (this.missingHandler) {\n\t\t\treturn typeof this.missingHandler === 'function' ?\n\t\t\t\tthis.missingHandler(key) :\n\t\t\t\tthis.missingHandler;\n\t\t}\n\t\tconsole.log('missingLabel', key);\n\t\treturn key;\n\t}\n\n\tprivate parseParams(value: string, params: any): string {\n\t\tconst TEMPLATE_REGEXP: RegExp = /@\\s?([^{}\\s]*)\\s?/g; // /{{\\s?([^{}\\s]*)\\s?}}/g;\n\t\treturn value.replace(TEMPLATE_REGEXP, (text: string, key: string) => {\n\t\t\tconst replacer: string = params[key] as string;\n\t\t\treturn typeof replacer !== 'undefined' ? replacer : text;\n\t\t});\n\t}\n\n\tgetKey(key: string, defaultValue?: string, params?: any): Observable<string> {\n\t\tif (this.cache.hasOwnProperty(key)) {\n\t\t\treturn of(this.cache[key]);\n\t\t} else {\n\t\t\tObject.defineProperty(this.collectedKeys, key, {\n\t\t\t\tvalue: { id: key, defaultValue: defaultValue },\n\t\t\t\tenumerable: true,\n\t\t\t\twritable: false,\n\t\t\t});\n\t\t\tthis.cache[key] = null;\n\t\t}\n\t\treturn this.labels$.pipe(\n\t\t\tmap(items => items[key] || null),\n\t\t\tfilter(label => label !== null),\n\t\t\t// tap(label => console.log('getKey', key, label)),\n\t\t\tmap(label => this.parseLabel(label, key, defaultValue, params)),\n\t\t);\n\t}\n\n\tregister(): Observable<any> {\n\t\treturn this.emitter.pipe(\n\t\t\t// throttleTime(500),\n\t\t\ttap(() => {\n\t\t\t\tthis.collectKeys().pipe(\n\t\t\t\t\tfirst(),\n\t\t\t\t).subscribe((keys) => {\n\t\t\t\t\t// console.log('LabelService.collected', keys);\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\t}\n\n\tcollect(): void {\n\t\tif (Object.keys(this.collectedKeys).length) {\n\t\t\tthis.emitter.emit();\n\t\t}\n\t}\n\n\tprivate collectKeys(): Observable<{ [key: string]: string; }> {\n\t\tconst keys = Object.keys(this.collectedKeys).map(x => this.collectedKeys[x]);\n\t\tthis.collectedKeys = {};\n\t\tif (keys.length) {\n\t\t\treturn this.statePost(keys).pipe(\n\t\t\t\tmap((keys: LabelKey[]) => {\n\t\t\t\t\t// console.log('LabelService.collectKeys', JSON.stringify(keys));\n\t\t\t\t\tconst items = {};\n\t\t\t\t\tkeys.forEach(x => items[x.id] = x.value || x.defaultValue || x.id);\n\t\t\t\t\treturn items;\n\t\t\t\t}),\n\t\t\t\ttap((items: { [key: string]: string; }) => {\n\t\t\t\t\tObject.assign(this.cache, items);\n\t\t\t\t\tthis.labels$.next(this.cache);\n\t\t\t\t\t// console.log('collectKeys', this.cache);\n\t\t\t\t}),\n\t\t\t\tcatchError(error => {\n\t\t\t\t\t// console.log('LabelService.collectKeys.error', error);\n\t\t\t\t\treturn of({});\n\t\t\t\t}),\n\t\t\t);\n\t\t\t/*\n\t\t\treturn this.post(`/api/i18n/labels`, keys).pipe(\n\t\t\t\tmap((keys: LabelKey[]) => {\n\t\t\t\t\tconst items = {};\n\t\t\t\t\tkeys.forEach(x => items[x.id] = x.value || x.defaultValue);\n\t\t\t\t\treturn items;\n\t\t\t\t}),\n\t\t\t\ttap((items: { [key: string]: string; }) => {\n\t\t\t\t\tObject.assign(this.cache, items);\n\t\t\t\t\tthis.labels$.next(this.cache);\n\t\t\t\t\t// console.log('collectKeys', this.cache);\n\t\t\t\t}),\n\t\t\t);\n\t\t\t*/\n\t\t} else {\n\t\t\treturn of({});\n\t\t}\n\t}\n\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { DisposableComponent } from '../disposable/disposable.component';\nimport { Label } from './label';\nimport { LabelService } from './label.service';\n\n@Directive({\n\tselector: '[label]'\n})\nexport class LabelDirective extends DisposableComponent implements OnInit {\n\n\tkey: string;\n\tinnerHTML: string;\n\n\t/*\n\t@Input() set label(key: string) {\n\t\t// console.log('LabelDirective.label', this.key, this.labelParams, this.template, this.view);\n\t}\n\t*/\n\t@Input() label: string;\n\t@Input() labelParams: any;\n\n\tconstructor(\n\t\tprivate element: ElementRef,\n\t\tprivate labelService: LabelService<Label>,\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\t// console.log('LabelDirective.ngOnInit', this.element.nativeElement.innerHTML);\n\t\tthis.labelService.getKey(this.label, this.element.nativeElement.innerHTML, this.labelParams).pipe(\n\t\t\ttakeUntil(this.unsubscribe)\n\t\t).subscribe(label => {\n\t\t\tthis.element.nativeElement.innerHTML = label;\n\t\t\t// console.log('LabelDirective.ngOnInit', label);\n\t\t});\n\t\t// console.log('LabelDirective.ngOnInit', this.label, this.labelParams, this.template, this.view);\n\t}\n}\n","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform, WrappedValue } from '@angular/core';\nimport { Observable, SubscriptionLike } from 'rxjs';\n\n@Pipe({\n\tname: 'customAsync',\n\tpure: false\n})\nexport class CustomAsyncPipe implements OnDestroy, PipeTransform {\n\n\tprivate subject: Observable<any> | null = null;\n\tprivate subscription: SubscriptionLike | null = null;\n\tprivate value: any = null;\n\tprivate cachedValue: any = null;\n\n\tconstructor(\n\t\tprivate changeDetector: ChangeDetectorRef\n\t) { }\n\n\ttransform(subject: Observable<any> | null | undefined): any {\n\t\treturn this.observableToValue(subject);\n\t}\n\n\tprivate observableToValue(subject: Observable<any> | null | undefined): any {\n\t\tif (subject !== this.subject) {\n\t\t\tif (this.subject) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t\tif (subject) {\n\t\t\t\tthis.subject = subject;\n\t\t\t\tthis.subscription = this.subject.subscribe((value: any) => {\n\t\t\t\t\t// console.log('CustomAsyncPipe.A', value);\n\t\t\t\t\tthis.value = value;\n\t\t\t\t\tthis.changeDetector.markForCheck(); // mark pipe as dirty\n\t\t\t\t});\n\t\t\t\tthis.cachedValue = this.value; // ???\n\t\t\t\treturn this.value;\n\t\t\t}\n\t\t}\n\t\t// console.log('CustomAsyncPipe.B', this.value);\n\t\tif (this.cachedValue !== this.value) {\n\t\t\tthis.cachedValue = this.value;\n\t\t\treturn WrappedValue.wrap(this.value); // notify that value has changed\n\t\t}\n\t\treturn this.cachedValue; // return cachedValue\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\t\tthis.value = null;\n\t\tthis.cachedValue = null;\n\t\tthis.subscription = null;\n\t\tthis.subject = null;\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.dispose();\n\t}\n\n\tprivate _observableToValue(subject: Observable<any> | null | undefined): any {\n\t\tif (!this.subject) {\n\t\t\tif (subject) {\n\t\t\t\tthis.subject = subject;\n\t\t\t\tthis.subscription = this.subject.subscribe((value: any) => {\n\t\t\t\t\tthis.value = value;\n\t\t\t\t\tthis.changeDetector.markForCheck(); // value has changed\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.cachedValue = this.value;\n\t\t\treturn this.value;\n\t\t}\n\t\tif (subject !== this.subject) {\n\t\t\tthis.dispose();\n\t\t\treturn this.transform(subject as any);\n\t\t}\n\t\tif (this.value === this.cachedValue) {\n\t\t\treturn this.cachedValue;\n\t\t}\n\t\tthis.cachedValue = this.value;\n\t\treturn WrappedValue.wrap(this.value); // value has changed\n\t}\n\n}\n","import { ChangeDetectorRef, Injectable, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { CustomAsyncPipe } from '../pipes/custom-async.pipe';\nimport { Label } from './label';\nimport { LabelService } from './label.service';\n\n@Pipe({\n\tname: 'label',\n\tpure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LabelPipe implements OnDestroy, PipeTransform {\n\n\tprivate asyncPipe: CustomAsyncPipe;\n\n\tconstructor(\n\t\tprivate changeDetector: ChangeDetectorRef,\n\t\tprivate labelService: LabelService<Label>,\n\t) {\n\t\tthis.asyncPipe = new CustomAsyncPipe(this.changeDetector);\n\t}\n\n\ttransform(key: string, text?: string, params?: any): string {\n\t\treturn this.asyncPipe.transform(this.labelService.getKey(key, text, params));\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.asyncPipe.dispose();\n\t}\n\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Logger } from './logger';\n\n@Component({\n\tselector: 'core-logger',\n\ttemplateUrl: './logger.component.html',\n\tstyleUrls: ['./logger.component.scss'],\n\tencapsulation: ViewEncapsulation.Emulated,\n})\nexport class LoggerComponent implements OnInit {\n\tconstructor(public logger: Logger) { }\n\n\tngOnInit() {\n\t}\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport class EventEntity {\n\ttype: string | number;\n\tdata?: any;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class EventDispatcherService {\n\n\tprivate emitter: EventEmitter<EventEntity>;\n\n\tconstructor() {\n\t\tthis.emitter = new EventEmitter<EventEntity>();\n\t}\n\n\temit(event: EventEntity): void {\n\t\treturn this.emitter.emit(event);\n\t}\n\n\tobserve(): Observable<EventEntity> {\n\t\treturn this.emitter.pipe(\n\t\t\ttap((event: EventEntity) => console.log('EventDispatcherService', event))\n\t\t);\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApiService } from '../api/api.service';\nimport { Identity } from './identity';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class IdentityService<T extends Identity> extends ApiService<T> {\n\n\tconstructor(\n\t\tprotected injector: Injector\n\t) {\n\t\tsuper(injector);\n\t}\n\n\tget collection(): string {\n\t\treturn '/api/identity';\n\t}\n\n\tgetList(): Observable<T[]> {\n\t\treturn this.get();\n\t}\n\n\tgetDetailByIdNo404<Data>(id: number | string): Observable<T> {\n\t\treturn this.get({ id }).pipe(\n\t\t\tmap((identities: T[]) => identities[0]),\n\t\t);\n\t}\n\n\tgetDetailById(id: number | string): Observable<T> {\n\t\treturn this.get({ id });\n\t}\n\n\tadd(identity: T) {\n\t\treturn this.post(identity);\n\t}\n\n\tupdate(identity: T) {\n\t\treturn this.put(identity);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Entity } from './entity';\nimport { IdentityService } from './identity.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class EntityService<T extends Entity> extends IdentityService<T> {\n\n\tget collection(): string {\n\t\treturn '/api/entity';\n\t}\n\n\tgetDetailByName(name: string): Observable<T[]> {\n\t\tif (!name.trim()) {\n\t\t\treturn of([]);\n\t\t}\n\t\treturn this.get({ name });\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { EntityService } from './entity.service';\nimport { MenuItem } from './menu-item';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class MenuService extends EntityService<MenuItem> {\n\n\tget collection(): string {\n\t\treturn '/api/menu';\n\t}\n\n\tconstructor(\n\t\tprotected injector: Injector,\n\t) {\n\t\tsuper(injector);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport interface CoreModules { [key: string]: string; }\n\nexport const CORE_MODULES = new InjectionToken<CoreModules>('core.modules');\n","import { Directive, Inject, Injector, Input, NgModuleFactory, NgModuleFactoryLoader, NgModuleRef, OnDestroy, OnInit, Type, ViewContainerRef } from '@angular/core';\nimport { CoreModules, CORE_MODULES } from './core.modules';\n\nexport type ModuleWithRoot = Type<any> & { rootComponent: Type<any> };\n\n@Directive({\n\tselector: '[lazyModule]'\n})\nexport class LazyModuleDirective implements OnInit, OnDestroy {\n\n\t@Input() lazyModule: keyof CoreModules;\n\tprivate moduleRef: NgModuleRef<any>;\n\n\tconstructor(\n\t\t@Inject(CORE_MODULES) private modules,\n\t\tprivate injector: Injector,\n\t\tprivate loader: NgModuleFactoryLoader,\n\t\tprivate container: ViewContainerRef,\n\t) {\n\t}\n\n\tngOnInit() {\n\t\tthis.loader.load(this.modules[this.lazyModule]).then((moduleFactory: NgModuleFactory<any>) => {\n\t\t\tthis.moduleRef = moduleFactory.create(this.injector);\n\t\t\tconst rootComponentType = this.moduleRef.injector.get('LAZY_ROOT_COMPONENT');\n\t\t\tconsole.log(rootComponentType);\n\t\t\tconst factory = this.moduleRef.componentFactoryResolver.resolveComponentFactory(rootComponentType);\n\t\t\tthis.container.createComponent(factory);\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.moduleRef) {\n\t\t\tthis.moduleRef.destroy();\n\t\t}\n\t}\n\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, NgZone, PLATFORM_ID } from '@angular/core';\nimport { from, fromEvent, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// export class OnceEvent extends Event { }\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class OnceService {\n\n\tprivate uid: number = 0;\n\tprivate paths: string[] = [];\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate zone: NgZone,\n\t) { }\n\n\tscript(url: string, callback?: string | boolean): Observable<Event> {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\t// !!! this.zone.runOutsideAngular(() => {\n\t\t\tif (this.paths.indexOf(url) === -1) {\n\t\t\t\tthis.paths.push(url);\n\t\t\t\tlet callbackName: string;\n\t\t\t\tif (callback === true) {\n\t\t\t\t\tcallbackName = 'OnceCallback' + (++this.uid);\n\t\t\t\t\turl = url.split('{{callback}}').join(callbackName);\n\t\t\t\t} else {\n\t\t\t\t\tcallbackName = callback as string;\n\t\t\t\t}\n\t\t\t\tlet callback$: Observable<any>;\n\t\t\t\tconst element = document.createElement('script');\n\t\t\t\telement.type = 'text/javascript';\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback$ = from(\n\t\t\t\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\t\t\t\twindow[callbackName] = function (data) {\n\t\t\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\telement.async = true;\n\t\t\t\t\tcallback$ = fromEvent(element, 'load').pipe(\n\t\t\t\t\t\tmap(x => x as Event)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconst scripts = document.getElementsByTagName('script');\n\t\t\t\tif (scripts.length) {\n\t\t\t\t\tconst script = scripts[scripts.length - 1];\n\t\t\t\t\tscript.parentNode.insertBefore(element, script.nextSibling);\n\t\t\t\t}\n\t\t\t\telement.src = url;\n\t\t\t\treturn callback$;\n\t\t\t} else {\n\t\t\t\treturn of(new Event('loaded!'));\n\t\t\t}\n\t\t\t// });\n\t\t} else {\n\t\t\treturn of(null);\n\t\t}\n\t}\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { CoreService } from '../config/core.service';\nimport { SegmentPipe } from './segment.pipe';\n\n@Pipe({\n\tname: 'asset',\n\t// pure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AssetPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate coreService: CoreService,\n\t\tprivate segment: SegmentPipe\n\t) { }\n\n\ttransform(data: any[] | string): string {\n\t\tif (typeof data === 'string' && (data.indexOf('http') === 0 || data.indexOf('/media/') === 0)) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst segments = this.segment.transform(data);\n\t\t\tsegments.unshift(this.coreService.options.assets);\n\t\t\treturn segments.join('/');\n\t\t}\n\t}\n\n}\n","\nexport enum ImageType {\n\tDefault = 1,\n\tGallery = 2,\n\tShare = 3,\n}\n\nexport class Image {\n\tid: number | string;\n\turl: string;\n\ttitle?: string;\n\tdescription?: string;\n\tfileName?: string;\n\ttype?: ImageType;\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { Image, ImageType } from '../models/image';\n\n@Pipe({\n\tname: 'imageUrl',\n\t// pure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ImageUrlPipe implements PipeTransform {\n\n\ttransform(images: Image[], type?: string, queryString?: string): string {\n\t\ttype = type || 'Default';\n\t\tqueryString = queryString ? `?${queryString}` : '';\n\t\tconst imageType: ImageType = ImageType[type] || ImageType.Default;\n\t\tlet image: Image = null;\n\t\tif (images && images.length) {\n\t\t\timage = images.find(i => i.type === imageType) || images[0];\n\t\t}\n\t\treturn image ? (image.url + queryString).replace(/ /g, '%20') : null;\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { Image, ImageType } from '../models/image';\n\n@Pipe({\n\tname: 'image',\n\t// pure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ImagePipe implements PipeTransform {\n\n\ttransform(images: Image[], type?: string): Image {\n\t\ttype = type || 'Default';\n\t\tconst imageType: ImageType = ImageType[type] || ImageType.Default;\n\t\treturn (images && images.length) ? images.find(i => i.type === imageType) || null : null; // images[0]\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { CoreService } from '../config/core.service';\nimport { SegmentPipe } from './segment.pipe';\n\n@Pipe({\n\tname: 'public',\n\t// pure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class PublicPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate coreService: CoreService,\n\t\tprivate segment: SegmentPipe\n\t) { }\n\n\ttransform(data: any[] | string): string {\n\t\tconst segments = this.segment.transform(data);\n\t\tsegments.unshift(this.coreService.options.public);\n\t\treturn segments.join('/');\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { RouteService } from './route.service';\n\n@Pipe({\n\tname: 'route',\n\tpure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class RoutePipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate routeService: RouteService,\n\t) { }\n\n\ttransform(data: any[] | string): string[] {\n\t\treturn this.routeService.toRoute(data);\n\t}\n\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { filter, first, map, tap } from 'rxjs/operators';\nimport { DocumentIndex } from '../models/document';\nimport { EntityService } from '../models/entity.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SlugService extends EntityService<DocumentIndex> {\n\n\tprivate collectedKeys: { [key: string]: string; } = {};\n\tprivate cache: { [key: string]: string[]; } = {};\n\tprivate slugs$: Subject<{ [key: string]: string[]; }> = new Subject();\n\tprivate emitter: EventEmitter<any> = new EventEmitter();\n\n\tget collection(): string {\n\t\treturn `/api/slug`;\n\t}\n\n\tgetKey(key: string): Observable<string[]> {\n\t\tif (this.cache.hasOwnProperty(key)) {\n\t\t\treturn of(this.cache[key]);\n\t\t} else {\n\t\t\t// console.log('SlugService.getKey', key);\n\t\t\tObject.defineProperty(this.collectedKeys, key, {\n\t\t\t\tvalue: key,\n\t\t\t\tenumerable: true,\n\t\t\t\twritable: false,\n\t\t\t});\n\t\t\tthis.cache[key] = null;\n\t\t}\n\t\t// return observable of key\n\t\treturn this.slugs$.pipe(\n\t\t\tmap(items => items[key]),\n\t\t\tfilter(item => item !== null),\n\t\t);\n\t}\n\n\tregister(): Observable<any> {\n\t\treturn this.emitter.pipe(\n\t\t\t// throttleTime(500),\n\t\t\ttap(() => {\n\t\t\t\tthis.collectKeys().pipe(\n\t\t\t\t\tfirst(),\n\t\t\t\t).subscribe((keys) => {\n\t\t\t\t\t// console.log('SlugService.collected', keys);\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\t}\n\n\tcollect(): void {\n\t\tif (Object.keys(this.collectedKeys).length) {\n\t\t\tthis.emitter.emit();\n\t\t}\n\t}\n\n\tprivate getSlugs(keys: string[]): Observable<DocumentIndex[]> {\n\t\tkeys = keys || [];\n\t\treturn this.statePost(keys).pipe(\n\t\t\t// tap(items => console.log(items)),\n\t\t);\n\t}\n\n\tprivate collectKeys(): Observable<{ [key: string]: string; }> {\n\t\tthis.slugs$.next(this.cache);\n\t\tconst keys = Object.keys(this.collectedKeys);\n\t\tthis.collectedKeys = {};\n\t\treturn this.getSlugs(keys).pipe(\n\t\t\tmap((items: DocumentIndex[]) => {\n\t\t\t\tconst dictionary = {};\n\t\t\t\titems.forEach(x => dictionary[x.mnemonic] = [x.slug]);\n\t\t\t\treturn dictionary;\n\t\t\t}),\n\t\t\ttap((dictionary: { [key: string]: string; }) => {\n\t\t\t\tObject.assign(this.cache, dictionary);\n\t\t\t\tthis.slugs$.next(this.cache);\n\t\t\t})\n\t\t);\n\t}\n\n}\n","import { ChangeDetectorRef, Injectable, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { CustomAsyncPipe } from '../pipes/custom-async.pipe';\nimport { RoutePipe } from '../route/route.pipe';\nimport { SlugService } from './slug.service';\n\n@Pipe({\n\tname: 'slugAsync',\n\tpure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SlugAsyncPipe implements OnDestroy, PipeTransform {\n\n\tprivate asyncPipe: CustomAsyncPipe;\n\n\tconstructor(\n\t\tprivate changeDetector: ChangeDetectorRef,\n\t\tprivate slugService: SlugService,\n\t\tprivate routePipe: RoutePipe,\n\t) {\n\t\tthis.asyncPipe = new CustomAsyncPipe(this.changeDetector);\n\t}\n\n\ttransform(key: string, segments?: string[]): string[] {\n\t\tlet slugs = this.routePipe.transform(this.asyncPipe.transform(this.slugService.getKey(key)));\n\t\t// console.log('SlugAsyncPipe.transform', key, slugs);\n\t\tif (slugs && segments) {\n\t\t\tslugs = slugs.concat(segments);\n\t\t}\n\t\treturn slugs;\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.asyncPipe.dispose();\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SlugService } from './slug.service';\n\n@Pipe({\n\tname: 'slug',\n\tpure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SlugPipe implements PipeTransform {\n\n\tconstructor(\n\t\t// private routeService: RouteService,\n\t\tprivate slugService: SlugService\n\t) { }\n\n\ttransform(key: string): Observable<string[]> {\n\t\treturn this.slugService.getKey(key);\n\t\t// return this.async.transform<any>(this.slugService.getKey(key));\n\t\t// return this.routeService.toSlug(key);\n\t}\n\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { DisposableComponent } from '../disposable/disposable.component';\nimport { Translate } from './translate';\nimport { TranslateService } from './translate.service';\n\n@Directive({\n\tselector: '[translate]'\n})\nexport class TranslateDirective extends DisposableComponent implements OnInit {\n\n\tkey: string;\n\tinnerHTML: string;\n\n\t/*\n\t@Input() set translate(key: string) {\n\t\t// console.log('TranslateDirective.translate', this.key, this.translateParams, this.template, this.view);\n\t}\n\t*/\n\t@Input() translate: string;\n\t@Input() translateParams: any;\n\n\tconstructor(\n\t\tprivate element: ElementRef,\n\t\tprivate translateService: TranslateService<Translate>,\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\t// console.log('TranslateDirective.ngOnInit', this.element.nativeElement.innerHTML);\n\t\tthis.translateService.getTranslate(this.translate, this.element.nativeElement.innerHTML, this.translateParams).pipe(\n\t\t\ttakeUntil(this.unsubscribe)\n\t\t).subscribe(translate => {\n\t\t\tthis.element.nativeElement.innerHTML = translate;\n\t\t\t// console.log('TranslateDirective.ngOnInit', translate);\n\t\t});\n\t\t// console.log('TranslateDirective.ngOnInit', this.translate, this.translateParams, this.template, this.view);\n\t}\n}\n","import { ChangeDetectorRef, Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { Translate } from './translate';\nimport { TranslateService } from './translate.service';\n\n@Pipe({\n\tname: 'translate',\n\tpure: false,\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class TranslatePipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate ref: ChangeDetectorRef,\n\t\tprotected translateService: TranslateService<Translate>\n\t) {\n\t\tthis.translateService.events.subscribe(\n\t\t\tx => this.ref.markForCheck()\n\t\t);\n\t}\n\n\tpublic transform(key: string, text?: string, params?: any): string {\n\t\t// console.log(key, params);\n\t\tconst label = this.translateService.getTranslate(key, text, params);\n\t\t// console.log('label', label, this.translateService.cache);\n\t\treturn label;\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'safeStyle'\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SafeStylePipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate sanitizer: DomSanitizer\n\t) { }\n\n\ttransform(style: string) {\n\t\treturn this.sanitizer.bypassSecurityTrustStyle(style);\n\t}\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'safeUrl'\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SafeUrlPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate sanitizer: DomSanitizer\n\t) { }\n\n\ttransform(url: string) {\n\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(url);\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'safeHtml'\n})\nexport class TrustPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate sanitizer: DomSanitizer\n\t) { }\n\n\ttransform(text: string) {\n\t\treturn this.sanitizer.bypassSecurityTrustHtml(text);\n\t\t// return this.sanitizer.bypassSecurityTrustStyle(text);\n\t\t// return this.sanitizer.bypassSecurityTrustXxx(text); - see docs\n\t}\n}\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ModuleWithProviders, NgModule, NgModuleFactoryLoader, Optional, SkipSelf, SystemJsNgModuleLoader } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { CoreConfig, CORE_CONFIG } from './config/core.config';\r\nimport { CoreService } from './config/core.service';\r\nimport { DefaultContentDirective } from './content/default-content.directive';\r\nimport { CoreModuleComponent } from './core-module.component';\r\nimport { DisposableComponent } from './disposable/disposable.component';\r\nimport { HighlightPipe } from './highlight/highlight.pipe';\r\nimport { HttpResponseInterceptor } from './http/http-response.interceptor';\r\nimport { HttpStatusCodeService } from './http/http-status-code.service';\r\nimport { JsonFormatterComponent } from './json-formatter/json-formatter.component';\r\nimport { LabelDirective } from './label/label.directive';\r\nimport { LabelPipe } from './label/label.pipe';\r\nimport { LabelService } from './label/label.service';\r\nimport { Logger } from './logger/logger';\r\nimport { LoggerComponent } from './logger/logger.component';\r\nimport { EventDispatcherService } from './models/event-dispatcher.service';\r\nimport { MenuService } from './models/menu.service';\r\nimport { CoreModules, CORE_MODULES } from './modules/core.modules';\r\nimport { LazyModuleDirective } from './modules/lazy-module.directive';\r\nimport { OnceService } from './once/once.service';\r\nimport { AssetPipe } from './pipes/asset.pipe';\r\nimport { CustomAsyncPipe } from './pipes/custom-async.pipe';\r\nimport { ImageUrlPipe } from './pipes/image-url.pipe';\r\nimport { ImagePipe } from './pipes/image.pipe';\r\nimport { PublicPipe } from './pipes/public.pipe';\r\nimport { SegmentPipe } from './pipes/segment.pipe';\r\nimport { RoutePipe } from './route/route.pipe';\r\nimport { SlugAsyncPipe } from './slug/slug-async.pipe';\r\nimport { SlugPipe } from './slug/slug.pipe';\r\nimport { CookieStorageService, LocalStorageService, SessionStorageService, StorageService } from './storage/storage.service';\r\nimport { TranslateDirective } from './translate/translate.directive';\r\nimport { TranslatePipe } from './translate/translate.pipe';\r\nimport { TranslateService } from './translate/translate.service';\r\nimport { SafeStylePipe } from './trust/safe-style.pipe';\r\nimport { SafeUrlPipe } from './trust/safe-url.pipe';\r\nimport { TrustPipe } from './trust/trust.pipe';\r\n\r\nconst services = [\r\n\tAuthService,\r\n\tCoreService,\r\n\tCookieStorageService,\r\n\tEventDispatcherService,\r\n\tHttpStatusCodeService,\r\n\tLabelService,\r\n\tLocalStorageService,\r\n\tLogger,\r\n\tMenuService,\r\n\tOnceService,\r\n\tSessionStorageService,\r\n\tStorageService,\r\n\tTranslateService,\r\n];\r\n\r\nconst components = [\r\n\tCoreModuleComponent,\r\n\tDisposableComponent,\r\n\tJsonFormatterComponent,\r\n\tLoggerComponent,\r\n];\r\n\r\nconst directives = [\r\n\tDefaultContentDirective,\r\n\tLabelDirective,\r\n\tLazyModuleDirective,\r\n\tTranslateDirective,\r\n];\r\n\r\nconst pipes = [\r\n\tAssetPipe,\r\n\tCustomAsyncPipe,\r\n\tHighlightPipe,\r\n\tImagePipe,\r\n\tImageUrlPipe,\r\n\tLabelPipe,\r\n\tPublicPipe,\r\n\tRoutePipe,\r\n\tSafeStylePipe,\r\n\tSafeUrlPipe,\r\n\tSegmentPipe,\r\n\tSlugAsyncPipe,\r\n\tSlugPipe,\r\n\tTranslatePipe,\r\n\tTrustPipe,\r\n];\r\n\r\nconst validators = [\r\n];\r\n\r\nconst guards = [\r\n];\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t],\r\n\tproviders: [\r\n\t\t{ provide: HTTP_INTERCEPTORS, useClass: HttpResponseInterceptor, multi: true },\r\n\t\t{ provide: NgModuleFactoryLoader, useClass: SystemJsNgModuleLoader },\r\n\t\t...services,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\tdeclarations: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\texports: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n})\r\n\r\nexport class CoreModule {\r\n\r\n\tconstructor(\r\n\t\t@Optional() @SkipSelf() parentModule: CoreModule\r\n\t) {\r\n\t\t/*\r\n\t\tif (parentModule) {\r\n\t\t\tthrow new Error('CoreModule is already loaded. Import it in the AppModule only');\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\r\n\tpublic static forRoot(\r\n\t\tconfig?: CoreConfig,\r\n\t\tmodules?: CoreModules,\r\n\t): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: CoreModule,\r\n\t\t\tproviders: [{\r\n\t\t\t\tprovide: CORE_CONFIG, useValue: config\r\n\t\t\t}, {\r\n\t\t\t\tprovide: CORE_MODULES, useValue: modules || {}\r\n\t\t\t}]\r\n\t\t};\r\n\t}\r\n\r\n}\r\n","import { Entity } from '../models/entity';\n\nexport class Label implements Entity {\n\tid: string;\n\tvalue?: string;\n\tdefaultValue?: string;\n}\n","import { Entity } from './entity';\n\nexport class Document implements Entity {\n\tid: number | string;\n\tname?: string;\n\ttitle?: string;\n\tdescription?: string;\n\tslug?: string;\n}\n\nexport class DocumentIndex {\n\tid: number | string;\n\tmnemonic?: string;\n\tslug?: string;\n}\n\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Document } from './document'; // !!! Document class conflict?\nimport { EntityService } from './entity.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class DocumentService<T extends Document> extends EntityService<T> {\n\n\tget collection(): string {\n\t\treturn '/api/document';\n\t}\n\n\tgetDetailBySlug(slug: string): Observable<T> {\n\t\tif (!slug.trim()) {\n\t\t\t// if not search term, return empty identity array.\n\t\t\treturn of();\n\t\t}\n\t\treturn this.get({ slug }).pipe(\n\t\t\t// tap(x => this.logger.log(`found identities matching \"${slug}\"`)),\n\t\t\tswitchMap(x => of(x[0]))\n\t\t);\n\t}\n\n}\n","import { Identity } from './identity';\n\nexport class Entity implements Identity {\n\tid: number | string;\n\tname?: string;\n}\n","\nexport class Feature {\n\tid: number | string;\n\tslug?: string;\n\ttitle?: string;\n\tabstract?: string;\n\ttype?: number;\n\treadmore?: boolean = false;\n}\n","\nexport class Identity {\n\tid: number | string;\n}\n","import { Document } from './document';\nimport { Image } from './image';\n\nexport class MenuItem implements Document {\n\tid: number | string;\n\tname?: string;\n\ttitle?: string;\n\tabstract?: string;\n\tslug?: string;\n\turl?: string;\n\ttype?: number | string;\n\timages?: Image[];\n\titems?: MenuItem[];\n\n\tconstructor(options?: any) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t\tif (options.items) {\n\t\t\t\tthis.items = options.items.map(item => new MenuItem(item));\n\t\t\t}\n\t\t}\n\t}\n}\n","\nexport class Taxonomy {\n\tid: number | string;\n\tname?: string;\n\ttype?: number;\n}\n","import { Entity } from '../models/entity';\n\nexport class Translate implements Entity {\n\tid: number | string;\n\tname: string;\n\tlang: string;\n\tlabels?: any;\n}\n"]}