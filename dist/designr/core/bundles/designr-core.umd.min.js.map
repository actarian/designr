{"version":3,"sources":["ng://@designr/core/lib/storage/storage.service.ts","ng://@designr/core/lib/auth/auth.service.ts","ng://@designr/core/lib/config/core.config.ts","ng://@designr/core/lib/config/core.service.ts","ng://@designr/core/lib/content/default-content.directive.ts","ng://@designr/core/lib/core-module.component.ts","node_modules/tslib/tslib.es6.js","ng://@designr/core/lib/disposable/disposable.component.ts","ng://@designr/core/lib/forms/controls/control.component.ts","ng://@designr/core/lib/forms/controls/control.service.ts","ng://@designr/core/lib/forms/controls/match.validator.ts","ng://@designr/core/lib/forms/exists.validator.ts","ng://@designr/core/lib/forms/controls/control-base.ts","ng://@designr/core/lib/forms/controls/control-checkbox.ts","ng://@designr/core/lib/forms/controls/control-email.ts","ng://@designr/core/lib/forms/controls/control-markdown.ts","ng://@designr/core/lib/forms/controls/control-number.ts","ng://@designr/core/lib/forms/controls/control-password.ts","ng://@designr/core/lib/forms/controls/control-radio.ts","ng://@designr/core/lib/forms/controls/control-select.ts","ng://@designr/core/lib/forms/controls/control-text.ts","ng://@designr/core/lib/forms/form.service.ts","ng://@designr/core/lib/forms/match.validator.ts","ng://@designr/core/lib/forms/uppercase.directive.ts","ng://@designr/core/lib/highlight/highlight.pipe.ts","ng://@designr/core/lib/logger/logger.ts","ng://@designr/core/lib/pipes/segment.pipe.ts","ng://@designr/core/lib/api/api.service.ts","ng://@designr/core/lib/translate/translate.service.ts","ng://@designr/core/lib/route/route.service.ts","ng://@designr/core/lib/http/http-status-code.service.ts","ng://@designr/core/lib/http/http-response.interceptor.ts","ng://@designr/core/lib/json-formatter/json-formatter.component.ts","ng://@designr/core/lib/pipes/custom-async.pipe.ts","ng://@designr/core/lib/labels/label.service.ts","ng://@designr/core/lib/labels/label-async.pipe.ts","ng://@designr/core/lib/labels/label.directive.ts","ng://@designr/core/lib/labels/label.pipe.ts","ng://@designr/core/lib/logger/logger.component.ts","ng://@designr/core/lib/models/event-dispatcher.service.ts","ng://@designr/core/lib/models/identity.service.ts","ng://@designr/core/lib/models/entity.service.ts","ng://@designr/core/lib/models/menu.service.ts","ng://@designr/core/lib/once/once.service.ts","ng://@designr/core/lib/pipes/asset.pipe.ts","ng://@designr/core/lib/models/image.ts","ng://@designr/core/lib/pipes/image-url.pipe.ts","ng://@designr/core/lib/pipes/image.pipe.ts","ng://@designr/core/lib/pipes/public.pipe.ts","ng://@designr/core/lib/route/route.pipe.ts","ng://@designr/core/lib/slug/slug.service.ts","ng://@designr/core/lib/slug/slug-async.pipe.ts","ng://@designr/core/lib/slug/slug.pipe.ts","ng://@designr/core/lib/translate/translate.pipe.ts","ng://@designr/core/lib/trust/safe-style.pipe.ts","ng://@designr/core/lib/trust/safe-url.pipe.ts","ng://@designr/core/lib/trust/trust.pipe.ts","ng://@designr/core/lib/core.module.ts","ng://@designr/core/lib/labels/label.ts","ng://@designr/core/lib/models/document.ts","ng://@designr/core/lib/models/document.service.ts","ng://@designr/core/lib/models/entity.ts","ng://@designr/core/lib/models/feature.ts","ng://@designr/core/lib/models/identity.ts","ng://@designr/core/lib/models/menu-item.ts","ng://@designr/core/lib/models/taxonomy.ts"],"names":["StorageService","prototype","delete","name","exist","get","set","value","days","on","of","tryGet","this","Injectable","args","providedIn","CookieStorageService","platformId","storageService","isSupported","setter","document","cookie","indexOf","cookieName","ca","split","i","length","c","charAt","substring","model","JSON","parse","decodeURIComponent","atob","e","console","log","cache_1","json","stringify","key","push","btoa","encodeURIComponent","interval","timeout","elapsed","checkCookie","setTimeout","expires","date","Date","setTime","getTime","toUTCString","isPlatformBrowser","Inject","PLATFORM_ID","SessionStorageService","cookieStorageService","window","sessionStorage","removeItem","undefined","cache_2","setItem","supported","LocalStorageService","localStorage","cache_3","Bearer","Cookie","AuthToken","accessToken","expiresIn","AuthService","injector","localStorageService","cachedRequests","paths","setToken","authToken","retryFailedRequests","getToken","getFakeToken","isValid","now","isAuthenticated","collectFailedRequest","request","Injector","CoreTransitionConfig","options","Object","assign","CoreConfig","assets","authStrategy","AuthStrategy","defaultLanguage","defaultMarket","languages","id","lang","origin","production","public","urlStrategy","useLang","useMarket","transition","CORE_CONFIG","InjectionToken","CoreService","decorators","type","DefaultContentDirective","element","container","renderer","hasContent","nativeElement","ngAfterContentChecked","childNodes","node","nodeType","clear","createEmbeddedView","default","Directive","selector","ElementRef","ViewContainerRef","Renderer2","Input","CoreModuleComponent","version","ngOnInit","Component","template","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__read","o","n","m","Symbol","iterator","r","call","ar","next","done","error","__spread","arguments","concat","DisposableComponent","unsubscribe","Subject","ngOnDestroy","complete","ControlComponent","reveal","checked","onChange","onTouched","defineProperty","form","controls","control","controlRef","valid","getFormattedValue","onInput","$event","target","onFocus","blurred","setProperty","onBlur","formatValue","parseValue","parsed","innervalue","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ControlService","getValidators","group","validators","min","Validators","max","required","requiredTrue","email","minLength","maxLength","pattern","match","matchValidator","otherKey","reverse","otherControl","errors","keys","setErrors","toFormGroup","_this","forEach","x","formControl","FormControl","disabled","disable","FormGroup","setValidators","ExistsValidator","values","BehaviorSubject","debounced$","pipe","debounceTime","switchMap","exists$","catchError","response","take","trim","exists","validate","NG_ASYNC_VALIDATORS","ControlBaseOptions","ControlBase","_originalValue","uid","label","placeholder","order","schema","step","format","ControlCheckbox","_super","tslib_1.__extends","ControlEmail","ControlMarkdown","ControlNumber","ControlPassword","ControlRadio","ControlSelect","ControlText","FormService","controlService","getControlsFromOptions","map","sort","a","getGroupFromOptions","getGroupFromControls","MatchValidator","input","root","isReverse","NG_VALIDATORS","Attribute","UppercaseDirective","ngModelChange","EventEmitter","onInputChange","toUpperCase","emit","Output","HostListener","HighlightPipe","transform","text","query","encodeHTML","regExp","RegExp","escapeRegexChars","replace","toLowerCase","safeToString","toString","Pipe","LoggerError","HttpErrorResponse","Logger","coreService","logs","_i","s","join","apply","warn","http","httpError","message","status","statusText","url","SegmentPipe","location","segments","path","isArray","normalize","Location","ApiRequestOptions","headers","HttpHeaders","Content-Type","params","HttpParams","ApiService","_logger","_http","HttpClient","_state","TransferState","_platformId","_config","_origin","config","base","collection","getUrl","method","first","second","tap","logger","post","third","put","patch","identity","toCamelCase","output","keyCamelCase","slice","getStateKey","flatMap","substr","k","makeStateKey","stateGet","stateKey","state","hasKey","cached","remove","isPlatformServer","onSerialize","statePost","TranslateService","use","setDefaultLang","addLangs","getBrowserLang","RouteService","translateService","route","router","segment","_language","language","asObservable","_languages","pageParams$","currentMarket","setLanguages","subscribeToRouter","_lang","getValue","find","getPageParams","queryParams","distinctUntilChanged","parseParams","serializeParams","serialized","serialize","base64","Buffer","from","_a","object","getId","snapshot","paramMap","getSlug","toRoute","data","market","marketIndex","splice","langIndex","toSlug","filter","datas","toParams","toData","setLanguage","silent","replaceState","navigate","events","event","NavigationStart","subscribe","lang_1","detectLanguage","acceptLanguage","detectedLanguage","regexp","performance","time","process","hrtime","start","startTime","end","endTime","ActivatedRoute","Router","HttpStatusCodeService","statusCode","redirectUrl","setStatusCode","getStatusCode","getRedirectUrl","HttpResponseInterceptor","statusCodeService","_router","_routeService","routeService","intercept","handle","throwError","JsonFormatterComponent","ngOnChanges","isObject","elementRef","removeChild","require","render","appendChild","encapsulation","ViewEncapsulation","Emulated","ViewChild","CustomAsyncPipe","changeDetector","subject","subscription","cachedValue","observableToValue","dispose","markForCheck","WrappedValue","wrap","_observableToValue","pure","ChangeDetectorRef","LabelService","cache","collectedKeys","labels$","emitter","getTranslation","labels","getLabel","defaultValue","shift","parseLabel","missingLabel","missingHandler","replacer","getKey","enumerable","writable","items","register","collectKeys","collect","LabelAsyncPipe","labelService","asyncPipe","LabelDirective","innerHTML","labelParams","takeUntil","LabelPipe","ref","LoggerComponent","EventDispatcherService","observe","IdentityService","getList","getDetailByIdNo404","identities","getDetailById","add","update","EntityService","getDetailByName","MenuService","OnceService","zone","script","callback","Event","callbackName_1","callback$","createElement","Promise","resolve","reject","async","fromEvent","scripts","getElementsByTagName","parentNode","insertBefore","nextSibling","src","NgZone","AssetPipe","unshift","Default","Gallery","Share","Image","ImageUrlPipe","images","queryString","imageType","ImageType","image","ImagePipe","PublicPipe","RoutePipe","SlugService","slugs$","item","getSlugs","dictionary","mnemonic","slug","SlugAsyncPipe","slugService","routePipe","slugs","SlugPipe","TranslatePipe","SafeStylePipe","sanitizer","style","bypassSecurityTrustStyle","DomSanitizer","SafeUrlPipe","bypassSecurityTrustResourceUrl","TrustPipe","bypassSecurityTrustHtml","services","components","directives","pipes","CoreModule","parentModule","Error","forRoot","ngModule","useValue","NgModule","imports","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","HTTP_INTERCEPTORS","useClass","declarations","exports","Optional","SkipSelf","Label","Document","DocumentIndex","DocumentService","getDetailBySlug","Entity","Feature","readmore","Identity","MenuItem","Taxonomy"],"mappings":"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","sourcesContent":["import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nconst TIMEOUT = 5 * 60 * 1000; // five minutes\n\n/*\nexport class StorageEvent extends Event {}\n\nexport class CookieStorageEvent extends StorageEvent { }\n\nexport class SessionStorageEvent extends StorageEvent { }\n\nexport class LocalStorageEvent extends StorageEvent { }\n*/\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class StorageService {\n\tpublic delete(name: string): void { }\n\tpublic exist(name: string): boolean { return false; }\n\tpublic get(name: string): any { return null; }\n\tpublic set(name: string, value: any, days?: number): void { }\n\tpublic on(): Observable<any> { return of(null); }\n\tpublic tryGet(): StorageService {\n\t\t// console.log('no StorageService available...');\n\t\treturn this;\n\t}\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CookieStorageService implements StorageService {\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate storageService: StorageService,\n\t) { }\n\n\tpublic tryGet(): StorageService {\n\t\tif (this.isSupported()) {\n\t\t\t// console.log('CookieStorageService.supported');\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn this.storageService.tryGet();\n\t\t}\n\t}\n\n\tpublic delete(name: string): void {\n\t\tthis.setter(name, '', -1);\n\t}\n\n\tpublic exist(name: string): boolean {\n\t\treturn document.cookie.indexOf(';' + name + '=') !== -1 || document.cookie.indexOf(name + '=') === 0;\n\t}\n\n\tpublic get(name: string): any {\n\t\tconst cookieName = name + '=';\n\t\tconst ca = document.cookie.split(';');\n\t\tfor (let i = 0; i < ca.length; i++) {\n\t\t\tlet c = ca[i];\n\t\t\twhile (c.charAt(0) === ' ') {\n\t\t\t\tc = c.substring(1, c.length);\n\t\t\t}\n\t\t\tif (c.indexOf(cookieName) === 0) {\n\t\t\t\tconst value = c.substring(cookieName.length, c.length);\n\t\t\t\tlet model = null;\n\t\t\t\ttry {\n\t\t\t\t\tmodel = JSON.parse(decodeURIComponent(atob(value)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.log('Cookie.get.error parsing', name, e);\n\t\t\t\t}\n\t\t\t\treturn model;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic set(name: string, value: any, days?: number) {\n\t\ttry {\n\t\t\tlet cache = [];\n\t\t\tconst json = JSON.stringify(value, function (key, value) {\n\t\t\t\tif (key === 'pool') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (typeof value === 'object' && value !== null) {\n\t\t\t\t\tif (cache.indexOf(value) !== -1) {\n\t\t\t\t\t\t// throw (new Error('circular reference found, discard key'));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcache.push(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t\tcache = null;\n\t\t\tthis.setter(name, btoa(encodeURIComponent(json)), days);\n\t\t} catch (e) {\n\t\t\tconsole.log('CookieSet.error serializing', name, value, e);\n\t\t}\n\t}\n\n\tpublic on(): Observable<any> {\n\t\t// todo\n\t\tconst interval: number = 1000, timeout: number = TIMEOUT;\n\t\tlet i, elapsed: number = 0;\n\t\tfunction checkCookie() {\n\t\t\tif (elapsed > timeout) {\n\t\t\t\t// promise.reject('timeout');\n\t\t\t} else {\n\t\t\t\tconst c: any = this.get(name);\n\t\t\t\tif (c) {\n\t\t\t\t\t// promise.resolve(c);\n\t\t\t\t} else {\n\t\t\t\t\telapsed += interval;\n\t\t\t\t\ti = setTimeout(checkCookie, interval);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcheckCookie();\n\t\treturn of(null);\n\t}\n\n\tprivate setter(name: string, value: any, days?: number) {\n\t\tlet expires;\n\t\tif (days) {\n\t\t\tconst date = new Date();\n\t\t\tdate.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n\t\t\texpires = '; expires=' + date.toUTCString();\n\t\t} else {\n\t\t\texpires = '';\n\t\t}\n\t\tdocument.cookie = name + '=' + value + expires + '; path=/';\n\t}\n\n\tprivate isSupported(): boolean {\n\t\treturn isPlatformBrowser(this.platformId);\n\t}\n\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SessionStorageService implements StorageService {\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate cookieStorageService: CookieStorageService,\n\t) { }\n\n\tpublic tryGet(): StorageService {\n\t\tif (this.isSupported()) {\n\t\t\t// console.log('SessionStorageService.supported');\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn this.cookieStorageService.tryGet();\n\t\t}\n\t}\n\n\tpublic delete(name: string): void {\n\t\twindow.sessionStorage.removeItem(name);\n\t}\n\n\tpublic exist(name: string): boolean {\n\t\treturn window.sessionStorage[name] !== undefined;\n\t}\n\n\tpublic get(name: string): any {\n\t\tlet value = null;\n\t\tif (window.sessionStorage[name] !== undefined) {\n\t\t\ttry {\n\t\t\t\tvalue = JSON.parse(window.sessionStorage[name]);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log('SessionStorage.get.error parsing', name, e);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\tpublic on(): Observable<any> {\n\t\t/*\n\t\treturn $promise(function (promise) {\n\t\t\tconst timeout = TIMEOUT;\n\t\t\tlet i;\n\t\t\tfunction storageEvent(e) {\n\t\t\t\tif (i) {\n\t\t\t\t\tclearTimeout(i);\n\t\t\t\t}\n\t\t\t\tif (e.originalEvent.key === name) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet value = JSON.parse(e.originalEvent.newValue);\n\t\t\t\t\t\tpromise.resolve(value);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.log('SessionStorage.on.error parsing', name, error);\n\t\t\t\t\t\tpromise.reject('error parsing ' + name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// return fromEvent(window, 'storage');\n\t\t\tangular.element(window).on('storage', storageEvent);\n\t\t\ti = setTimeout(function () {\n\t\t\t\tpromise.reject('timeout');\n\t\t\t}, timeout);\n\t\t});\n\t\t*/\n\t\treturn of(null);\n\t}\n\n\tpublic set(name: string, value: any, days?: number): void {\n\t\ttry {\n\t\t\tlet cache = [];\n\t\t\tconst json = JSON.stringify(value, function (key, value) {\n\t\t\t\tif (key === 'pool') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (typeof value === 'object' && value !== null) {\n\t\t\t\t\tif (cache.indexOf(value) !== -1) {\n\t\t\t\t\t\t// throw (new Error('circular reference found, discard key'));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcache.push(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t\tcache = null;\n\t\t\twindow.sessionStorage.setItem(name, json);\n\t\t} catch (e) {\n\t\t\tconsole.log('SessionStorage.set.error serializing', name, value, e);\n\t\t}\n\t}\n\n\tprivate isSupported(): boolean {\n\t\tlet supported: boolean = false;\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\ttry {\n\t\t\t\tsupported = 'sessionStorage' in window && window.sessionStorage !== null;\n\t\t\t\tif (supported) {\n\t\t\t\t\twindow.sessionStorage.setItem('test', '1');\n\t\t\t\t\twindow.sessionStorage.removeItem('test');\n\t\t\t\t} else {\n\t\t\t\t\tsupported = false;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tsupported = false;\n\t\t\t}\n\t\t}\n\t\treturn supported;\n\t}\n\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LocalStorageService implements StorageService {\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate cookieStorageService: CookieStorageService,\n\t) { }\n\n\tpublic tryGet(): StorageService {\n\t\tif (this.isSupported()) {\n\t\t\t// console.log('LocalStorageService.supported');\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn this.cookieStorageService.tryGet();\n\t\t}\n\t}\n\n\tpublic delete(name: string): void {\n\t\twindow.localStorage.removeItem(name);\n\t}\n\n\tpublic exist(name: string): boolean {\n\t\treturn window.localStorage[name] !== undefined;\n\t}\n\n\tpublic get(name: string): any {\n\t\tlet value = null;\n\t\tif (window.localStorage[name] !== undefined) {\n\t\t\ttry {\n\t\t\t\tvalue = JSON.parse(window.localStorage[name]);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log('LocalStorage.get.error parsing', name, e);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\tpublic on(): Observable<any> {\n\t\t/*\n\t\treturn $promise(function (promise) {\n\t\t\tconst timeout = TIMEOUT;\n\t\t\tlet i;\n\t\t\tfunction storageEvent(e) {\n\t\t\t\tif (i) {\n\t\t\t\t\tclearTimeout(i);\n\t\t\t\t}\n\t\t\t\tif (e.originalEvent.key === name) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet value = JSON.parse(e.originalEvent.newValue);\n\t\t\t\t\t\tpromise.resolve(value);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.log('LocalStorage.on.error parsing', name, error);\n\t\t\t\t\t\tpromise.reject('error parsing ' + name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// return fromEvent(window, 'storage');\n\t\t\tangular.element(window).on('storage', storageEvent);\n\t\t\ti = setTimeout(function () {\n\t\t\t\tpromise.reject('timeout');\n\t\t\t}, timeout);\n\t\t});\n\t\t*/\n\t\treturn of(null);\n\t}\n\n\tpublic set(name: string, value: any, days?: number): void {\n\t\ttry {\n\t\t\tlet cache = [];\n\t\t\tconst json = JSON.stringify(value, function (key, value) {\n\t\t\t\tif (key === 'pool') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (typeof value === 'object' && value !== null) {\n\t\t\t\t\tif (cache.indexOf(value) !== -1) {\n\t\t\t\t\t\t// throw (new Error('circular reference found, discard key'));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcache.push(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t\tcache = null;\n\t\t\twindow.localStorage.setItem(name, json);\n\t\t} catch (e) {\n\t\t\tconsole.log('LocalStorage.set.error serializing', name, value, e);\n\t\t}\n\t}\n\n\tprivate isSupported(): boolean {\n\t\tlet supported: boolean = false;\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\ttry {\n\t\t\t\tsupported = 'localStorage' in window && window.localStorage !== null;\n\t\t\t\tif (supported) {\n\t\t\t\t\twindow.localStorage.setItem('test', '1');\n\t\t\t\t\twindow.localStorage.removeItem('test');\n\t\t\t\t} else {\n\t\t\t\t\tsupported = false;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tsupported = false;\n\t\t\t}\n\t\t}\n\t\treturn supported;\n\t}\n\n}\n","import { HttpRequest } from '@angular/common/http';\nimport { Inject, Injectable, Injector, PLATFORM_ID } from '@angular/core';\nimport { LocalStorageService } from '../storage/storage.service';\n\nexport enum AuthStrategy {\n\tBearer = 0,\n\tCookie = 1,\n}\n\nexport class AuthToken {\n\tconstructor(\n\t\tpublic accessToken: string,\n\t\tpublic expiresIn: number = 0\n\t) { }\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthService {\n\n\tprivate cachedRequests: Array<HttpRequest<any>> = [];\n\tprivate paths: string[] = [];\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate injector: Injector,\n\t\tprivate localStorageService: LocalStorageService,\n\t) { }\n\n\tsetToken(authToken: AuthToken): void {\n\t\tthis.localStorageService.set('authToken', authToken);\n\t\tthis.retryFailedRequests();\n\t}\n\n\tgetToken(): AuthToken {\n\t\treturn this.localStorageService.get('authToken') as AuthToken;\n\t}\n\n\tgetFakeToken(): AuthToken {\n\t\treturn new AuthToken('fakeToken');\n\t}\n\n\tisValid(authToken: AuthToken): boolean {\n\t\t// return a boolean reflecting whether or not the token is expired\n\t\treturn authToken && (authToken.expiresIn > Date.now() || authToken.expiresIn === 0);\n\t}\n\n\tisAuthenticated(): boolean {\n\t\tconst authToken = this.getToken();\n\t\treturn this.isValid(authToken);\n\t}\n\n\tcollectFailedRequest(request): void {\n\t\tthis.cachedRequests.push(request);\n\t}\n\n\tretryFailedRequests(): void {\n\t\t// this method can be called after the token is refreshed\n\t\t// console.log('AuthService.retryFailedRequests');\n\t\t// retry the requests.\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\nimport { AuthStrategy } from '../auth/auth.service';\n\nexport class Language {\n\tid?: number;\n\tname?: string;\n\tlang?: string;\n}\n\nexport class CoreTransitionConfig {\n\tappId: string;\n\n\tconstructor(options?: CoreTransitionConfig) {\n\t\t// console.log('CoreTransitionConfig', options);\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t}\n}\n\nexport class CoreConfig {\n\tassets?: string = '';\n\tauthStrategy?: AuthStrategy = AuthStrategy.Cookie;\n\tdefaultLanguage?: string = 'it';\n\tdefaultMarket?: string = 'it';\n\tlanguages?: Language[] = [{ id: 1, name: 'Italiano', lang: 'it' }];\n\torigin?: string = '';\n\tproduction?: boolean = false;\n\tpublic?: string = '';\n\ttransition?: CoreTransitionConfig;\n\turlStrategy?: string = '';\n\tuseLang?: boolean = false;\n\tuseMarket?: boolean = false;\n\tuseServiceWorker?: boolean;\n\trouting?: any; // ExtraOptions\n\n\tconstructor(options?: CoreConfig) {\n\t\t// console.log('CoreConfig', options);\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t\tthis.transition = new CoreTransitionConfig(options.transition);\n\t\t} else {\n\t\t\tthis.transition = new CoreTransitionConfig();\n\t\t}\n\t}\n}\n\nexport const CORE_CONFIG = new InjectionToken<CoreConfig>('core.config');\n","\nimport { Inject, Injectable } from '@angular/core';\nimport { CoreConfig, CORE_CONFIG } from './core.config';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CoreService {\n\n\tpublic options: CoreConfig;\n\n\tconstructor(\n\t\t@Inject(CORE_CONFIG) options: CoreConfig\n\t) {\n\t\t// console.log('CoreService', options);\n\t\toptions = options || {};\n\t\t// options.defaultPage = (options.defaultPage || PageNotFoundComponent) as Type<PageComponent>;\n\t\t// options.notFoundPage = (options.notFoundPage || PageNotFoundComponent) as Type<PageComponent>;\n\t\tthis.options = new CoreConfig(options);\n\t}\n\n}\n","import { AfterContentChecked, Directive, ElementRef, Input, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n\tselector: '[default]',\n})\nexport class DefaultContentDirective implements AfterContentChecked {\n\n\t@Input() default: TemplateRef<any>;\n\tprivate element: HTMLElement;\n\tprivate hasContent = true;\n\n\tconstructor(\n\t\telement: ElementRef,\n\t\tprivate container: ViewContainerRef,\n\t\tprivate renderer: Renderer2) {\n\t\tthis.element = element.nativeElement;\n\t}\n\n\tngAfterContentChecked(): void {\n\t\tlet hasContent = false;\n\t\tconsole.log('DefaultContentDirective', this.element.childNodes);\n\t\tfor (let i = this.element.childNodes.length - 1; i >= 0; --i) {\n\t\t\tconst node = this.element.childNodes[i];\n\t\t\tif (node.nodeType === 1 || node.nodeType === 3) {\n\t\t\t\thasContent = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (hasContent !== this.hasContent) {\n\t\t\tthis.hasContent = hasContent;\n\t\t\tif (hasContent) {\n\t\t\t\t// this.renderer.removeClass(this.element, 'is-empty');\n\t\t\t\tthis.container.clear();\n\t\t\t} else {\n\t\t\t\t// this.renderer.addClass(this.element, 'is-empty');\n\t\t\t\tthis.container.createEmbeddedView(this.default);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'core-module',\n\ttemplate: `<span class=\"core-module\">core {{version}}</span>`,\n\tstyles: []\n})\nexport class CoreModuleComponent implements OnInit {\n\n\tversion: string = '0.0.2';\n\n\tconstructor() { }\n\n\tngOnInit() {\n\t}\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nimport { Component, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n\ttemplate: ''\n})\nexport class DisposableComponent implements OnDestroy {\n\n\tprotected unsubscribe: any = new Subject();\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe.next();\n\t\tthis.unsubscribe.complete();\n\t\t// console.log('DisposableComponent.ngOnDestroy', this);\n\t}\n\n}\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBase } from './control-base';\n\n@Component({\n\tselector: 'core-control',\n\ttemplateUrl: './control.component.html',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlComponent implements ControlValueAccessor {\n\t@Input() control: ControlBase<any>;\n\t@Input() form: FormGroup;\n\n\tprivate element: any;\n\tprivate blurred: boolean;\n\tprivate innervalue: any;\n\n\treveal: { checked: boolean } = { checked: false };\n\n\tconstructor(\n\t\tprivate renderer: Renderer2\n\t) { }\n\n\tget controlRef(): AbstractControl {\n\t\t// console.log('controlRef', this.control.key, this.form.controls);\n\t\treturn this.form.controls[this.control.key];\n\t}\n\n\tget isValid() { return this.controlRef.valid; }\n\n\t// ControlValueAccessor\n\n\tgetFormattedValue(): any {\n\t\t// console.log('ControlComponent.getFormattedValue', this.controlRef.value);\n\t\treturn this.controlRef.value;\n\t}\n\n\tonInput($event): void {\n\t\tthis.element = $event.target;\n\t\tthis.onChange(this.element.value);\n\t}\n\n\tonFocus($event): void {\n\t\tthis.blurred = false;\n\t\tthis.element = $event.target;\n\t\t// this.element.value = this.controlRef.value;\n\t\tthis.renderer.setProperty(this.element, 'value', this.controlRef.value);\n\t\t// console.log('ControlComponent.onFocus', this.controlRef);\n\t}\n\n\tonBlur($event): void {\n\t\tthis.blurred = true;\n\t\tthis.element = $event.target;\n\t\t// this.element.value = this.controlRef.value;\n\t\tthis.renderer.setProperty(this.element, 'value', this.controlRef.value);\n\t\t// console.log('ControlComponent.onBlur', this.controlRef);\n\t\t/*\n\t\tif (this.innervalue) {\n\t\t\tthis.control.patchValue(this.innervalue + ' H', { emitEvent: false });\n\t\t}\n\t\t*/\n\t}\n\n\tprivate onChange = (value: any) => { };\n\n\tprivate onTouched = () => { };\n\n\tprivate formatValue(value: any): void {\n\t\t// console.log('ControlComponent.formatValue', value);\n\t\tthis.renderer.setProperty(this.element, 'value', value);\n\t\t// console.log('ControlEditableComponent.writeValue', value);\n\t}\n\n\tprivate parseValue(value: any) {\n\t\t// console.log('ControlComponent.parseValue', value);\n\t\tconst parsed = this.innervalue;\n\t\tthis.onChange(parsed);\n\t}\n\n\twriteValue(value: any): void {\n\t\tthis.formatValue(value);\n\t}\n\n\tregisterOnChange(fn: any): void {\n\t\tthis.onChange = fn;\n\t\t// console.log('ControlEditableComponent.registerOnChange');\n\t}\n\n\tregisterOnTouched(fn: any): void {\n\t\tthis.onTouched = fn;\n\t\t// console.log('ControlEditableComponent.registerOnTouched');\n\t}\n\n\tsetDisabledState(isDisabled: boolean): void {\n\t\t// const node = this.textarea.nativeElement;\n\t\t/*\n\t\tif (isDisabled) {\n\t\t\tthis.renderer.addClass(this.element, 'disabled');\n\t\t} else {\n\t\t\tthis.renderer.removeClass(this.element, 'disabled');\n\t\t}\n\t\t// console.log('ControlEditableComponent.setDisabledState', isDisabled);\n\t\t*/\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { ControlBase } from './control-base';\nimport { matchValidator } from './match.validator';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ControlService {\n\n\tgetValidators(control: ControlBase<any>, group: FormGroup): ValidatorFn[] {\n\t\tconst validators: ValidatorFn[] = [];\n\t\tif (control.min) {\n\t\t\tvalidators.push(Validators.min(control.min));\n\t\t}\n\t\tif (control.max) {\n\t\t\tvalidators.push(Validators.max(control.max));\n\t\t}\n\t\tif (control.required) {\n\t\t\tvalidators.push(Validators.required);\n\t\t}\n\t\tif (control.requiredTrue) {\n\t\t\tvalidators.push(Validators.requiredTrue);\n\t\t}\n\t\tif (control.email) {\n\t\t\tvalidators.push(Validators.email);\n\t\t}\n\t\tif (control.minLength) {\n\t\t\tvalidators.push(Validators.minLength(control.minLength));\n\t\t}\n\t\tif (control.maxLength) {\n\t\t\tvalidators.push(Validators.maxLength(control.maxLength));\n\t\t}\n\t\tif (control.pattern) {\n\t\t\tvalidators.push(Validators.pattern(control.pattern));\n\t\t}\n\t\tif (control.match) {\n\t\t\tvalidators.push(matchValidator(control.match, control.reverse, group));\n\t\t}\n\t\t// console.log(control.key, validators);\n\t\treturn validators;\n\t}\n\n\ttoFormGroup(controls: ControlBase<any>[]): FormGroup {\n\t\tconst options: any = {};\n\t\tcontrols.forEach(x => {\n\t\t\t// group[x.key] = new FormControl(x.value, this.getValidators(x, group));\n\t\t\tconst formControl: FormControl = new FormControl(x.value);\n\t\t\tif (x.disabled) {\n\t\t\t\tformControl.disable();\n\t\t\t}\n\t\t\toptions[x.key] = formControl;\n\t\t\t// x.setControl(formControl); // !!!\n\t\t});\n\t\tconst group: FormGroup = new FormGroup(options);\n\t\t// console.log(group);\n\t\tcontrols.forEach(x => {\n\t\t\tconst validators = this.getValidators(x, group);\n\t\t\t// console.log(validators);\n\t\t\tgroup.controls[x.key].setValidators(validators);\n\t\t});\n\t\treturn group;\n\t}\n\n}\n","import { FormControl, FormGroup, ValidatorFn } from '@angular/forms';\n\nexport function __matchValidator(key: string, otherKey: string, group: FormGroup): ValidatorFn {\n\treturn (control: FormControl) => {\n\n\t\t// const control = group.controls[key];\n\t\tconst otherControl = group.controls[otherKey];\n\n\t\t// console.log(control.touched, otherControl.touched);\n\n\t\tif (control.touched && otherControl.touched) {\n\t\t\tconst match = control.value === otherControl.value;\n\t\t\tif (!match && control.valid && otherControl.valid) {\n\t\t\t\tcontrol.setErrors({\n\t\t\t\t\tmatch: otherKey\n\t\t\t\t});\n\t\t\t\treturn {\n\t\t\t\t\tmatch: otherKey + ' != ' + key\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (match && control.hasError('match')) {\n\t\t\t\tcontrol.setErrors(null);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n}\n\nexport function matchValidator(otherKey: string, reverse: boolean = false, group: FormGroup): ValidatorFn {\n\treturn (control: FormControl) => {\n\t\tconst otherControl = group.controls[otherKey];\n\n\t\tconst value = control.value;\n\n\t\t// value not equal\n\t\tif (otherControl && value !== otherControl.value && !reverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (otherControl && value === otherControl.value && reverse) {\n\t\t\tif (otherControl.errors) {\n\t\t\t\tdelete otherControl.errors['match'];\n\t\t\t\tif (!Object.keys(otherControl.errors).length) {\n\t\t\t\t\totherControl.setErrors(null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (otherControl && value !== otherControl.value && reverse) {\n\t\t\totherControl.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t};\n}\n\n/*\nvalidate(control: AbstractControl): { [key: string]: any } {\n\t\t// self value\n\t\tconst value = control.value;\n\n\t\t// control value\n\t\tconst input = control.root.get(this.match);\n\n\t\t// value not equal\n\t\tif (input && value !== input.value && !this.isReverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (input && value === input.value && this.isReverse) {\n\t\t\tdelete input.errors['match'];\n\t\t\tif (!Object.keys(input.errors).length) {\n\t\t\t\tinput.setErrors(null);\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (input && value !== input.value && this.isReverse) {\n\t\t\tinput.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n*/\n/*\nstatic isValidString(control: FormControl) {\n\tif (!control.value || typeof control.value !== 'string') {\n\t\treturn {isNotValidString: true};\n\t}\n\treturn null;\n}\n\nstatic isValidName(control: FormControl) {\n\tif (control.valid && control.value !== 'John Doe') {\n\t\treturn {isNotValidName: true};\n\t}\n\treturn null;\n}\n*/\n","import { Directive, forwardRef, Input } from '@angular/core';\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { catchError, debounceTime, switchMap, take } from 'rxjs/operators';\n\nconst DEBOUNCE_TIME: number = 250;\n\n@Directive({\n\tselector: '[exists][formControlName],[exists][formControl],[exists][ngModel]',\n\tproviders: [\n\t\t{ provide: NG_ASYNC_VALIDATORS, useExisting: forwardRef(() => ExistsValidator), multi: true },\n\t]\n})\nexport class ExistsValidator implements AsyncValidator {\n\n\tprivate values = new BehaviorSubject<string>(null);\n\tset value(value: string) {\n\t\tif (value && value.trim() !== '') {\n\t\t\tthis.values.next(value);\n\t\t}\n\t}\n\tprivate debounced$: Observable<ValidationErrors | null> = this.values.pipe(\n\t\tdebounceTime(DEBOUNCE_TIME),\n\t\tswitchMap((value: string) => {\n\t\t\t// console.log('ExistsValidator.debounced$', value);\n\t\t\treturn this.exists$(value);\n\t\t}),\n\t\tcatchError((response) => {\n\t\t\tconsole.log('ExistsValidator.debounced$.catchError', response);\n\t\t\treturn of(null);\n\t\t}),\n\t\ttake(1),\n\t);\n\n\t@Input() exists: Function;\n\n\texists$(value: string): Observable<ValidationErrors | null> {\n\t\tif (typeof this.exists === 'function') {\n\t\t\t// console.log('ExistsValidator.exists$', value);\n\t\t\treturn this.exists(value).pipe(\n\t\t\t\tswitchMap(exists => {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\treturn of({\n\t\t\t\t\t\t\texists: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn of(null);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t} else {\n\t\t\treturn of(null);\n\t\t}\n\t}\n\n\tvalidate(control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n\t\tthis.value = control.value;\n\t\treturn this.debounced$;\n\t}\n\n}\n","export class ControlBaseOptions<T> {\n\tvalue?: T;\n\tkey?: string;\n\tlabel?: string;\n\tplaceholder?: string;\n\t// order\n\torder?: number;\n\tschema?: string;\n\ttype?: string;\n\t// validators\n\tmin?: number;\n\tmax?: number;\n\trequired?: boolean;\n\trequiredTrue?: boolean;\n\temail?: boolean;\n\tminLength?: number;\n\tmaxLength?: number;\n\tpattern?: string | RegExp;\n\tmatch?: string;\n\t// options\n\treverse?: boolean;\n\toptions?: { key: string, value: string }[];\n\t// state\n\tdisabled?: boolean;\n\t// formatters\n\tstep?: number;\n\tformat?: string;\n}\n\nexport class ControlBase<T> {\n\t// export class ControlBase<T> implements ControlValueAccessor {\n\n\tstatic uid: number = 0;\n\n\tprivate _originalValue: T;\n\tvalue: T;\n\tkey: string;\n\t//\n\tlabel: string;\n\tplaceholder: string;\n\t// order\n\torder: number;\n\tschema: string;\n\ttype: string;\n\t// validators\n\tmin: number;\n\tmax: number;\n\trequired: boolean;\n\trequiredTrue: boolean;\n\temail: boolean;\n\tminLength: number;\n\tmaxLength: number;\n\tpattern: string | RegExp;\n\tmatch: string;\n\t// options\n\treverse: boolean;\n\toptions: { key: string, value: string }[];\n\t// state\n\tdisabled: boolean;\n\t// formatters\n\tstep: number;\n\tformat: string;\n\n\tconstructor(options: ControlBaseOptions<T> = {}) {\n\t\tthis._originalValue = options.value;\n\t\tthis.value = options.value;\n\t\tthis.key = options.key;\n\t\t//\n\t\tconst name = `${options.key || 'Control'} ${++ControlBase.uid}`;\n\t\tthis.label = options.label || name;\n\t\tthis.placeholder = options.placeholder || name;\n\t\t// order\n\t\tthis.order = options.order === undefined ? 1 : options.order;\n\t\tthis.schema = options.schema || 'text';\n\t\tthis.type = options.type || this.schema;\n\t\t// validators\n\t\tthis.min = options.min || null;\n\t\tthis.max = options.max || null;\n\t\tthis.required = !!options.required;\n\t\tthis.requiredTrue = !!options.requiredTrue;\n\t\tthis.email = !!options.email;\n\t\tthis.minLength = options.minLength || null;\n\t\tthis.maxLength = options.maxLength || null;\n\t\tthis.pattern = options.pattern || null;\n\t\tthis.match = options.match || null;\n\t\t// options\n\t\tthis.reverse = !!options.reverse;\n\t\tthis.options = options.options || [];\n\t\t// state\n\t\tthis.disabled = !!options.disabled;\n\t\t// formatters\n\t\tthis.step = options.step || null;\n\t\tthis.format = options.format || null;\n\t}\n\n\t/*\n\t//\n\tcontrol?: FormControl;\n\tinnervalue: any;\n\tblurred: boolean = false;\n\n\tfocus(): void {\n\t\t// console.log('ControlBase.focus', this.control.value);\n\t\tthis.blurred = false;\n\t\tif (this.innervalue) {\n\t\t\tthis.control.patchValue(this.innervalue, { emitEvent: false });\n\t\t}\n\t}\n\n\tblur(): void {\n\t\t// console.log('ControlBase.blur', this.control.value);\n\t\tthis.blurred = true;\n\t\tif (this.innervalue) {\n\t\t\tthis.control.patchValue(this.innervalue + ' H', { emitEvent: false });\n\t\t}\n\t}\n\n\tsetControl(control: FormControl): void {\n\t\tthis.control = control;\n\t\tthis.innervalue = control.value;\n\t\tcontrol.valueChanges.subscribe(value => {\n\t\t\t// console.log('ControlBase.control.valueChanges', value);\n\t\t\tif (this.blurred) {\n\t\t\t\tcontrol.patchValue(value + ' H', { emitEvent: false });\n\t\t\t} else {\n\t\t\t\tthis.innervalue = value;\n\t\t\t}\n\t\t});\n\t\t// this.blur();\n\t}\n\n\tformatValue(): string {\n\t\t// console.log('ControlBase.formatValue', this, this.control);\n\t\treturn 'aaa';\n\t}\n\n\tparseValue(e: Event) {\n\t\t// console.log('ControlBase.parseValue', e);\n\t}\n\n\tprivate onChange = (value: any) => { };\n\n\tprivate onTouched = () => { };\n\n\twriteValue(value: any): void {\n\t\t// console.log('ControlBase.writeValue', value);\n\t\t// this.formattedValue = value;\n\t\tthis.onChange(this.value);\n\t}\n\n\tregisterOnChange(fn: (value: any) => void): void {\n\t\t// console.log('ControlBase.registerOnChange', fn);\n\t\tthis.onChange = fn;\n\t\t// this.onChange('my new value');\n\t}\n\n\tregisterOnTouched(fn: () => void): void {\n\t\t// console.log('ControlBase.registerOnTouched', fn);\n\t\tthis.onTouched = fn;\n\t}\n\n\tsetDisabledState?(isDisabled: boolean): void {\n\t\t// console.log('ControlBase.setDisabledState', isDisabled);\n\t\tthis.disabled = isDisabled;\n\t}\n\t*/\n\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlCheckbox extends ControlBase<boolean> {\n\n\tschema = 'checkbox';\n\n\tconstructor(options: ControlBaseOptions<boolean> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlEmail extends ControlBase<string> {\n\n\tschema = 'email';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t\tthis.email = true;\n\t\tthis.pattern = options.pattern || '[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}';\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlMarkdown extends ControlBase<string> {\n\n\tschema = 'markdown';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlNumber extends ControlBase<string> {\n\n\tschema = 'number';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlPassword extends ControlBase<string> {\n\n\tschema = 'password';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlRadio extends ControlBase<boolean> {\n\n\tschema = 'radio';\n\n\tconstructor(options: ControlBaseOptions<boolean> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlSelect extends ControlBase<string> {\n\n\tschema = 'select';\n\toptions: { key: string, value: string }[] = [];\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.options = options.options || [];\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlText extends ControlBase<string> {\n\n\tschema = 'text';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ControlBase, ControlBaseOptions } from './controls/control-base';\nimport { ControlCheckbox } from './controls/control-checkbox';\nimport { ControlEmail } from './controls/control-email';\nimport { ControlMarkdown } from './controls/control-markdown';\nimport { ControlNumber } from './controls/control-number';\nimport { ControlPassword } from './controls/control-password';\nimport { ControlRadio } from './controls/control-radio';\nimport { ControlSelect } from './controls/control-select';\nimport { ControlText } from './controls/control-text';\nimport { ControlService } from './controls/control.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FormService {\n\n\tconstructor(\n\t\tprivate controlService: ControlService\n\t) { }\n\n\tgetControlsFromOptions(options: ControlBaseOptions<any>[]): ControlBase<any>[] {\n\t\tconst controls: ControlBase<any>[] = options.map(o => {\n\t\t\tswitch (o.schema) {\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\treturn new ControlCheckbox(o);\n\t\t\t\tcase 'email':\n\t\t\t\t\treturn new ControlEmail(o);\n\t\t\t\tcase 'number':\n\t\t\t\t\treturn new ControlNumber(o);\n\t\t\t\tcase 'password':\n\t\t\t\t\treturn new ControlPassword(o);\n\t\t\t\tcase 'radio':\n\t\t\t\t\treturn new ControlRadio(o);\n\t\t\t\tcase 'select':\n\t\t\t\t\treturn new ControlSelect(o);\n\t\t\t\tcase 'markdown':\n\t\t\t\t\treturn new ControlMarkdown(o);\n\t\t\t\tcase 'text':\n\t\t\t\t\treturn new ControlText(o);\n\t\t\t\tdefault:\n\t\t\t\t\treturn new ControlText(o);\n\t\t\t}\n\t\t});\n\t\tcontrols.sort((a, b) => a.order - b.order);\n\t\treturn controls;\n\t}\n\n\tgetGroupFromOptions(options: ControlBaseOptions<any>[]): FormGroup {\n\t\tconst controls: ControlBase<any>[] = this.getControlsFromOptions(options);\n\t\tconst group = this.controlService.toFormGroup(controls);\n\t\treturn group;\n\t}\n\n\tgetGroupFromControls(controls: ControlBase<any>[]): FormGroup {\n\t\tconst group = this.controlService.toFormGroup(controls);\n\t\treturn group;\n\t}\n\n}\n","import { Attribute, Directive, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n@Directive({\n\tselector: '[match][formControlName],[match][formControl],[match][ngModel]',\n\tproviders: [\n\t\t{ provide: NG_VALIDATORS, useExisting: forwardRef(() => MatchValidator), multi: true }\n\t]\n})\nexport class MatchValidator implements Validator {\n\n\tconstructor(\n\t\t@Attribute('match') public match: string,\n\t\t@Attribute('reverse') public reverse: string\n\t) { }\n\n\tprivate get isReverse() {\n\t\tif (!this.reverse) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.reverse === 'true' ? true : false;\n\t}\n\n\tvalidate(control: AbstractControl): { [key: string]: any } {\n\t\t// self value\n\t\tconst value = control.value;\n\n\t\t// control value\n\t\tconst input = control.root.get(this.match);\n\n\t\t// value not equal\n\t\tif (input && value !== input.value && !this.isReverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (input && value === input.value && this.isReverse) {\n\t\t\tdelete input.errors['match'];\n\t\t\tif (!Object.keys(input.errors).length) {\n\t\t\t\tinput.setErrors(null);\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (input && value !== input.value && this.isReverse) {\n\t\t\tinput.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n\n}\n","import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n\tselector: '[ngModel][uppercase]'\n})\nexport class UppercaseDirective {\n\t@Output() ngModelChange: EventEmitter<any> = new EventEmitter();\n\tvalue: any;\n\n\t@HostListener('input', ['$event']) onInputChange($event) {\n\t\tthis.value = $event.target.value.toUpperCase();\n\t\tthis.ngModelChange.emit(this.value);\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'highlight',\n\t// pure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class HighlightPipe implements PipeTransform {\n\n\ttransform(text: string, query: string): string {\n\t\tif (!query) {\n\t\t\treturn text;\n\t\t}\n\t\ttext = this.encodeHTML(text);\n\t\tquery = this.encodeHTML(query);\n\t\tconst regExp = new RegExp('&[^;]+;|' + this.escapeRegexChars(query), 'gi');\n\t\treturn text.replace(regExp, function (match) {\n\t\t\treturn match.toLowerCase() === query.toLowerCase() ? '<strong>' + match + '</strong>' : match;\n\t\t});\n\t}\n\n\tescapeRegexChars(text: string) {\n\t\treturn text.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n\t}\n\n\tsafeToString(text: string) {\n\t\treturn text === undefined || text === null ? '' : text.toString().trim();\n\t}\n\n\tencodeHTML(text: string) {\n\t\treturn this.safeToString(text)\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;');\n\t}\n\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CoreService } from '../config/core.service';\n\nexport class LoggerError extends HttpErrorResponse {\n\tbody?: any;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class Logger {\n\n\thttpError: LoggerError;\n\tlogs: string[] = [];\n\n\tconstructor(\n\t\tprivate coreService: CoreService,\n\t) {\n\t\t//\n\t}\n\n\trequest(...args: any[]) {\n\t\tif (!this.coreService.options.production) {\n\t\t\tconst s = args.join(', ');\n\t\t\tthis.logs.push(s);\n\t\t\t// console.log.apply(this, ['%c %s', 'background: #dddddd; color: #111'].concat(args));\n\t\t}\n\t}\n\n\tlog(...args: any[]) {\n\t\tif (!this.coreService.options.production) {\n\t\t\tconst s = args.join(', ');\n\t\t\tthis.logs.push(s);\n\t\t\tconsole.log.apply(this, ['%c%s', 'background: #1976d2; color: #fff; border-radius: 3px; padding: 4px 8px; margin-bottom: 4px;'].concat(args));\n\t\t}\n\t}\n\n\twarn(...args: any[]) {\n\t\tif (!this.coreService.options.production) {\n\t\t\tconst s = args.join(', ');\n\t\t\tthis.logs.push(s);\n\t\t\tconsole.log.apply(this, ['%c%s', 'background: #ff5500; color: #fff'].concat(args));\n\t\t}\n\t}\n\n\terror(...args: any[]) {\n\t\tif (!this.coreService.options.production) {\n\t\t\tconst s = args.join(', ');\n\t\t\tthis.logs.push(s);\n\t\t\tconsole.error.apply(console, args);\n\t\t}\n\t}\n\n\thttp(error: HttpErrorResponse) {\n\t\tthis.httpError = error;\n\t\tif (!this.coreService.options.production) {\n\t\t\tthis.logs.push(error.message);\n\t\t}\n\t\tconsole.warn('Logger.http.error', error.status, error.statusText, error.url);\n\t}\n\n\tclear() {\n\t\tthis.httpError = null;\n\t\tthis.logs = [];\n\t}\n}\n","\nimport { Location } from '@angular/common';\nimport { Injectable, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'segment',\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SegmentPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate location: Location\n\t) { }\n\n\ttransform(segments: any[] | string): any[] {\n\t\tsegments = segments != null ? (Array.isArray(segments) ? segments : segments.split('/')) : [];\n\t\tlet path: string = segments.join('/');\n\t\tpath = this.location.normalize(path);\n\t\tif (path.indexOf('/') !== 0) {\n\t\t\tpath = `/${path}`;\n\t\t}\n\t\tsegments = path.split('/');\n\t\treturn segments;\n\t}\n\n}\n","import { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable, Injector, PLATFORM_ID } from '@angular/core';\nimport { makeStateKey, StateKey, TransferState } from '@angular/platform-browser';\nimport { Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CoreConfig } from '../config/core.config';\nimport { CoreService } from '../config/core.service';\nimport { Logger } from '../logger/logger';\nimport { Identity } from '../models/identity';\n\nexport class ApiRequestOptions {\n\theaders?: HttpHeaders;\n\tparams?: HttpParams;\n\tconstructor(options?: {}) {\n\t\tthis.headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\t\tthis.params = options ? new HttpParams(options) : null;\n\t}\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ApiService<T extends Identity> {\n\n\tget collection(): string {\n\t\treturn '/api';\n\t}\n\n\tprivate _logger: Logger;\n\tget logger(): Logger {\n\t\tif (!this._logger) {\n\t\t\tthis._logger = this.injector.get(Logger);\n\t\t}\n\t\treturn this._logger;\n\t}\n\n\tprivate _http: HttpClient;\n\tget http(): HttpClient {\n\t\tif (!this._http) {\n\t\t\tthis._http = this.injector.get(HttpClient);\n\t\t}\n\t\treturn this._http;\n\t}\n\n\tprivate _state: TransferState;\n\tget state(): TransferState {\n\t\tif (!this._state) {\n\t\t\tthis._state = this.injector.get(TransferState);\n\t\t}\n\t\treturn this._state;\n\t}\n\n\tprivate _platformId: string;\n\tget platformId(): string {\n\t\tif (!this._platformId) {\n\t\t\tthis._platformId = this.injector.get<string>(PLATFORM_ID);\n\t\t}\n\t\treturn this._platformId;\n\t}\n\n\tprivate _config: CoreConfig;\n\tget config(): CoreConfig {\n\t\tif (!this._config) {\n\t\t\tthis._config = this.injector.get(CoreService).options;\n\t\t}\n\t\treturn this._config;\n\t}\n\n\tprivate _origin: string;\n\tget origin(): string {\n\t\tif (!this._origin) {\n\t\t\tthis._origin = this.config.origin;\n\t\t}\n\t\treturn this._origin;\n\t}\n\n\tget url(): string {\n\t\tlet base: string = this.origin;\n\t\tconst collection = this.collection.toLowerCase();\n\t\tif (collection.indexOf('http') === 0) {\n\t\t\tbase = '';\n\t\t}\n\t\treturn `${base}${collection}`;\n\t}\n\n\tconstructor(\n\t\tprotected injector: Injector\n\t) { }\n\n\tgetUrl(method: string = ''): string {\n\t\treturn `${this.url}${method}`;\n\t}\n\n\tget(first?: string | {}, second?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst params: {} = (typeof first === 'object' ? first : second);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\treturn this.http.get<T>(url, options).pipe(\n\t\t\ttap(x => this.logger.request(url)),\n\t\t);\n\t}\n\n\tpost(first: string | {}, second?: {}, third?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst model: {} = (typeof first === 'object' ? first : second);\n\t\tconst params: {} = (typeof second === 'object' ? second : third);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\treturn this.http.post<T>(url, model, options).pipe(\n\t\t\ttap(x => this.logger.request(url)),\n\t\t);\n\t}\n\n\tput(first: string | T, second?: T | {}, third?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst model: T = (typeof first === 'object' ? first : second) as T;\n\t\tconst params: {} = (typeof second === 'object' ? second : third);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\treturn this.http.put<T>(url, model, options).pipe(\n\t\t\ttap(x => this.logger.request(url)),\n\t\t);\n\t}\n\n\tpatch(first: string | T, second?: T | {}, third?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst model: T = (typeof first === 'object' ? first : second) as T;\n\t\tconst params: {} = (typeof second === 'object' ? second : third);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\treturn this.http.patch<T>(url, model, options).pipe(\n\t\t\ttap(x => this.logger.request(url)),\n\t\t);\n\t}\n\n\tdelete(first: string | T | number, second?: T | number | {}, third?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst identity: T | number = (typeof first !== 'string' ? first : second) as T | number;\n\t\tconst id = identity ? (typeof identity === 'number' ? identity : identity.id) : null;\n\t\tconst params: {} = (typeof second === 'object' ? second : third);\n\t\tconst url: string = id !== null ? this.getUrl(`${method}/${id}`) : this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\treturn this.http.delete<T[]>(url, options).pipe(\n\t\t\ttap(x => this.logger.request(url)),\n\t\t);\n\t}\n\n\ttoCamelCase(input: any): any {\n\t\tlet output, key, keyCamelCase, value;\n\t\tif (input instanceof Array) {\n\t\t\treturn input.map((value: any) => {\n\t\t\t\tif (typeof value === 'object') {\n\t\t\t\t\tvalue = this.toCamelCase(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t} else {\n\t\t\toutput = {};\n\t\t\tfor (key in input) {\n\t\t\t\tif (input.hasOwnProperty(key)) {\n\t\t\t\t\tkeyCamelCase = (key.charAt(0).toLowerCase() + key.slice(1) || key).toString();\n\t\t\t\t\tvalue = input[key];\n\t\t\t\t\tif (value instanceof Array || (value !== null && value.constructor === Object)) {\n\t\t\t\t\t\tvalue = this.toCamelCase(value);\n\t\t\t\t\t}\n\t\t\t\t\toutput[keyCamelCase] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// TRANSFER STATE\n\n\tgetStateKey(url: string, model: {}): StateKey<T> {\n\t\tconst flatMap = (s: string, x: any) => {\n\t\t\tif (typeof x === 'number') {\n\t\t\t\ts += x.toString();\n\t\t\t} else if (typeof x === 'string') {\n\t\t\t\ts += x.substr(0, 10);\n\t\t\t} else if (x && typeof x === 'object') {\n\t\t\t\ts += '_' + Object.keys(x).map(k => k + '_' + flatMap('', x[k])).join('_');\n\t\t\t}\n\t\t\treturn s;\n\t\t};\n\t\turl = flatMap(url, model);\n\t\t// console.log('ApiService.getStateKey.url', url);\n\t\tconst key: string = url.replace(/(\\W)/gm, '_');\n\t\t// this.logger.log('ApiService.getStateKey.key', key);\n\t\treturn makeStateKey(key);\n\t}\n\n\tstateGet(first?: string | {}, second?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst params: {} = (typeof first === 'object' ? first : second);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\tconst stateKey = this.getStateKey(url, params);\n\t\tif (isPlatformBrowser(this.platformId) && this.state.hasKey(stateKey)) {\n\t\t\tconst cached = this.state.get(stateKey, null);\n\t\t\tthis.state.remove(stateKey);\n\t\t\treturn of(cached);\n\t\t} else {\n\t\t\treturn this.http.get<T>(url, options).pipe(\n\t\t\t\ttap(x => {\n\t\t\t\t\tif (isPlatformServer(this.platformId)) {\n\t\t\t\t\t\tthis.state.onSerialize(stateKey, () => x);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n\n\tstatePost(first: string | {}, second?: {}, third?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst model: {} = (typeof first === 'object' ? first : second);\n\t\tconst params: {} = (typeof second === 'object' ? second : third);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\tconst stateKey = this.getStateKey(url, model);\n\t\tif (isPlatformBrowser(this.platformId) && this.state.hasKey(stateKey)) {\n\t\t\tconst cached = this.state.get(stateKey, null);\n\t\t\tthis.state.remove(stateKey);\n\t\t\treturn of(cached);\n\t\t} else {\n\t\t\treturn this.http.post<T>(url, model, options).pipe(\n\t\t\t\ttap(x => {\n\t\t\t\t\tif (isPlatformServer(this.platformId)) {\n\t\t\t\t\t\tthis.state.onSerialize(stateKey, () => x);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { ApiService } from '../api/api.service';\n\nexport class Translate {\n\tid: string;\n\tvalue?: string;\n\tdefaultValue?: string;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class TranslateService extends ApiService<Translate>  {\n\n\tget collection(): string {\n\t\treturn '/api/translate';\n\t}\n\n\tconstructor(\n\t\tprotected injector: Injector\n\t) {\n\t\tsuper(injector);\n\t}\n\n\tpublic use(lang: string) {\n\n\t}\n\n\tpublic setDefaultLang(lang: string) {\n\n\t}\n\n\tpublic addLangs(lang: string[]) {\n\n\t}\n\n\tpublic getBrowserLang(): string {\n\t\treturn 'it';\n\t}\n}\n","\n\nimport { isPlatformBrowser, isPlatformServer, Location } from '@angular/common';\nimport { Inject, Injectable, Injector, PLATFORM_ID } from '@angular/core';\nimport { ActivatedRoute, NavigationStart, Params, Router } from '@angular/router';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, switchMap } from 'rxjs/operators';\nimport { CoreService } from '../config/core.service';\nimport { SegmentPipe } from '../pipes/segment.pipe';\nimport { TranslateService } from '../translate/translate.service';\n\ndeclare const Buffer;\ndeclare const process;\n\n// @dynamic\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class RouteService {\n\n\tstatic startTime: number;\n\tstatic endTime: number;\n\tprivate urlStrategy: string;\n\tprivate _language: any = new BehaviorSubject({});\n\tpublic readonly language: Observable<any> = this._language.asObservable();\n\tprivate _languages: BehaviorSubject<Array<any>> = new BehaviorSubject([]);\n\tpublic readonly languages: Observable<any[]> = this._languages.asObservable();\n\tprivate _lang: string;\n\tprivate path: string;\n\tpublic params: Observable<Params>;\n\tpublic queryParams: Observable<Params>;\n\tpublic currentMarket: string;\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate coreService: CoreService,\n\t\tprivate injector: Injector,\n\t\tprivate translateService: TranslateService,\n\t\tprivate location: Location,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate router: Router,\n\t\tprivate segment: SegmentPipe,\n\t) {\n\t\tthis.urlStrategy = this.coreService.options.urlStrategy;\n\t\tthis._languages.next(this.coreService.options.languages);\n\t\tthis.currentMarket = this.coreService.options.defaultMarket;\n\t\tthis.setLanguages();\n\t\tif (this.coreService.options.useLang || this.coreService.options.useMarket) {\n\t\t\tthis.subscribeToRouter();\n\t\t}\n\t}\n\n\tprivate get lang(): string {\n\t\treturn this._lang;\n\t}\n\n\tprivate set lang(lang: string) {\n\t\tif (lang !== this._lang) {\n\t\t\tthis._lang = lang;\n\t\t\tconst language = this._languages.getValue().find(x => x.lang === lang);\n\t\t\tthis._language.next(language);\n\t\t\tthis.translateService.use(lang);\n\t\t\t// console.log('RouteService.set lang', lang, this.coreService.options.useLang);\n\t\t\tif (this.coreService.options.useLang) {\n\t\t\t\tconst _lang: string = this._lang;\n\t\t\t\tlet path = this.location.path();\n\t\t\t\tif (path.indexOf(`/${_lang}`) === 0) {\n\t\t\t\t\tpath = path.replace(`/${_lang}`, `/${lang}`);\n\t\t\t\t} else if (path.indexOf(`/${lang}`) !== 0) {\n\t\t\t\t\tpath = `/${lang}` + path;\n\t\t\t\t}\n\t\t\t\tthis.path = path;\n\t\t\t\t// const langIndex = this.urlStrategy.split('/').indexOf(':lang');\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get currentLang(): string {\n\t\treturn this._lang;\n\t}\n\n\tpublic pageParams$: BehaviorSubject<Params> = new BehaviorSubject({});\n\tpublic getPageParams(): Observable<Params> {\n\t\t// console.log('RouteService.getPageParams', this.router.url);\n\t\treturn this.route.queryParams.pipe(\n\t\t\tdistinctUntilChanged(),\n\t\t\tswitchMap(params => {\n\t\t\t\t// console.log(params);\n\t\t\t\tconst parsed = this.parseParams(params);\n\t\t\t\tthis.pageParams$.next(parsed);\n\t\t\t\treturn of(parsed);\n\t\t\t}),\n\t\t\t// tap(params => console.log('RouteService.getPageParams', params)),\n\t\t);\n\t}\n\n\tpublic parseParams(params: any): any {\n\t\tconst parsed = {};\n\t\tObject.keys(params).forEach(k => parsed[k] = this.parse(params[k]));\n\t\t/*\n\t\tfor (const key in params) {\n\t\t\tif (typeof (params[key]) === 'string') {\n\t\t\t\tparsed[key] = this.parse(params[key]);\n\t\t\t} else {\n\t\t\t\tparsed[key] = params[key];\n\t\t\t}\n\t\t}\n\t\t*/\n\t\treturn parsed;\n\t}\n\n\tpublic serializeParams(params: any) {\n\t\tconst serialized = {};\n\t\tObject.keys(params).forEach(k => serialized[k] = this.serialize(params[k]));\n\t\treturn serialized;\n\t}\n\n\tpublic parse(base64) {\n\t\ttry {\n\t\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\t\treturn JSON.parse(window.atob(base64));\n\t\t\t} else {\n\t\t\t\treturn JSON.parse(Buffer.from(base64, 'base64').toString('ascii'));\n\t\t\t}\n\t\t} catch {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic serialize(object) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\treturn window.btoa(JSON.stringify(object));\n\t\t} else {\n\t\t\treturn Buffer.from(JSON.stringify(object), 'ascii').toString('base64');\n\t\t}\n\t}\n\n\tpublic getId(): number {\n\t\treturn +this.route.snapshot.paramMap.get('id');\n\t}\n\n\tpublic getSlug(): string {\n\t\treturn this.route.snapshot.paramMap.get('slug');\n\t}\n\n\tpublic toRoute(data: any[] | string): any[] {\n\t\tconst segments = this.segment.transform(data);\n\t\tif (this.coreService.options.useMarket) {\n\t\t\tconst market: string = this.currentMarket;\n\t\t\tconst marketIndex = this.urlStrategy.split('/').indexOf(':market');\n\t\t\tsegments.splice(marketIndex, 0, market);\n\t\t}\n\t\tif (this.coreService.options.useLang) {\n\t\t\tconst lang: string = this._lang;\n\t\t\tconst langIndex = this.urlStrategy.split('/').indexOf(':lang');\n\t\t\tsegments.splice(langIndex, 0, lang);\n\t\t}\n\t\t// console.log('RouteService.toRoute', segments);\n\t\treturn segments;\n\t}\n\n\tpublic toSlug(data: any[] | string): any[] {\n\t\tconst segments = this.segment.transform(data);\n\t\tlet paths = segments.filter(x => {\n\t\t\treturn typeof x === 'string';\n\t\t});\n\t\tconst datas = segments.filter(x => {\n\t\t\treturn typeof x !== 'string';\n\t\t});\n\t\tif (this.coreService.options.useMarket) {\n\t\t\tconst marketIndex = this.urlStrategy.split('/').indexOf(':market');\n\t\t\tif (paths.length > marketIndex) {\n\t\t\t\tpaths[marketIndex] = '*';\n\t\t\t}\n\t\t}\n\t\tif (this.coreService.options.useLang) {\n\t\t\tconst langIndex = this.urlStrategy.split('/').indexOf(':lang');\n\t\t\tif (paths.length > langIndex) {\n\t\t\t\tpaths[langIndex] = '*';\n\t\t\t}\n\t\t}\n\t\tpaths = paths.join('/').replace(/\\/\\*/gi, '').split('/');\n\t\t// console.log('RouteService.toSlug', data, paths);\n\t\treturn paths.concat(datas);\n\t}\n\n\tpublic toParams(data: any): any {\n\t\treturn {\n\t\t\tdata: window.btoa(JSON.stringify(data))\n\t\t};\n\t}\n\n\tpublic toData(params: any): any {\n\t\tif (params && params.data) {\n\t\t\treturn JSON.parse(window.atob(params.data));\n\t\t}\n\t}\n\n\t/*\n\tpublic getParams(): Observable<ComponentFactory<PageComponent>> {\n\t\treturn this.router.events.pipe(\n\t\t\tfilter(event => event instanceof ActivationEnd),\n\t\t\tmap(() => this.route),\n\t\t\tdistinctUntilChanged(),\n\t\t\tmap(route => route.firstChild),\n\t\t\tswitchMap(route => route.params),\n\t\t\tconcatMap(x => {\n\t\t\t\treturn of(this.toData(x));\n\t\t\t})\n\t\t);\n\t}\n\t*/\n\n\tpublic setLanguage(lang: string, silent?: boolean) {\n\t\tthis.lang = lang;\n\t\tif (this.coreService.options.useLang && this.path) {\n\t\t\t// console.log('RouteService.setLanguage', this.path, this._lang, lang, silent);\n\t\t\tif (silent) {\n\t\t\t\tthis.location.replaceState(this.path);\n\t\t\t} else {\n\t\t\t\tthis.router.navigate([this.path]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// PRIVATE METHODS\n\n\tprivate setLanguages() {\n\t\tthis.translateService.addLangs(this.coreService.options.languages ? this.coreService.options.languages.map(x => x.lang) : []);\n\t\tthis.translateService.setDefaultLang(this.coreService.options.defaultLanguage);\n\t\t// this.setLanguage(this.detectLanguage(), true);\n\t\tthis.setLanguage(this.coreService.options.defaultLanguage, true);\n\t\t/*\n\t\tthis.translateService.onLangChange.subscribe((e: LangChangeEvent) => {\n\t\t\t// console.log('RouteService.onLangChange', e);\n\t\t});\n\t\t*/\n\t}\n\n\tprivate subscribeToRouter() {\n\t\tthis.router.events.pipe(\n\t\t\tfilter(event => event instanceof NavigationStart)\n\t\t).subscribe((event: NavigationStart) => {\n\t\t\tconst location = this.location.normalize(event.url).split('/');\n\t\t\tif (this.coreService.options.useMarket) {\n\t\t\t\tconst marketIndex = this.urlStrategy.split('/').indexOf(':market');\n\t\t\t\tconst market = location[marketIndex];\n\t\t\t\tif (market !== this.currentMarket) {\n\t\t\t\t\tthis.currentMarket = market;\n\t\t\t\t\t// console.log('RouteService.setMarket', market, event.url);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.coreService.options.useLang) {\n\t\t\t\tconst langIndex = this.urlStrategy.split('/').indexOf(':lang');\n\t\t\t\tconst lang = location[langIndex];\n\t\t\t\tif (lang !== this._lang) {\n\t\t\t\t\tconst language = this._languages.getValue().find(x => x.lang === lang);\n\t\t\t\t\tthis._language.next(language);\n\t\t\t\t\tthis.translateService.use(lang);\n\t\t\t\t\t// console.log('RouteService.setLang', lang, this._lang, langIndex, location, event.url);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate detectLanguage(): string {\n\t\tlet acceptLanguage: string = null;\n\t\tif (isPlatformServer(this.platformId)) {\n\t\t\t/*\n\t\t\t// server side express engine\n\t\t\tapp.engine('html',  (_, options, callback) => {\n\t\t\t\tlet engine = ngExpressEngine({\n\t\t\t\t\tbootstrap: ServerAppModule,\n\t\t\t\t\tproviders: [ { provide: 'request', useFactory: () => options.req } ]\n\t\t\t\t});\n\t\t\t\tengine(_, options, callback)\n\t\t\t})\n\t\t\t*/\n\t\t\tconst request = this.injector.get('request');\n\t\t\tif (request) {\n\t\t\t\tacceptLanguage = request.headers['accept-language'];\n\t\t\t\tconst languages: string[] = acceptLanguage.match(/[a-zA-Z\\-]{2,10}/g) || [];\n\t\t\t\tif (languages.length > 0) {\n\t\t\t\t\tacceptLanguage = languages[0].split('-')[0];\n\t\t\t\t} else {\n\t\t\t\t\tacceptLanguage = null;\n\t\t\t\t}\n\t\t\t\t// console.log('request', request, 'acceptLanguage', acceptLanguage);\n\t\t\t}\n\t\t\t// console.log('RouteService.isPlatformServer', this.platformId, acceptLanguage);\n\t\t} else if (isPlatformBrowser(this.platformId)) {\n\t\t\tacceptLanguage = this.translateService.getBrowserLang();\n\t\t\t// console.log('RouteService.isPlatformBrowser', this.platformId, acceptLanguage);\n\t\t}\n\t\tlet detectedLanguage: string = this.coreService.options.defaultLanguage;\n\t\tconst regexp: RegExp = new RegExp(`(${this.coreService.options.languages ? this.coreService.options.languages.map(x => x.lang).join('|') : ''})`, 'gi');\n\t\tconst match = (acceptLanguage || '').match(regexp);\n\t\tdetectedLanguage = match ? match[0] : detectedLanguage;\n\t\t// console.log('RouteService.detectLanguage', detectedLanguage);\n\t\treturn detectedLanguage;\n\t}\n\n\tpublic getTime() {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\treturn (performance || Date).now();\n\t\t} else {\n\t\t\tconst time = process.hrtime();\n\t\t\treturn (time[0] * 1e9 + time[1]) / 1e6;\n\t\t}\n\t}\n\n\tpublic start() {\n\t\tRouteService.startTime = this.getTime();\n\t}\n\n\tpublic end() {\n\t\tRouteService.endTime = this.getTime();\n\t\tconsole.log('RouteService.end', RouteService.endTime - RouteService.startTime);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class HttpStatusCodeService {\n\n\tprivate statusCode: number;\n\tprivate redirectUrl: string;\n\n\tconstructor() {\n\t\tthis.statusCode = 200;\n\t\tthis.redirectUrl = null;\n\t}\n\n\tpublic setStatusCode(statusCode: number, redirectUrl: string = null) {\n\t\tthis.statusCode = statusCode;\n\t\tthis.redirectUrl = redirectUrl;\n\t}\n\n\tpublic getStatusCode(): number {\n\t\treturn (this.statusCode === 309 ? 301 : this.statusCode);\n\t}\n\n\tpublic getRedirectUrl(): string {\n\t\treturn this.redirectUrl;\n\t}\n\n}\n","\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Logger } from '../logger/logger';\nimport { RouteService } from '../route/route.service';\nimport { HttpStatusCodeService } from './http-status-code.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class HttpResponseInterceptor implements HttpInterceptor {\n\n\tprivate _logger: Logger;\n\tget logger() {\n\t\tif (!this._logger) {\n\t\t\tthis._logger = this.injector.get(Logger);\n\t\t}\n\t\treturn this._logger;\n\t}\n\n\tprivate _router: Router;\n\tget router() {\n\t\tif (!this._router) {\n\t\t\tthis._router = this.injector.get(Router);\n\t\t}\n\t\treturn this._router;\n\t}\n\n\tprivate _routeService: RouteService;\n\tget routeService() {\n\t\tif (!this._routeService) {\n\t\t\tthis._routeService = this.injector.get(RouteService);\n\t\t}\n\t\treturn this.routeService;\n\t}\n\n\tconstructor(\n\t\tprivate injector: Injector,\n\t\tprivate statusCodeService: HttpStatusCodeService,\n\t) { }\n\n\tintercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\t// injecting request\n\t\t// parsing response\n\t\treturn next.handle(request).pipe(\n\t\t\ttap((event: HttpEvent<any>) => {\n\t\t\t\t// console.log('HttpResponseInterceptor', event);\n\t\t\t\tthis.logger.httpError = null;\n\t\t\t\t// this.logger.log(event);\n\t\t\t\t/*\n\t\t\t\tif (event instanceof HttpResponse) {\n\t\t\t\t\t// console.log('event instanceof HttpResponse');\n\t\t\t\t\t// do stuff with response if you want\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t}),\n\t\t\tcatchError((error: any) => {\n\t\t\t\t// console.warn('HttpResponseInterceptor', error);\n\t\t\t\tif (error instanceof HttpErrorResponse) {\n\t\t\t\t\t// this.statusCodeService.setStatusCode(error.status);\n\t\t\t\t\tswitch (error.status) {\n\t\t\t\t\t\tcase 401:\n\t\t\t\t\t\t\t// unauthorized\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 404:\n\t\t\t\t\t\t\t// not found\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 409:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 410:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthis.logger.http(error);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn throwError(error);\n\t\t\t})\n\t\t);\n\t}\n\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { Component, ElementRef, Inject, Input, OnChanges, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isArray, isObject } from 'util';\n// import JSONFormatter from 'json-formatter-js';\n\n@Component({\n\tselector: 'json-formatter',\n\ttemplate: `<div #jsonFormatter></div>`,\n\tstyleUrls: ['./json-formatter.component.scss'],\n\tencapsulation: ViewEncapsulation.Emulated,\n})\nexport class JsonFormatterComponent implements OnChanges {\n\t@ViewChild(`jsonFormatter`) input: ElementRef;\n\n\t@Input() json: Array<any> | Object | any;\n\n\telementRef: ElementRef;\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t) { }\n\n\tngOnChanges() {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tif (!isObject(this.json) && !isArray(this.json)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// console.log('JsonFormatterComponent', this.json);\n\t\t\tif (this.elementRef) {\n\t\t\t\tthis.input.nativeElement.removeChild(this.elementRef.nativeElement);\n\t\t\t}\n\t\t\tconst JSONFormatter = require('json-formatter-js').default;\n\t\t\tconst formatter = new JSONFormatter(this.json);\n\t\t\tconst elementRef = formatter.render();\n\t\t\tthis.input.nativeElement.appendChild(elementRef);\n\t\t\tthis.elementRef = new ElementRef(elementRef);\n\t\t}\n\t}\n}\n","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform, WrappedValue } from '@angular/core';\nimport { Observable, SubscriptionLike } from 'rxjs';\n\n@Pipe({\n\tname: 'customAsync',\n\tpure: false\n})\nexport class CustomAsyncPipe implements OnDestroy, PipeTransform {\n\n\tprivate subject: Observable<any> | null = null;\n\tprivate subscription: SubscriptionLike | null = null;\n\tprivate value: any = null;\n\tprivate cachedValue: any = null;\n\n\tconstructor(\n\t\tprivate changeDetector: ChangeDetectorRef\n\t) { }\n\n\ttransform(subject: Observable<any> | null | undefined): any {\n\t\treturn this.observableToValue(subject);\n\t}\n\n\tprivate observableToValue(subject: Observable<any> | null | undefined): any {\n\t\tif (subject !== this.subject) {\n\t\t\tif (this.subject) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t\tif (subject) {\n\t\t\t\tthis.subject = subject;\n\t\t\t\tthis.subscription = this.subject.subscribe((value: any) => {\n\t\t\t\t\t// console.log('CustomAsyncPipe.A', value);\n\t\t\t\t\tthis.value = value;\n\t\t\t\t\tthis.changeDetector.markForCheck(); // mark pipe as dirty\n\t\t\t\t});\n\t\t\t\tthis.cachedValue = this.value; // ???\n\t\t\t\treturn this.value;\n\t\t\t}\n\t\t}\n\t\t// console.log('CustomAsyncPipe.B', this.value);\n\t\tif (this.cachedValue !== this.value) {\n\t\t\tthis.cachedValue = this.value;\n\t\t\treturn WrappedValue.wrap(this.value); // notify that value has changed\n\t\t}\n\t\treturn this.cachedValue; // return cachedValue\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\t\tthis.value = null;\n\t\tthis.cachedValue = null;\n\t\tthis.subscription = null;\n\t\tthis.subject = null;\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.dispose();\n\t}\n\n\tprivate _observableToValue(subject: Observable<any> | null | undefined): any {\n\t\tif (!this.subject) {\n\t\t\tif (subject) {\n\t\t\t\tthis.subject = subject;\n\t\t\t\tthis.subscription = this.subject.subscribe((value: any) => {\n\t\t\t\t\tthis.value = value;\n\t\t\t\t\tthis.changeDetector.markForCheck(); // value has changed\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.cachedValue = this.value;\n\t\t\treturn this.value;\n\t\t}\n\t\tif (subject !== this.subject) {\n\t\t\tthis.dispose();\n\t\t\treturn this.transform(subject as any);\n\t\t}\n\t\tif (this.value === this.cachedValue) {\n\t\t\treturn this.cachedValue;\n\t\t}\n\t\tthis.cachedValue = this.value;\n\t\treturn WrappedValue.wrap(this.value); // value has changed\n\t}\n\n}\n","import { EventEmitter, Injectable, Injector } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { catchError, filter, first, map, take, tap } from 'rxjs/operators';\nimport { ApiService } from '../api/api.service';\nimport { Label } from './label';\n\nexport class LabelKey {\n\tid?: string;\n\tvalue?: string;\n\tdefaultValue?: string;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LabelService<T extends Label> extends ApiService<T> {\n\n\tget collection(): string {\n\t\treturn '/api/label';\n\t}\n\n\tprivate _language: any = new BehaviorSubject({});\n\tpublic readonly language: Observable<any> = this._language.asObservable();\n\tprivate _languages: BehaviorSubject<Array<any>> = new BehaviorSubject([]);\n\tpublic readonly languages: Observable<any[]> = this._languages.asObservable();\n\n\tprivate _lang: string;\n\tpublic get lang(): string {\n\t\treturn this._lang;\n\t}\n\tpublic set lang(lang: string) {\n\t\tif (lang !== this._lang) {\n\t\t\tthis._lang = lang;\n\t\t\tconst language = this._languages.getValue().find(x => x.lang === lang);\n\t\t\tthis._language.next(language);\n\t\t}\n\t}\n\n\tpublic events: EventEmitter<any> = new EventEmitter();\n\tpublic missingHandler?: Function;\n\tpublic cache: {} = {};\n\n\t// !!! new async pipe\n\tprivate collectedKeys: { [key: string]: LabelKey; } = {};\n\t// private cache: { [key: string]: string; } = {};\n\tprivate labels$: Subject<{ [key: string]: string; }> = new Subject();\n\tprivate emitter: EventEmitter<any> = new EventEmitter();\n\n\tconstructor(\n\t\tprotected injector: Injector,\n\t) {\n\t\tsuper(injector);\n\t\tthis._languages.next(this.config.languages);\n\t\tthis._lang = this.config.defaultLanguage;\n\t\tthis.getTranslation(this.lang).subscribe(x => {\n\t\t\t// console.log(x);\n\t\t});\n\t}\n\n\tpublic getTranslation(lang: string): Observable<{}> {\n\t\tif (!lang || !lang.trim()) {\n\t\t\treturn of(null);\n\t\t}\n\t\tthis.lang = lang;\n\t\tif (this.cache[lang]) {\n\t\t\treturn of(this.cache[lang]);\n\t\t} else {\n\t\t\treturn this.get({ lang }).pipe(\n\t\t\t\ttake(1),\n\t\t\t\tmap((x: Label[]) => {\n\t\t\t\t\tif (x[0]) {\n\t\t\t\t\t\tconst labels = x[0].labels;\n\t\t\t\t\t\tthis.cache[lang] = labels;\n\t\t\t\t\t\tthis.events.emit(labels);\n\t\t\t\t\t\treturn labels;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn of(null);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\t/*\n\t\t\t\ttap(x => {\n\t\t\t\t\t// this.logger.log(`found label matching \"${lang}\"`);\n\t\t\t\t})\n\t\t\t\t*/\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic getLabel(key: string, defaultValue?: string, params?: any): string | any {\n\t\tlet value: string | null = null;\n\t\tlet labels: any = this.cache[this.lang];\n\t\tif (labels) {\n\t\t\tconst keys: string[] = key.split('.');\n\t\t\tlet k = keys.shift();\n\t\t\twhile (keys.length > 0 && labels[k]) {\n\t\t\t\tlabels = labels[k];\n\t\t\t\tk = keys.shift();\n\t\t\t}\n\t\t\tvalue = labels[k] || `{${k}}`;\n\t\t}\n\t\treturn this.parseLabel(value, key, defaultValue, params);\n\t}\n\n\tprivate parseLabel(value: string | null, key: string, defaultValue?: string, params?: any): string | any {\n\t\tif (value == null) {\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\tif (value == null) {\n\t\t\treturn this.missingLabel(key);\n\t\t} else if (params) {\n\t\t\treturn this.parseParams(value, params);\n\t\t}\n\t\treturn value;\n\t}\n\n\tprivate missingLabel(key: string): string {\n\t\tif (this.missingHandler) {\n\t\t\treturn typeof this.missingHandler === 'function' ?\n\t\t\t\tthis.missingHandler(key) :\n\t\t\t\tthis.missingHandler;\n\t\t}\n\t\treturn key;\n\t}\n\n\tprivate parseParams(value: string, params: any): string {\n\t\tconst TEMPLATE_REGEXP: RegExp = /@\\s?([^{}\\s]*)\\s?/g; // /{{\\s?([^{}\\s]*)\\s?}}/g;\n\t\treturn value.replace(TEMPLATE_REGEXP, (text: string, key: string) => {\n\t\t\tconst replacer: string = params[key] as string;\n\t\t\treturn typeof replacer !== 'undefined' ? replacer : text;\n\t\t});\n\t}\n\n\t//\n\n\tgetKey(key: string, defaultValue?: string, params?: any): Observable<string> {\n\t\tif (this.cache.hasOwnProperty(key)) {\n\t\t\treturn of(this.cache[key]);\n\t\t} else {\n\t\t\tObject.defineProperty(this.collectedKeys, key, {\n\t\t\t\tvalue: { id: key, defaultValue: defaultValue },\n\t\t\t\tenumerable: true,\n\t\t\t\twritable: false,\n\t\t\t});\n\t\t\tthis.cache[key] = null;\n\t\t}\n\t\treturn this.labels$.pipe(\n\t\t\tmap(items => items[key] || null),\n\t\t\tfilter(label => label !== null),\n\t\t\t// tap(label => console.log('getKey', key, label)),\n\t\t\tmap(label => this.parseLabel(label, key, defaultValue, params)),\n\t\t);\n\t}\n\n\tregister(): Observable<any> {\n\t\treturn this.emitter.pipe(\n\t\t\t// throttleTime(500),\n\t\t\ttap(() => {\n\t\t\t\tthis.collectKeys().pipe(\n\t\t\t\t\tfirst(),\n\t\t\t\t).subscribe((keys) => {\n\t\t\t\t\t// console.log('LabelService.collected', keys);\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\t}\n\n\tcollect(): void {\n\t\tif (Object.keys(this.collectedKeys).length) {\n\t\t\tthis.emitter.emit();\n\t\t}\n\t}\n\n\tprivate collectKeys(): Observable<{ [key: string]: string; }> {\n\t\tconst keys = Object.keys(this.collectedKeys).map(x => this.collectedKeys[x]);\n\t\tthis.collectedKeys = {};\n\t\tif (keys.length) {\n\t\t\t// console.log('LabelService.collectKeys', JSON.stringify(keys));\n\t\t\treturn this.statePost(`/api/i18n/labels`, keys).pipe(\n\t\t\t\tmap((keys: LabelKey[]) => {\n\t\t\t\t\tconst items = {};\n\t\t\t\t\tkeys.forEach(x => items[x.id] = x.value || x.defaultValue);\n\t\t\t\t\treturn items;\n\t\t\t\t}),\n\t\t\t\ttap((items: { [key: string]: string; }) => {\n\t\t\t\t\tObject.assign(this.cache, items);\n\t\t\t\t\tthis.labels$.next(this.cache);\n\t\t\t\t\t// console.log('collectKeys', this.cache);\n\t\t\t\t}),\n\t\t\t\tcatchError(error => {\n\t\t\t\t\tconsole.log('LabelService.collectKeys.error', error);\n\t\t\t\t\treturn of({});\n\t\t\t\t}),\n\t\t\t);\n\t\t\t/*\n\t\t\treturn this.post(`/api/i18n/labels`, keys).pipe(\n\t\t\t\tmap((keys: LabelKey[]) => {\n\t\t\t\t\tconst items = {};\n\t\t\t\t\tkeys.forEach(x => items[x.id] = x.value || x.defaultValue);\n\t\t\t\t\treturn items;\n\t\t\t\t}),\n\t\t\t\ttap((items: { [key: string]: string; }) => {\n\t\t\t\t\tObject.assign(this.cache, items);\n\t\t\t\t\tthis.labels$.next(this.cache);\n\t\t\t\t\t// console.log('collectKeys', this.cache);\n\t\t\t\t}),\n\t\t\t);\n\t\t\t*/\n\t\t} else {\n\t\t\treturn of({});\n\t\t}\n\t}\n\n}\n\nexport function CustomTranslateLoader(injector: Injector) {\n\treturn new LabelService(injector);\n}\n\n","import { ChangeDetectorRef, Injectable, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { CustomAsyncPipe } from '../pipes/custom-async.pipe';\nimport { Label } from './label';\nimport { LabelService } from './label.service';\n\n@Pipe({\n\tname: 'labelAsync',\n\tpure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LabelAsyncPipe implements OnDestroy, PipeTransform {\n\n\tprivate asyncPipe: CustomAsyncPipe;\n\n\tconstructor(\n\t\tprivate changeDetector: ChangeDetectorRef,\n\t\tprivate labelService: LabelService<Label>,\n\t) {\n\t\tthis.asyncPipe = new CustomAsyncPipe(this.changeDetector);\n\t}\n\n\ttransform(key: string, text?: string, params?: any): string {\n\t\treturn this.asyncPipe.transform(this.labelService.getKey(key, text, params));\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.asyncPipe.dispose();\n\t}\n\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { DisposableComponent } from '../disposable/disposable.component';\nimport { Label } from './label';\nimport { LabelService } from './label.service';\n\n@Directive({\n\tselector: '[label]'\n})\nexport class LabelDirective extends DisposableComponent implements OnInit {\n\n\tkey: string;\n\tinnerHTML: string;\n\n\t/*\n\t@Input() set label(key: string) {\n\t\t// console.log('LabelDirective.label', this.key, this.labelParams, this.template, this.view);\n\t}\n\t*/\n\t@Input() label: string;\n\t@Input() labelParams: any;\n\n\tconstructor(\n\t\tprivate element: ElementRef,\n\t\tprivate labelService: LabelService<Label>,\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\t// console.log('LabelDirective.ngOnInit', this.element.nativeElement.innerHTML);\n\t\tthis.labelService.getKey(this.label, this.element.nativeElement.innerHTML, this.labelParams).pipe(\n\t\t\ttakeUntil(this.unsubscribe)\n\t\t).subscribe(label => {\n\t\t\tthis.element.nativeElement.innerHTML = label;\n\t\t\t// console.log('LabelDirective.ngOnInit', label);\n\t\t});\n\t\t// console.log('LabelDirective.ngOnInit', this.label, this.labelParams, this.template, this.view);\n\t}\n}\n","import { ChangeDetectorRef, Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { Label } from './label';\nimport { LabelService } from './label.service';\n\n@Pipe({\n\tname: 'label',\n\tpure: false,\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LabelPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate ref: ChangeDetectorRef,\n\t\tprotected labelService: LabelService<Label>\n\t) {\n\t\tthis.labelService.events.subscribe(\n\t\t\tx => this.ref.markForCheck()\n\t\t);\n\t}\n\n\tpublic transform(key: string, text?: string, params?: any): string {\n\t\t// console.log(key, params);\n\t\t// return WrappedValue.wrap(this.val);\n\t\tconst label = this.labelService.getLabel(key, text, params);\n\t\t// console.log('label', label, this.labelService.cache);\n\t\treturn label;\n\t}\n\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Logger } from './logger';\n\n@Component({\n\tselector: 'core-logger',\n\ttemplateUrl: './logger.component.html',\n\tstyleUrls: ['./logger.component.scss'],\n\tencapsulation: ViewEncapsulation.Emulated,\n})\nexport class LoggerComponent implements OnInit {\n\tconstructor(public logger: Logger) { }\n\n\tngOnInit() {\n\t}\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport class EventEntity {\n\ttype: string | number;\n\tdata?: any;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class EventDispatcherService {\n\n\tprivate emitter: EventEmitter<EventEntity>;\n\n\tconstructor() {\n\t\tthis.emitter = new EventEmitter<EventEntity>();\n\t}\n\n\temit(event: EventEntity): void {\n\t\treturn this.emitter.emit(event);\n\t}\n\n\tobserve(): Observable<EventEntity> {\n\t\treturn this.emitter.pipe(\n\t\t\ttap((event: EventEntity) => console.log('EventDispatcherService', event))\n\t\t);\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApiService } from '../api/api.service';\nimport { Identity } from './identity';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class IdentityService<T extends Identity> extends ApiService<T> {\n\n\tconstructor(\n\t\tprotected injector: Injector\n\t) {\n\t\tsuper(injector);\n\t}\n\n\tget collection(): string {\n\t\treturn '/api/identity';\n\t}\n\n\tgetList(): Observable<T[]> {\n\t\treturn this.get();\n\t}\n\n\tgetDetailByIdNo404<Data>(id: number | string): Observable<T> {\n\t\treturn this.get({ id }).pipe(\n\t\t\tmap((identities: T[]) => identities[0]),\n\t\t);\n\t}\n\n\tgetDetailById(id: number | string): Observable<T> {\n\t\treturn this.get({ id });\n\t}\n\n\tadd(identity: T) {\n\t\treturn this.post(identity);\n\t}\n\n\tupdate(identity: T) {\n\t\treturn this.put(identity);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Entity } from './entity';\nimport { IdentityService } from './identity.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class EntityService<T extends Entity> extends IdentityService<T> {\n\n\tget collection(): string {\n\t\treturn '/api/entity';\n\t}\n\n\tgetDetailByName(name: string): Observable<T[]> {\n\t\tif (!name.trim()) {\n\t\t\treturn of([]);\n\t\t}\n\t\treturn this.get({ name });\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { EntityService } from './entity.service';\nimport { MenuItem } from './menu-item';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class MenuService extends EntityService<MenuItem> {\n\n\tget collection(): string {\n\t\treturn '/api/menu';\n\t}\n\n\tconstructor(\n\t\tprotected injector: Injector,\n\t) {\n\t\tsuper(injector);\n\t}\n\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, NgZone, PLATFORM_ID } from '@angular/core';\nimport { from, fromEvent, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// export class OnceEvent extends Event { }\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class OnceService {\n\n\tprivate uid: number = 0;\n\tprivate paths: string[] = [];\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate zone: NgZone,\n\t) { }\n\n\tscript(url: string, callback?: string | boolean): Observable<Event> {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\t// !!! this.zone.runOutsideAngular(() => {\n\t\t\tif (this.paths.indexOf(url) === -1) {\n\t\t\t\tthis.paths.push(url);\n\t\t\t\tlet callbackName: string;\n\t\t\t\tif (callback === true) {\n\t\t\t\t\tcallbackName = 'OnceCallback' + (++this.uid);\n\t\t\t\t\turl = url.split('{{callback}}').join(callbackName);\n\t\t\t\t} else {\n\t\t\t\t\tcallbackName = callback as string;\n\t\t\t\t}\n\t\t\t\tlet callback$: Observable<any>;\n\t\t\t\tconst element = document.createElement('script');\n\t\t\t\telement.type = 'text/javascript';\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback$ = from(\n\t\t\t\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\t\t\t\twindow[callbackName] = function (data) {\n\t\t\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\telement.async = true;\n\t\t\t\t\tcallback$ = fromEvent(element, 'load').pipe(\n\t\t\t\t\t\tmap(x => x as Event)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconst scripts = document.getElementsByTagName('script');\n\t\t\t\tif (scripts.length) {\n\t\t\t\t\tconst script = scripts[scripts.length - 1];\n\t\t\t\t\tscript.parentNode.insertBefore(element, script.nextSibling);\n\t\t\t\t}\n\t\t\t\telement.src = url;\n\t\t\t\treturn callback$;\n\t\t\t} else {\n\t\t\t\treturn of(new Event('loaded!'));\n\t\t\t}\n\t\t\t// });\n\t\t} else {\n\t\t\treturn of(null);\n\t\t}\n\t}\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { CoreService } from '../config/core.service';\nimport { SegmentPipe } from './segment.pipe';\n\n@Pipe({\n\tname: 'asset',\n\t// pure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AssetPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate coreService: CoreService,\n\t\tprivate segment: SegmentPipe\n\t) { }\n\n\ttransform(data: any[] | string): string {\n\t\tif (typeof data === 'string' && (data.indexOf('http') === 0 || data.indexOf('/media/') === 0)) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst segments = this.segment.transform(data);\n\t\t\tsegments.unshift(this.coreService.options.assets);\n\t\t\treturn segments.join('/');\n\t\t}\n\t}\n\n}\n","\nexport enum ImageType {\n\tDefault = 1,\n\tGallery = 2,\n\tShare = 3,\n}\n\nexport class Image {\n\tid: number | string;\n\turl: string;\n\ttitle?: string;\n\tdescription?: string;\n\tfileName?: string;\n\ttype?: ImageType;\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { Image, ImageType } from '../models/image';\n\n@Pipe({\n\tname: 'imageUrl',\n\t// pure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ImageUrlPipe implements PipeTransform {\n\n\ttransform(images: Image[], type?: string, queryString?: string): string {\n\t\ttype = type || 'Default';\n\t\tqueryString = queryString ? `?${queryString}` : '';\n\t\tconst imageType: ImageType = ImageType[type] || ImageType.Default;\n\t\tlet image: Image = null;\n\t\tif (images && images.length) {\n\t\t\timage = images.find(i => i.type === imageType) || images[0];\n\t\t}\n\t\treturn image ? (image.url + queryString).replace(/ /g, '%20') : null;\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { Image, ImageType } from '../models/image';\n\n@Pipe({\n\tname: 'image',\n\t// pure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ImagePipe implements PipeTransform {\n\n\ttransform(images: Image[], type?: string): Image {\n\t\ttype = type || 'Default';\n\t\tconst imageType: ImageType = ImageType[type] || ImageType.Default;\n\t\treturn (images && images.length) ? images.find(i => i.type === imageType) || images[0] : null;\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { CoreService } from '../config/core.service';\nimport { SegmentPipe } from './segment.pipe';\n\n@Pipe({\n\tname: 'public',\n\t// pure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class PublicPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate coreService: CoreService,\n\t\tprivate segment: SegmentPipe\n\t) { }\n\n\ttransform(data: any[] | string): string {\n\t\tconst segments = this.segment.transform(data);\n\t\tsegments.unshift(this.coreService.options.public);\n\t\treturn segments.join('/');\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { RouteService } from './route.service';\n\n@Pipe({\n\tname: 'route',\n\tpure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class RoutePipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate routeService: RouteService,\n\t) { }\n\n\ttransform(data: any[] | string): string[] {\n\t\treturn this.routeService.toRoute(data);\n\t}\n\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { filter, first, map, tap } from 'rxjs/operators';\nimport { DocumentIndex } from '../models/document';\nimport { EntityService } from '../models/entity.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SlugService extends EntityService<DocumentIndex> {\n\n\tprivate collectedKeys: { [key: string]: string; } = {};\n\tprivate cache: { [key: string]: string[]; } = {};\n\tprivate slugs$: Subject<{ [key: string]: string[]; }> = new Subject();\n\tprivate emitter: EventEmitter<any> = new EventEmitter();\n\n\tget collection(): string {\n\t\treturn `/api/slug`;\n\t}\n\n\tgetKey(key: string): Observable<string[]> {\n\t\tif (this.cache.hasOwnProperty(key)) {\n\t\t\treturn of(this.cache[key]);\n\t\t} else {\n\t\t\t// console.log('SlugService.getKey', key);\n\t\t\tObject.defineProperty(this.collectedKeys, key, {\n\t\t\t\tvalue: key,\n\t\t\t\tenumerable: true,\n\t\t\t\twritable: false,\n\t\t\t});\n\t\t\tthis.cache[key] = null;\n\t\t}\n\t\t// return observable of key\n\t\treturn this.slugs$.pipe(\n\t\t\tmap(items => items[key]),\n\t\t\tfilter(item => item !== null),\n\t\t);\n\t}\n\n\tregister(): Observable<any> {\n\t\treturn this.emitter.pipe(\n\t\t\t// throttleTime(500),\n\t\t\ttap(() => {\n\t\t\t\tthis.collectKeys().pipe(\n\t\t\t\t\tfirst(),\n\t\t\t\t).subscribe((keys) => {\n\t\t\t\t\t// console.log('SlugService.collected', keys);\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\t}\n\n\tcollect(): void {\n\t\tif (Object.keys(this.collectedKeys).length) {\n\t\t\tthis.emitter.emit();\n\t\t}\n\t}\n\n\tprivate getSlugs(keys: string[]): Observable<DocumentIndex[]> {\n\t\tkeys = keys || [];\n\t\treturn this.statePost(keys).pipe(\n\t\t\t// tap(items => console.log(items)),\n\t\t);\n\t}\n\n\tprivate collectKeys(): Observable<{ [key: string]: string; }> {\n\t\tthis.slugs$.next(this.cache);\n\t\tconst keys = Object.keys(this.collectedKeys);\n\t\tthis.collectedKeys = {};\n\t\treturn this.getSlugs(keys).pipe(\n\t\t\tmap((items: DocumentIndex[]) => {\n\t\t\t\tconst dictionary = {};\n\t\t\t\titems.forEach(x => dictionary[x.mnemonic] = [x.slug]);\n\t\t\t\treturn dictionary;\n\t\t\t}),\n\t\t\ttap((dictionary: { [key: string]: string; }) => {\n\t\t\t\tObject.assign(this.cache, dictionary);\n\t\t\t\tthis.slugs$.next(this.cache);\n\t\t\t})\n\t\t);\n\t}\n\n}\n","import { ChangeDetectorRef, Injectable, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { CustomAsyncPipe } from '../pipes/custom-async.pipe';\nimport { RoutePipe } from '../route/route.pipe';\nimport { SlugService } from './slug.service';\n\n@Pipe({\n\tname: 'slugAsync',\n\tpure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SlugAsyncPipe implements OnDestroy, PipeTransform {\n\n\tprivate asyncPipe: CustomAsyncPipe;\n\n\tconstructor(\n\t\tprivate changeDetector: ChangeDetectorRef,\n\t\tprivate slugService: SlugService,\n\t\tprivate routePipe: RoutePipe,\n\t) {\n\t\tthis.asyncPipe = new CustomAsyncPipe(this.changeDetector);\n\t}\n\n\ttransform(key: string, segments?: string[]): string[] {\n\t\tlet slugs = this.routePipe.transform(this.asyncPipe.transform(this.slugService.getKey(key)));\n\t\t// console.log('SlugAsyncPipe.transform', key, slugs);\n\t\tif (slugs && segments) {\n\t\t\tslugs = slugs.concat(segments);\n\t\t}\n\t\treturn slugs;\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.asyncPipe.dispose();\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SlugService } from './slug.service';\n\n@Pipe({\n\tname: 'slug',\n\tpure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SlugPipe implements PipeTransform {\n\n\tconstructor(\n\t\t// private routeService: RouteService,\n\t\tprivate slugService: SlugService\n\t) { }\n\n\ttransform(key: string): Observable<string[]> {\n\t\treturn this.slugService.getKey(key);\n\t\t// return this.async.transform<any>(this.slugService.getKey(key));\n\t\t// return this.routeService.toSlug(key);\n\t}\n\n}\n","import { ChangeDetectorRef, Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from './translate.service';\n\n@Pipe({\n\tname: 'translate',\n\tpure: false,\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class TranslatePipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate ref: ChangeDetectorRef,\n\t\tprotected translateService: TranslateService\n\t) {\n\t\t// this.translateService.events.subscribe(\n\t\t// \tx => this.ref.markForCheck()\n\t\t// );\n\t}\n\n\tpublic transform(key: string, params?: { value: any }): string {\n\t\t// const label = this.translateService.getLabel(key, text, params);\n\t\treturn key;\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'safeStyle'\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SafeStylePipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate sanitizer: DomSanitizer\n\t) { }\n\n\ttransform(style: string) {\n\t\treturn this.sanitizer.bypassSecurityTrustStyle(style);\n\t}\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'safeUrl'\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SafeUrlPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate sanitizer: DomSanitizer\n\t) { }\n\n\ttransform(url: string) {\n\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(url);\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'safeHtml'\n})\nexport class TrustPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate sanitizer: DomSanitizer\n\t) { }\n\n\ttransform(text: string) {\n\t\treturn this.sanitizer.bypassSecurityTrustHtml(text);\n\t\t// return this.sanitizer.bypassSecurityTrustStyle(text);\n\t\t// return this.sanitizer.bypassSecurityTrustXxx(text); - see docs\n\t}\n}\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { CoreConfig, CORE_CONFIG } from './config/core.config';\r\nimport { CoreService } from './config/core.service';\r\nimport { DefaultContentDirective } from './content/default-content.directive';\r\nimport { CoreModuleComponent } from './core-module.component';\r\nimport { DisposableComponent } from './disposable/disposable.component';\r\nimport { ControlComponent } from './forms/controls/control.component';\r\nimport { ControlService } from './forms/controls/control.service';\r\nimport { ExistsValidator } from './forms/exists.validator';\r\nimport { FormService } from './forms/form.service';\r\nimport { MatchValidator } from './forms/match.validator';\r\nimport { UppercaseDirective } from './forms/uppercase.directive';\r\nimport { HighlightPipe } from './highlight/highlight.pipe';\r\nimport { HttpResponseInterceptor } from './http/http-response.interceptor';\r\nimport { HttpStatusCodeService } from './http/http-status-code.service';\r\nimport { JsonFormatterComponent } from './json-formatter/json-formatter.component';\r\nimport { LabelAsyncPipe } from './labels/label-async.pipe';\r\nimport { LabelDirective } from './labels/label.directive';\r\nimport { LabelPipe } from './labels/label.pipe';\r\nimport { LabelService } from './labels/label.service';\r\nimport { Logger } from './logger/logger';\r\nimport { LoggerComponent } from './logger/logger.component';\r\nimport { EventDispatcherService } from './models/event-dispatcher.service';\r\nimport { MenuService } from './models/menu.service';\r\nimport { OnceService } from './once/once.service';\r\nimport { AssetPipe } from './pipes/asset.pipe';\r\nimport { CustomAsyncPipe } from './pipes/custom-async.pipe';\r\nimport { ImageUrlPipe } from './pipes/image-url.pipe';\r\nimport { ImagePipe } from './pipes/image.pipe';\r\nimport { PublicPipe } from './pipes/public.pipe';\r\nimport { SegmentPipe } from './pipes/segment.pipe';\r\nimport { RoutePipe } from './route/route.pipe';\r\nimport { SlugAsyncPipe } from './slug/slug-async.pipe';\r\nimport { SlugPipe } from './slug/slug.pipe';\r\nimport { CookieStorageService, LocalStorageService, SessionStorageService, StorageService } from './storage/storage.service';\r\nimport { TranslatePipe } from './translate/translate.pipe';\r\nimport { SafeStylePipe } from './trust/safe-style.pipe';\r\nimport { SafeUrlPipe } from './trust/safe-url.pipe';\r\nimport { TrustPipe } from './trust/trust.pipe';\r\n\r\nconst services = [\r\n\tAuthService,\r\n\tCoreService,\r\n\tControlService,\r\n\tCookieStorageService,\r\n\tEventDispatcherService,\r\n\tFormService,\r\n\tHttpStatusCodeService,\r\n\tLabelService,\r\n\tLocalStorageService,\r\n\tLogger,\r\n\tMenuService,\r\n\tOnceService,\r\n\tSessionStorageService,\r\n\tStorageService,\r\n];\r\n\r\nconst components = [\r\n\tControlComponent,\r\n\tCoreModuleComponent,\r\n\tDisposableComponent,\r\n\tJsonFormatterComponent,\r\n\tLoggerComponent,\r\n];\r\n\r\nconst directives = [\r\n\tDefaultContentDirective,\r\n\tLabelDirective,\r\n\tUppercaseDirective,\r\n];\r\n\r\nconst pipes = [\r\n\tAssetPipe,\r\n\tCustomAsyncPipe,\r\n\tHighlightPipe,\r\n\tImagePipe,\r\n\tImageUrlPipe,\r\n\tLabelAsyncPipe,\r\n\tLabelPipe,\r\n\tPublicPipe,\r\n\tRoutePipe,\r\n\tSafeStylePipe,\r\n\tSafeUrlPipe,\r\n\tSegmentPipe,\r\n\tSlugAsyncPipe,\r\n\tSlugPipe,\r\n\tTranslatePipe,\r\n\tTrustPipe,\r\n];\r\n\r\nconst validators = [\r\n\tExistsValidator,\r\n\tMatchValidator,\r\n];\r\n\r\nconst guards = [\r\n];\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t],\r\n\tproviders: [\r\n\t\t{ provide: HTTP_INTERCEPTORS, useClass: HttpResponseInterceptor, multi: true },\r\n\t\t...services,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\tdeclarations: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\texports: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n})\r\n\r\nexport class CoreModule {\r\n\r\n\tconstructor(\r\n\t\t@Optional() @SkipSelf() parentModule: CoreModule\r\n\t) {\r\n\t\tif (parentModule) {\r\n\t\t\tthrow new Error('CoreModule is already loaded. Import it in the AppModule only');\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static forRoot(\r\n\t\tconfig?: CoreConfig,\r\n\t): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: CoreModule,\r\n\t\t\tproviders: [{\r\n\t\t\t\tprovide: CORE_CONFIG, useValue: config\r\n\t\t\t}]\r\n\t\t};\r\n\t}\r\n\r\n}\r\n","import { Entity } from '../models/entity';\n\nexport class Label implements Entity {\n\tid: number | string;\n\tname: string;\n\tlang: string;\n\tlabels?: any;\n}\n","import { Entity } from './entity';\n\nexport class Document implements Entity {\n\tid: number | string;\n\tname?: string;\n\ttitle?: string;\n\tdescription?: string;\n\tslug?: string;\n}\n\nexport class DocumentIndex {\n\tid: number | string;\n\tmnemonic?: string;\n\tslug?: string;\n}\n\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Document } from './document'; // !!! Document class conflict?\nimport { EntityService } from './entity.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class DocumentService<T extends Document> extends EntityService<T> {\n\n\tget collection(): string {\n\t\treturn '/api/document';\n\t}\n\n\tgetDetailBySlug(slug: string): Observable<T> {\n\t\tif (!slug.trim()) {\n\t\t\t// if not search term, return empty identity array.\n\t\t\treturn of();\n\t\t}\n\t\treturn this.get({ slug }).pipe(\n\t\t\t// tap(x => this.logger.log(`found identities matching \"${slug}\"`)),\n\t\t\tswitchMap(x => of(x[0]))\n\t\t);\n\t}\n\n}\n","import { Identity } from './identity';\n\nexport class Entity implements Identity {\n\tid: number | string;\n\tname?: string;\n}\n","\nexport class Feature {\n\tid: number | string;\n\tslug?: string;\n\ttitle?: string;\n\tabstract?: string;\n\ttype?: number;\n\treadmore?: boolean = false;\n}\n","\nexport class Identity {\n\tid: number | string;\n}\n","import { Document } from './document';\nimport { Image } from './image';\n\nexport class MenuItem implements Document {\n\tid: number | string;\n\tname?: string;\n\ttitle?: string;\n\tabstract?: string;\n\tslug?: string;\n\turl?: string;\n\ttype?: number | string;\n\timages?: Image[];\n\titems?: MenuItem[];\n\n\tconstructor(options?: any) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t\tif (options.items) {\n\t\t\t\tthis.items = options.items.map(item => new MenuItem(item));\n\t\t\t}\n\t\t}\n\t}\n}\n","\nexport class Taxonomy {\n\tid: number | string;\n\tname?: string;\n\ttype?: number;\n}\n"]}