{"version":3,"sources":["ng://@designr/core/lib/storage/storage.service.ts","ng://@designr/core/lib/auth/auth.service.ts","ng://@designr/core/lib/config/core.config.ts","ng://@designr/core/lib/config/config.service.ts","ng://@designr/core/lib/content/default-content.directive.ts","ng://@designr/core/lib/core-module.component.ts","node_modules/tslib/tslib.es6.js","ng://@designr/core/lib/disposable/disposable.component.ts","ng://@designr/core/lib/pipes/segment.pipe.ts","ng://@designr/core/lib/logger/logger.ts","ng://@designr/core/lib/api/api.service.ts","ng://@designr/core/lib/translate/translate.service.ts","ng://@designr/core/lib/routes/route.service.ts","ng://@designr/core/lib/pages/page.component.ts","ng://@designr/core/lib/pages/page-not-found.component.ts","ng://@designr/core/lib/http/http-status-code.service.ts","ng://@designr/core/lib/models/identity.service.ts","ng://@designr/core/lib/models/entity.service.ts","ng://@designr/core/lib/models/image.ts","ng://@designr/core/lib/pages/link.service.ts","ng://@designr/core/lib/pages/page.ts","ng://@designr/core/lib/pages/page.service.ts","ng://@designr/core/lib/pages/page-outlet.component.ts","ng://@designr/core/lib/pages/page-resolver.ts","ng://@designr/core/lib/pages/page-resolver.service.ts","ng://@designr/core/lib/pages/page.guard.ts","ng://@designr/core/lib/pages/static.guard.ts","ng://@designr/core/lib/core.routing.ts","ng://@designr/core/lib/forms/controls/control.component.ts","ng://@designr/core/lib/forms/controls/control.service.ts","ng://@designr/core/lib/forms/controls/match.validator.ts","ng://@designr/core/lib/forms/exists.validator.ts","ng://@designr/core/lib/forms/controls/control-base.ts","ng://@designr/core/lib/forms/controls/control-checkbox.ts","ng://@designr/core/lib/forms/controls/control-email.ts","ng://@designr/core/lib/forms/controls/control-markdown.ts","ng://@designr/core/lib/forms/controls/control-number.ts","ng://@designr/core/lib/forms/controls/control-password.ts","ng://@designr/core/lib/forms/controls/control-radio.ts","ng://@designr/core/lib/forms/controls/control-select.ts","ng://@designr/core/lib/forms/controls/control-text.ts","ng://@designr/core/lib/forms/form.service.ts","ng://@designr/core/lib/forms/match.validator.ts","ng://@designr/core/lib/forms/uppercase.directive.ts","ng://@designr/core/lib/highlight/highlight.pipe.ts","ng://@designr/core/lib/http/http-response.interceptor.ts","ng://@designr/core/lib/json-formatter/json-formatter.component.ts","ng://@designr/core/lib/pipes/custom-async.pipe.ts","ng://@designr/core/lib/labels/label.service.ts","ng://@designr/core/lib/labels/label-async.pipe.ts","ng://@designr/core/lib/labels/label.directive.ts","ng://@designr/core/lib/labels/label.pipe.ts","ng://@designr/core/lib/logger/logger.component.ts","ng://@designr/core/lib/models/event-dispatcher.service.ts","ng://@designr/core/lib/models/menu.service.ts","ng://@designr/core/lib/once/once.service.ts","ng://@designr/core/lib/pipes/asset.pipe.ts","ng://@designr/core/lib/pipes/image.pipe.ts","ng://@designr/core/lib/pipes/public.pipe.ts","ng://@designr/core/lib/routes/route.pipe.ts","ng://@designr/core/lib/slugs/slug.service.ts","ng://@designr/core/lib/slugs/slug-async.pipe.ts","ng://@designr/core/lib/slugs/slug.pipe.ts","ng://@designr/core/lib/translate/translate.pipe.ts","ng://@designr/core/lib/trust/safe-style.pipe.ts","ng://@designr/core/lib/trust/safe-url.pipe.ts","ng://@designr/core/lib/trust/trust.pipe.ts","ng://@designr/core/lib/core.module.ts","ng://@designr/core/lib/core.service.ts","ng://@designr/core/lib/labels/label.ts","ng://@designr/core/lib/models/document.ts","ng://@designr/core/lib/models/document.service.ts","ng://@designr/core/lib/models/entity.ts","ng://@designr/core/lib/models/feature.ts","ng://@designr/core/lib/models/identity.ts","ng://@designr/core/lib/models/menu-item.ts","ng://@designr/core/lib/models/taxonomy.ts"],"names":["StorageService","prototype","delete","name","exist","get","set","value","days","on","of","tryGet","this","Injectable","args","providedIn","CookieStorageService","platformId","storageService","isSupported","setter","document","cookie","indexOf","cookieName","ca","split","i","length","c","charAt","substring","model","JSON","parse","decodeURIComponent","atob","e","console","log","cache_1","json","stringify","key","push","btoa","encodeURIComponent","interval","timeout","elapsed","checkCookie","setTimeout","expires","date","Date","setTime","getTime","toUTCString","isPlatformBrowser","Inject","PLATFORM_ID","SessionStorageService","cookieStorageService","window","sessionStorage","removeItem","undefined","cache_2","setItem","supported","LocalStorageService","localStorage","cache_3","AuthToken","accessToken","expiresIn","AuthService","injector","localStorageService","cachedRequests","paths","setToken","authToken","retryFailedRequests","getToken","getFakeToken","isValid","now","isAuthenticated","collectFailedRequest","request","Injector","Bearer","Cookie","CoreTransitionConfig","options","Object","assign","CorePrebootConfig","CoreConfig","assets","authStrategy","AuthStrategy","defaultLanguage","defaultMarket","languages","id","lang","origin","pages","production","public","urlStrategy","useHash","useLang","useMarket","preboot","transition","defaultPage","notFoundPage","CORE_CONFIG","InjectionToken","ConfigService","decorators","type","DefaultContentDirective","element","container","renderer","hasContent","nativeElement","ngAfterContentChecked","childNodes","node","nodeType","clear","createEmbeddedView","default","Directive","selector","ElementRef","ViewContainerRef","Renderer2","Input","CoreModuleComponent","version","ngOnInit","Component","template","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__read","o","n","m","Symbol","iterator","r","call","ar","next","done","error","__spread","arguments","concat","DisposableComponent","unsubscribe","Subject","ngOnDestroy","complete","SegmentPipe","location","transform","segments","path","isArray","join","normalize","Pipe","Location","_super","LoggerError","tslib_1.__extends","HttpErrorResponse","Logger","configService","logs","_i","s","apply","warn","http","httpError","message","status","statusText","url","ApiRequestOptions","headers","HttpHeaders","Content-Type","params","HttpParams","ApiService","defineProperty","_logger","_http","HttpClient","_state","TransferState","_platformId","_config","_origin","config","base","collection","toLowerCase","getUrl","method","first","second","_this","pipe","tap","x","logger","post","third","put","patch","identity","toCamelCase","input","output","keyCamelCase","map","slice","toString","getStateKey","flatMap","substr","keys","k","replace","makeStateKey","stateGet","stateKey","state","hasKey","cached","remove","isPlatformServer","onSerialize","statePost","TranslateService","use","setDefaultLang","addLangs","getBrowserLang","RouteService","translateService","route","router","segment","_language","BehaviorSubject","language","asObservable","_languages","pageParams$","currentMarket","setLanguages","subscribeToRouter","_lang","getValue","find","getPageParams","queryParams","distinctUntilChanged","switchMap","parsed","parseParams","forEach","serializeParams","serialized","serialize","base64","Buffer","from","_a","object","getId","snapshot","paramMap","getSlug","toRoute","data","market","marketIndex","splice","langIndex","toSlug","filter","datas","toParams","toData","getParams","events","event","ActivationEnd","firstChild","concatMap","setLanguage","silent","replaceState","navigate","NavigationStart","subscribe","lang_1","detectLanguage","acceptLanguage","match","detectedLanguage","regexp","RegExp","performance","time","process","hrtime","ActivatedRoute","Router","PageComponent","scrollToTop","NavigationEnd","scrollTo","routeService","page","slug","PageNotFoundComponent","encapsulation","ViewEncapsulation","Emulated","HttpStatusCodeService","statusCode","redirectUrl","setStatusCode","getStatusCode","getRedirectUrl","IdentityService","getList","getDetailByIdNo404","identities","getDetailById","add","update","EntityService","getDetailByName","trim","Default","Gallery","Share","Image","LinkService","doc","addTag","definition","createElement","updateElementDefinition","head","appendChild","getTag","querySelector","updateTag","removeTag","updateElementAttribute","href","rel","attribute","setAttribute","removeAttribute","DOCUMENT","PageMeta","PageIndex","PageRelation","Page","meta","related","item","relationType","getFeature","features","getFeatures","Number","sort","a","getFeaturesByTypes","getGroupedFeaturesByTypes","groups","group","PageService","titleService","metaService","linkService","statusCodeService","getStatePageBySlug","catchError","getStatePageById","getPageById","getPageBySlug","addOrUpdateMetaData","setTitle","title","addOrUpdateMeta","property","content","getSocialImage","description","keywords","robots","locale","author","addOrUpdateLink","canonical","images","ImageType","Title","Meta","PageOutletComponent","viewContainerRef","componentFactoryResolver","pageService","routeReuseStrategy","shouldReuseRoute","setSnapshot","component","pageResolver","factory","resolveComponentFactory","instance","createComponent","resetConfig","ComponentFactoryResolver","PageResolver","PageResolverService","events$","pageToPageResolver","resolve","PageGuard","canActivate","canDeactivate","currentRoute","currentState","nextState","StaticGuard","routes","CoreRouting","NgModule","imports","RouterModule","forChild","exports","ControlComponent","reveal","checked","onChange","onTouched","form","controls","control","controlRef","valid","getFormattedValue","onInput","$event","target","onFocus","blurred","setProperty","onBlur","formatValue","parseValue","innervalue","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ControlService","getValidators","validators","min","Validators","max","required","requiredTrue","email","minLength","maxLength","pattern","matchValidator","otherKey","reverse","otherControl","errors","setErrors","toFormGroup","formControl","FormControl","disabled","disable","FormGroup","setValidators","ExistsValidator","values","debounced$","debounceTime","exists$","response","take","exists","validate","NG_ASYNC_VALIDATORS","ControlBaseOptions","ControlBase","_originalValue","uid","label","placeholder","order","schema","step","format","ControlCheckbox","ControlEmail","ControlMarkdown","ControlNumber","ControlPassword","ControlRadio","ControlSelect","ControlText","FormService","controlService","getControlsFromOptions","getGroupFromOptions","getGroupFromControls","MatchValidator","root","isReverse","NG_VALIDATORS","Attribute","UppercaseDirective","ngModelChange","EventEmitter","onInputChange","toUpperCase","emit","Output","HostListener","HighlightPipe","text","query","encodeHTML","regExp","escapeRegexChars","safeToString","HttpResponseInterceptor","_router","_routeService","intercept","handle","throwError","JsonFormatterComponent","ngOnChanges","isObject","elementRef","removeChild","require","render","ViewChild","CustomAsyncPipe","changeDetector","subject","subscription","cachedValue","observableToValue","dispose","markForCheck","WrappedValue","wrap","_observableToValue","pure","ChangeDetectorRef","LabelService","cache","collectedKeys","labels$","emitter","getTranslation","labels","getLabel","defaultValue","shift","parseLabel","missingLabel","missingHandler","replacer","getKey","enumerable","writable","items","register","collectKeys","collect","LabelAsyncPipe","labelService","asyncPipe","LabelDirective","innerHTML","labelParams","takeUntil","LabelPipe","ref","LoggerComponent","EventDispatcherService","observe","MenuService","OnceService","zone","script","callback","Event","callbackName_1","callback$","Promise","reject","async","fromEvent","scripts","getElementsByTagName","parentNode","insertBefore","nextSibling","src","NgZone","AssetPipe","unshift","ImagePipe","queryString","imageType","image","PublicPipe","RoutePipe","SlugService","slugs$","getSlugs","dictionary","mnemonic","SlugAsyncPipe","slugService","routePipe","slugs","SlugPipe","TranslatePipe","SafeStylePipe","sanitizer","style","bypassSecurityTrustStyle","DomSanitizer","SafeUrlPipe","bypassSecurityTrustResourceUrl","TrustPipe","bypassSecurityTrustHtml","modules","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","services","components","directives","pipes","guards","CoreModule","parentModule","Error","forRoot","ngModule","useValue","HTTP_INTERCEPTORS","useClass","declarations","Optional","SkipSelf","CoreService","Label","Document","DocumentIndex","DocumentService","getDetailBySlug","Entity","Feature","readmore","Identity","MenuItem","Taxonomy"],"mappings":"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","sourcesContent":["import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nconst TIMEOUT = 5 * 60 * 1000; // five minutes\n\n/*\nexport class StorageEvent extends Event {}\n\nexport class CookieStorageEvent extends StorageEvent { }\n\nexport class SessionStorageEvent extends StorageEvent { }\n\nexport class LocalStorageEvent extends StorageEvent { }\n*/\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class StorageService {\n\tpublic delete(name: string): void { }\n\tpublic exist(name: string): boolean { return false; }\n\tpublic get(name: string): any { return null; }\n\tpublic set(name: string, value: any, days?: number): void { }\n\tpublic on(): Observable<any> { return of(null); }\n\tpublic tryGet(): StorageService {\n\t\t// console.log('no StorageService available...');\n\t\treturn this;\n\t}\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CookieStorageService implements StorageService {\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate storageService: StorageService,\n\t) { }\n\n\tpublic tryGet(): StorageService {\n\t\tif (this.isSupported()) {\n\t\t\t// console.log('CookieStorageService.supported');\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn this.storageService.tryGet();\n\t\t}\n\t}\n\n\tpublic delete(name: string): void {\n\t\tthis.setter(name, '', -1);\n\t}\n\n\tpublic exist(name: string): boolean {\n\t\treturn document.cookie.indexOf(';' + name + '=') !== -1 || document.cookie.indexOf(name + '=') === 0;\n\t}\n\n\tpublic get(name: string): any {\n\t\tconst cookieName = name + '=';\n\t\tconst ca = document.cookie.split(';');\n\t\tfor (let i = 0; i < ca.length; i++) {\n\t\t\tlet c = ca[i];\n\t\t\twhile (c.charAt(0) === ' ') {\n\t\t\t\tc = c.substring(1, c.length);\n\t\t\t}\n\t\t\tif (c.indexOf(cookieName) === 0) {\n\t\t\t\tconst value = c.substring(cookieName.length, c.length);\n\t\t\t\tlet model = null;\n\t\t\t\ttry {\n\t\t\t\t\tmodel = JSON.parse(decodeURIComponent(atob(value)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.log('Cookie.get.error parsing', name, e);\n\t\t\t\t}\n\t\t\t\treturn model;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic set(name: string, value: any, days?: number) {\n\t\ttry {\n\t\t\tlet cache = [];\n\t\t\tconst json = JSON.stringify(value, function (key, value) {\n\t\t\t\tif (key === 'pool') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (typeof value === 'object' && value !== null) {\n\t\t\t\t\tif (cache.indexOf(value) !== -1) {\n\t\t\t\t\t\t// throw (new Error('circular reference found, discard key'));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcache.push(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t\tcache = null;\n\t\t\tthis.setter(name, btoa(encodeURIComponent(json)), days);\n\t\t} catch (e) {\n\t\t\tconsole.log('CookieSet.error serializing', name, value, e);\n\t\t}\n\t}\n\n\tpublic on(): Observable<any> {\n\t\t// todo\n\t\tconst interval: number = 1000, timeout: number = TIMEOUT;\n\t\tlet i, elapsed: number = 0;\n\t\tfunction checkCookie() {\n\t\t\tif (elapsed > timeout) {\n\t\t\t\t// promise.reject('timeout');\n\t\t\t} else {\n\t\t\t\tconst c: any = this.get(name);\n\t\t\t\tif (c) {\n\t\t\t\t\t// promise.resolve(c);\n\t\t\t\t} else {\n\t\t\t\t\telapsed += interval;\n\t\t\t\t\ti = setTimeout(checkCookie, interval);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcheckCookie();\n\t\treturn of(null);\n\t}\n\n\tprivate setter(name: string, value: any, days?: number) {\n\t\tlet expires;\n\t\tif (days) {\n\t\t\tconst date = new Date();\n\t\t\tdate.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n\t\t\texpires = '; expires=' + date.toUTCString();\n\t\t} else {\n\t\t\texpires = '';\n\t\t}\n\t\tdocument.cookie = name + '=' + value + expires + '; path=/';\n\t}\n\n\tprivate isSupported(): boolean {\n\t\treturn isPlatformBrowser(this.platformId);\n\t}\n\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SessionStorageService implements StorageService {\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate cookieStorageService: CookieStorageService,\n\t) { }\n\n\tpublic tryGet(): StorageService {\n\t\tif (this.isSupported()) {\n\t\t\t// console.log('SessionStorageService.supported');\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn this.cookieStorageService.tryGet();\n\t\t}\n\t}\n\n\tpublic delete(name: string): void {\n\t\twindow.sessionStorage.removeItem(name);\n\t}\n\n\tpublic exist(name: string): boolean {\n\t\treturn window.sessionStorage[name] !== undefined;\n\t}\n\n\tpublic get(name: string): any {\n\t\tlet value = null;\n\t\tif (window.sessionStorage[name] !== undefined) {\n\t\t\ttry {\n\t\t\t\tvalue = JSON.parse(window.sessionStorage[name]);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log('SessionStorage.get.error parsing', name, e);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\tpublic on(): Observable<any> {\n\t\t/*\n\t\treturn $promise(function (promise) {\n\t\t\tconst timeout = TIMEOUT;\n\t\t\tlet i;\n\t\t\tfunction storageEvent(e) {\n\t\t\t\tif (i) {\n\t\t\t\t\tclearTimeout(i);\n\t\t\t\t}\n\t\t\t\tif (e.originalEvent.key === name) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet value = JSON.parse(e.originalEvent.newValue);\n\t\t\t\t\t\tpromise.resolve(value);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.log('SessionStorage.on.error parsing', name, error);\n\t\t\t\t\t\tpromise.reject('error parsing ' + name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// return fromEvent(window, 'storage');\n\t\t\tangular.element(window).on('storage', storageEvent);\n\t\t\ti = setTimeout(function () {\n\t\t\t\tpromise.reject('timeout');\n\t\t\t}, timeout);\n\t\t});\n\t\t*/\n\t\treturn of(null);\n\t}\n\n\tpublic set(name: string, value: any, days?: number): void {\n\t\ttry {\n\t\t\tlet cache = [];\n\t\t\tconst json = JSON.stringify(value, function (key, value) {\n\t\t\t\tif (key === 'pool') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (typeof value === 'object' && value !== null) {\n\t\t\t\t\tif (cache.indexOf(value) !== -1) {\n\t\t\t\t\t\t// throw (new Error('circular reference found, discard key'));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcache.push(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t\tcache = null;\n\t\t\twindow.sessionStorage.setItem(name, json);\n\t\t} catch (e) {\n\t\t\tconsole.log('SessionStorage.set.error serializing', name, value, e);\n\t\t}\n\t}\n\n\tprivate isSupported(): boolean {\n\t\tlet supported: boolean = false;\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\ttry {\n\t\t\t\tsupported = 'sessionStorage' in window && window.sessionStorage !== null;\n\t\t\t\tif (supported) {\n\t\t\t\t\twindow.sessionStorage.setItem('test', '1');\n\t\t\t\t\twindow.sessionStorage.removeItem('test');\n\t\t\t\t} else {\n\t\t\t\t\tsupported = false;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tsupported = false;\n\t\t\t}\n\t\t}\n\t\treturn supported;\n\t}\n\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LocalStorageService implements StorageService {\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate cookieStorageService: CookieStorageService,\n\t) { }\n\n\tpublic tryGet(): StorageService {\n\t\tif (this.isSupported()) {\n\t\t\t// console.log('LocalStorageService.supported');\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn this.cookieStorageService.tryGet();\n\t\t}\n\t}\n\n\tpublic delete(name: string): void {\n\t\twindow.localStorage.removeItem(name);\n\t}\n\n\tpublic exist(name: string): boolean {\n\t\treturn window.localStorage[name] !== undefined;\n\t}\n\n\tpublic get(name: string): any {\n\t\tlet value = null;\n\t\tif (window.localStorage[name] !== undefined) {\n\t\t\ttry {\n\t\t\t\tvalue = JSON.parse(window.localStorage[name]);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log('LocalStorage.get.error parsing', name, e);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\tpublic on(): Observable<any> {\n\t\t/*\n\t\treturn $promise(function (promise) {\n\t\t\tconst timeout = TIMEOUT;\n\t\t\tlet i;\n\t\t\tfunction storageEvent(e) {\n\t\t\t\tif (i) {\n\t\t\t\t\tclearTimeout(i);\n\t\t\t\t}\n\t\t\t\tif (e.originalEvent.key === name) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet value = JSON.parse(e.originalEvent.newValue);\n\t\t\t\t\t\tpromise.resolve(value);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.log('LocalStorage.on.error parsing', name, error);\n\t\t\t\t\t\tpromise.reject('error parsing ' + name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// return fromEvent(window, 'storage');\n\t\t\tangular.element(window).on('storage', storageEvent);\n\t\t\ti = setTimeout(function () {\n\t\t\t\tpromise.reject('timeout');\n\t\t\t}, timeout);\n\t\t});\n\t\t*/\n\t\treturn of(null);\n\t}\n\n\tpublic set(name: string, value: any, days?: number): void {\n\t\ttry {\n\t\t\tlet cache = [];\n\t\t\tconst json = JSON.stringify(value, function (key, value) {\n\t\t\t\tif (key === 'pool') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (typeof value === 'object' && value !== null) {\n\t\t\t\t\tif (cache.indexOf(value) !== -1) {\n\t\t\t\t\t\t// throw (new Error('circular reference found, discard key'));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcache.push(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t\tcache = null;\n\t\t\twindow.localStorage.setItem(name, json);\n\t\t} catch (e) {\n\t\t\tconsole.log('LocalStorage.set.error serializing', name, value, e);\n\t\t}\n\t}\n\n\tprivate isSupported(): boolean {\n\t\tlet supported: boolean = false;\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\ttry {\n\t\t\t\tsupported = 'localStorage' in window && window.localStorage !== null;\n\t\t\t\tif (supported) {\n\t\t\t\t\twindow.localStorage.setItem('test', '1');\n\t\t\t\t\twindow.localStorage.removeItem('test');\n\t\t\t\t} else {\n\t\t\t\t\tsupported = false;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tsupported = false;\n\t\t\t}\n\t\t}\n\t\treturn supported;\n\t}\n\n}\n","import { HttpRequest } from '@angular/common/http';\nimport { Inject, Injectable, Injector, PLATFORM_ID } from '@angular/core';\nimport { LocalStorageService } from '../storage/storage.service';\n\nexport class AuthToken {\n\tconstructor(\n\t\tpublic accessToken: string,\n\t\tpublic expiresIn: number = 0\n\t) { }\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthService {\n\n\tprivate cachedRequests: Array<HttpRequest<any>> = [];\n\tprivate paths: string[] = [];\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate injector: Injector,\n\t\tprivate localStorageService: LocalStorageService,\n\t) { }\n\n\tsetToken(authToken: AuthToken): void {\n\t\tthis.localStorageService.set('authToken', authToken);\n\t\tthis.retryFailedRequests();\n\t}\n\n\tgetToken(): AuthToken {\n\t\treturn this.localStorageService.get('authToken') as AuthToken;\n\t}\n\n\tgetFakeToken(): AuthToken {\n\t\treturn new AuthToken('fakeToken');\n\t}\n\n\tisValid(authToken: AuthToken): boolean {\n\t\t// return a boolean reflecting whether or not the token is expired\n\t\treturn authToken && (authToken.expiresIn > Date.now() || authToken.expiresIn === 0);\n\t}\n\n\tisAuthenticated(): boolean {\n\t\tconst authToken = this.getToken();\n\t\treturn this.isValid(authToken);\n\t}\n\n\tcollectFailedRequest(request): void {\n\t\tthis.cachedRequests.push(request);\n\t}\n\n\tretryFailedRequests(): void {\n\t\t// this method can be called after the token is refreshed\n\t\t// console.log('AuthService.retryFailedRequests');\n\t\t// retry the requests.\n\t}\n\n}\n","import { InjectionToken, Type } from '@angular/core';\nimport { PageComponent } from '../pages/page.component';\nimport { Pages } from '../pages/pages';\n\nexport enum AuthStrategy {\n\tBearer = 0,\n\tCookie = 1,\n}\n\nexport class Language {\n\tid?: number;\n\tname?: string;\n\tlang?: string;\n}\n\nexport class CoreTransitionConfig {\n\tappId?: string;\n\n\tconstructor(options?: CoreTransitionConfig) {\n\t\tconsole.log('CoreTransitionConfig', options);\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t}\n}\n\nexport class CorePrebootConfig {\n\tappRoot?: string;\n\n\tconstructor(options?: CorePrebootConfig) {\n\t\tconsole.log('CorePrebootConfig', options);\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t}\n}\n\nexport class CoreConfig {\n\tassets?: string = '';\n\tauthStrategy?: AuthStrategy = AuthStrategy.Cookie;\n\tdefaultLanguage?: string = 'it';\n\tdefaultMarket?: string = 'it';\n\tdefaultPage?: Type<PageComponent>;\n\teditor?: boolean;\n\tenableTracing?: boolean;\n\tlanguages?: Language[] = [{ id: 1, name: 'Italiano', lang: 'it' }];\n\tnotFoundPage?: Type<PageComponent>;\n\torigin?: string = '';\n\tpages?: Pages = {};\n\tpreboot?: CorePrebootConfig;\n\tproduction?: boolean = false;\n\tpublic?: string = '';\n\ttransition?: CoreTransitionConfig;\n\turlStrategy?: string = '';\n\tuseHash?: boolean = true;\n\tuseLang?: boolean = false;\n\tuseMarket?: boolean = false;\n\tuseServiceWorker?: boolean;\n\n\tconstructor(options?: CoreConfig) {\n\t\tconsole.log('CoreConfig', options);\n\t\tif (options) {\n\t\t\tthis.pages = options.pages || {};\n\t\t\tthis.preboot = new CorePrebootConfig(options.preboot);\n\t\t\tthis.transition = new CoreTransitionConfig(options.transition);\n\t\t\tthis.defaultPage = options.defaultPage;\n\t\t\tthis.notFoundPage = options.notFoundPage;\n\t\t} else {\n\t\t\tthis.preboot = new CorePrebootConfig();\n\t\t\tthis.transition = new CoreTransitionConfig();\n\t\t}\n\t}\n}\n\nexport const CORE_CONFIG = new InjectionToken<CoreConfig>('core.config');\n","\nimport { Inject, Injectable } from '@angular/core';\nimport { CoreConfig, CORE_CONFIG } from './core.config';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ConfigService {\n\n\tpublic options: CoreConfig;\n\n\tconstructor(\n\t\t@Inject(CORE_CONFIG) options: CoreConfig\n\t) {\n\t\tconsole.log('ConfigService', options);\n\t\toptions = options || {};\n\t\t// options.defaultPage = (options.defaultPage || PageNotFoundComponent) as Type<PageComponent>;\n\t\t// options.notFoundPage = (options.notFoundPage || PageNotFoundComponent) as Type<PageComponent>;\n\t\tthis.options = new CoreConfig(options);\n\t}\n\n}\n","import { AfterContentChecked, Directive, ElementRef, Input, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n\tselector: '[default]',\n})\nexport class DefaultContentDirective implements AfterContentChecked {\n\n\t@Input() default: TemplateRef<any>;\n\tprivate element: HTMLElement;\n\tprivate hasContent = true;\n\n\tconstructor(\n\t\telement: ElementRef,\n\t\tprivate container: ViewContainerRef,\n\t\tprivate renderer: Renderer2) {\n\t\tthis.element = element.nativeElement;\n\t}\n\n\tngAfterContentChecked(): void {\n\t\tlet hasContent = false;\n\t\tconsole.log('DefaultContentDirective', this.element.childNodes);\n\t\tfor (let i = this.element.childNodes.length - 1; i >= 0; --i) {\n\t\t\tconst node = this.element.childNodes[i];\n\t\t\tif (node.nodeType === 1 || node.nodeType === 3) {\n\t\t\t\thasContent = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (hasContent !== this.hasContent) {\n\t\t\tthis.hasContent = hasContent;\n\t\t\tif (hasContent) {\n\t\t\t\t// this.renderer.removeClass(this.element, 'is-empty');\n\t\t\t\tthis.container.clear();\n\t\t\t} else {\n\t\t\t\t// this.renderer.addClass(this.element, 'is-empty');\n\t\t\t\tthis.container.createEmbeddedView(this.default);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'core-module',\n\ttemplate: `<span class=\"core-module\">core {{version}}</span>`,\n\tstyles: []\n})\nexport class CoreModuleComponent implements OnInit {\n\n\tversion: string = '0.0.2';\n\n\tconstructor() { }\n\n\tngOnInit() {\n\t}\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nimport { Component, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n\ttemplate: ''\n})\nexport class DisposableComponent implements OnDestroy {\n\n\tprotected unsubscribe: any = new Subject();\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe.next();\n\t\tthis.unsubscribe.complete();\n\t\t// console.log('DisposableComponent.ngOnDestroy', this);\n\t}\n\n}\n","\nimport { Location } from '@angular/common';\nimport { Injectable, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'segment',\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SegmentPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate location: Location\n\t) { }\n\n\ttransform(segments: any[] | string): any[] {\n\t\tsegments = segments != null ? (Array.isArray(segments) ? segments : segments.split('/')) : [];\n\t\tlet path: string = segments.join('/');\n\t\tpath = this.location.normalize(path);\n\t\tif (path.indexOf('/') !== 0) {\n\t\t\tpath = `/${path}`;\n\t\t}\n\t\tsegments = path.split('/');\n\t\treturn segments;\n\t}\n\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ConfigService } from '../config/config.service';\n\nexport class LoggerError extends HttpErrorResponse {\n\tbody?: any;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class Logger {\n\n\thttpError: LoggerError;\n\tlogs: string[] = [];\n\n\tconstructor(\n\t\tprivate configService: ConfigService,\n\t) {\n\t\t//\n\t}\n\n\trequest(...args: any[]) {\n\t\tif (!this.configService.options.production) {\n\t\t\tconst s = args.join(', ');\n\t\t\tthis.logs.push(s);\n\t\t\t// console.log.apply(this, ['%c %s', 'background: #dddddd; color: #111'].concat(args));\n\t\t}\n\t}\n\n\tlog(...args: any[]) {\n\t\tif (!this.configService.options.production) {\n\t\t\tconst s = args.join(', ');\n\t\t\tthis.logs.push(s);\n\t\t\tconsole.log.apply(this, ['%c%s', 'background: #1976d2; color: #fff; border-radius: 3px; padding: 4px 8px; margin-bottom: 4px;'].concat(args));\n\t\t}\n\t}\n\n\twarn(...args: any[]) {\n\t\tif (!this.configService.options.production) {\n\t\t\tconst s = args.join(', ');\n\t\t\tthis.logs.push(s);\n\t\t\tconsole.log.apply(this, ['%c%s', 'background: #ff5500; color: #fff'].concat(args));\n\t\t}\n\t}\n\n\terror(...args: any[]) {\n\t\tif (!this.configService.options.production) {\n\t\t\tconst s = args.join(', ');\n\t\t\tthis.logs.push(s);\n\t\t\tconsole.error.apply(console, args);\n\t\t}\n\t}\n\n\thttp(error: HttpErrorResponse) {\n\t\tthis.httpError = error;\n\t\tif (!this.configService.options.production) {\n\t\t\tthis.logs.push(error.message);\n\t\t}\n\t\tconsole.warn('Logger.http.error', error.status, error.statusText, error.url);\n\t}\n\n\tclear() {\n\t\tthis.httpError = null;\n\t\tthis.logs = [];\n\t}\n}\n","import { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable, Injector, PLATFORM_ID } from '@angular/core';\nimport { makeStateKey, StateKey, TransferState } from '@angular/platform-browser';\nimport { Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ConfigService } from '../config/config.service';\nimport { CoreConfig } from '../config/core.config';\nimport { Logger } from '../logger/logger';\nimport { Identity } from '../models/identity';\n\nexport class ApiRequestOptions {\n\theaders?: HttpHeaders;\n\tparams?: HttpParams;\n\tconstructor(options?: {}) {\n\t\tthis.headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\t\tthis.params = options ? new HttpParams(options) : null;\n\t}\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ApiService<T extends Identity> {\n\n\tget collection(): string {\n\t\treturn '/api';\n\t}\n\n\tprivate _logger: Logger;\n\tget logger(): Logger {\n\t\tif (!this._logger) {\n\t\t\tthis._logger = this.injector.get(Logger);\n\t\t}\n\t\treturn this._logger;\n\t}\n\n\tprivate _http: HttpClient;\n\tget http(): HttpClient {\n\t\tif (!this._http) {\n\t\t\tthis._http = this.injector.get(HttpClient);\n\t\t}\n\t\treturn this._http;\n\t}\n\n\tprivate _state: TransferState;\n\tget state(): TransferState {\n\t\tif (!this._state) {\n\t\t\tthis._state = this.injector.get(TransferState);\n\t\t}\n\t\treturn this._state;\n\t}\n\n\tprivate _platformId: string;\n\tget platformId(): string {\n\t\tif (!this._platformId) {\n\t\t\tthis._platformId = this.injector.get<string>(PLATFORM_ID);\n\t\t}\n\t\treturn this._platformId;\n\t}\n\n\tprivate _config: CoreConfig;\n\tget config(): CoreConfig {\n\t\tif (!this._config) {\n\t\t\tthis._config = this.injector.get(ConfigService).options;\n\t\t}\n\t\treturn this._config;\n\t}\n\n\tprivate _origin: string;\n\tget origin(): string {\n\t\tif (!this._origin) {\n\t\t\tthis._origin = this.config.origin;\n\t\t}\n\t\treturn this._origin;\n\t}\n\n\tget url(): string {\n\t\tlet base: string = this.origin;\n\t\tconst collection = this.collection.toLowerCase();\n\t\tif (collection.indexOf('http') === 0) {\n\t\t\tbase = '';\n\t\t}\n\t\treturn `${base}${collection}`;\n\t}\n\n\tconstructor(\n\t\tprotected injector: Injector\n\t) { }\n\n\tgetUrl(method: string = ''): string {\n\t\treturn `${this.url}${method}`;\n\t}\n\n\tget(first?: string | {}, second?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst params: {} = (typeof first === 'object' ? first : second);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\treturn this.http.get<T>(url, options).pipe(\n\t\t\ttap(x => this.logger.request(url)),\n\t\t);\n\t}\n\n\tpost(first: string | {}, second?: {}, third?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst model: {} = (typeof first === 'object' ? first : second);\n\t\tconst params: {} = (typeof second === 'object' ? second : third);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\treturn this.http.post<T>(url, model, options).pipe(\n\t\t\ttap(x => this.logger.request(url)),\n\t\t);\n\t}\n\n\tput(first: string | T, second?: T | {}, third?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst model: T = (typeof first === 'object' ? first : second) as T;\n\t\tconst params: {} = (typeof second === 'object' ? second : third);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\treturn this.http.put<T>(url, model, options).pipe(\n\t\t\ttap(x => this.logger.request(url)),\n\t\t);\n\t}\n\n\tpatch(first: string | T, second?: T | {}, third?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst model: T = (typeof first === 'object' ? first : second) as T;\n\t\tconst params: {} = (typeof second === 'object' ? second : third);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\treturn this.http.patch<T>(url, model, options).pipe(\n\t\t\ttap(x => this.logger.request(url)),\n\t\t);\n\t}\n\n\tdelete(first: string | T | number, second?: T | number | {}, third?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst identity: T | number = (typeof first !== 'string' ? first : second) as T | number;\n\t\tconst id = identity ? (typeof identity === 'number' ? identity : identity.id) : null;\n\t\tconst params: {} = (typeof second === 'object' ? second : third);\n\t\tconst url: string = id !== null ? this.getUrl(`${method}/${id}`) : this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\treturn this.http.delete<T[]>(url, options).pipe(\n\t\t\ttap(x => this.logger.request(url)),\n\t\t);\n\t}\n\n\ttoCamelCase(input: any): any {\n\t\tlet output, key, keyCamelCase, value;\n\t\tif (input instanceof Array) {\n\t\t\treturn input.map((value: any) => {\n\t\t\t\tif (typeof value === 'object') {\n\t\t\t\t\tvalue = this.toCamelCase(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t} else {\n\t\t\toutput = {};\n\t\t\tfor (key in input) {\n\t\t\t\tif (input.hasOwnProperty(key)) {\n\t\t\t\t\tkeyCamelCase = (key.charAt(0).toLowerCase() + key.slice(1) || key).toString();\n\t\t\t\t\tvalue = input[key];\n\t\t\t\t\tif (value instanceof Array || (value !== null && value.constructor === Object)) {\n\t\t\t\t\t\tvalue = this.toCamelCase(value);\n\t\t\t\t\t}\n\t\t\t\t\toutput[keyCamelCase] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// TRANSFER STATE\n\n\tgetStateKey(url: string, model: {}): StateKey<T> {\n\t\tconst flatMap = (s: string, x: any) => {\n\t\t\tif (typeof x === 'number') {\n\t\t\t\ts += x.toString();\n\t\t\t} else if (typeof x === 'string') {\n\t\t\t\ts += x.substr(0, 10);\n\t\t\t} else if (x && typeof x === 'object') {\n\t\t\t\ts += '_' + Object.keys(x).map(k => k + '_' + flatMap('', x[k])).join('_');\n\t\t\t}\n\t\t\treturn s;\n\t\t};\n\t\turl = flatMap(url, model);\n\t\t// console.log('ApiService.getStateKey.url', url);\n\t\tconst key: string = url.replace(/(\\W)/gm, '_');\n\t\t// this.logger.log('ApiService.getStateKey.key', key);\n\t\treturn makeStateKey(key);\n\t}\n\n\tstateGet(first?: string | {}, second?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst params: {} = (typeof first === 'object' ? first : second);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\tconst stateKey = this.getStateKey(url, params);\n\t\tif (isPlatformBrowser(this.platformId) && this.state.hasKey(stateKey)) {\n\t\t\tconst cached = this.state.get(stateKey, null);\n\t\t\tthis.state.remove(stateKey);\n\t\t\treturn of(cached);\n\t\t} else {\n\t\t\treturn this.http.get<T>(url, options).pipe(\n\t\t\t\ttap(x => {\n\t\t\t\t\tif (isPlatformServer(this.platformId)) {\n\t\t\t\t\t\tthis.state.onSerialize(stateKey, () => x);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n\n\tstatePost(first: string | {}, second?: {}, third?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst model: {} = (typeof first === 'object' ? first : second);\n\t\tconst params: {} = (typeof second === 'object' ? second : third);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\tconst stateKey = this.getStateKey(url, model);\n\t\tif (isPlatformBrowser(this.platformId) && this.state.hasKey(stateKey)) {\n\t\t\tconst cached = this.state.get(stateKey, null);\n\t\t\tthis.state.remove(stateKey);\n\t\t\treturn of(cached);\n\t\t} else {\n\t\t\treturn this.http.post<T>(url, model, options).pipe(\n\t\t\t\ttap(x => {\n\t\t\t\t\tif (isPlatformServer(this.platformId)) {\n\t\t\t\t\t\tthis.state.onSerialize(stateKey, () => x);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { ApiService } from '../api/api.service';\n\nexport class Translate {\n\tid: string;\n\tvalue?: string;\n\tdefaultValue?: string;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class TranslateService extends ApiService<Translate>  {\n\n\tget collection(): string {\n\t\treturn '/api/translate';\n\t}\n\n\tconstructor(\n\t\tprotected injector: Injector\n\t) {\n\t\tsuper(injector);\n\t}\n\n\tpublic use(lang: string) {\n\n\t}\n\n\tpublic setDefaultLang(lang: string) {\n\n\t}\n\n\tpublic addLangs(lang: string[]) {\n\n\t}\n\n\tpublic getBrowserLang(): string {\n\t\treturn 'it';\n\t}\n}\n","\n\nimport { isPlatformBrowser, isPlatformServer, Location } from '@angular/common';\nimport { ComponentFactory, Inject, Injectable, Injector, PLATFORM_ID } from '@angular/core';\nimport { ActivatedRoute, ActivationEnd, NavigationStart, Params, Router } from '@angular/router';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { concatMap, distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\nimport { ConfigService } from '../config/config.service';\nimport { Page } from '../pages/page';\nimport { PageComponent } from '../pages/page.component';\nimport { SegmentPipe } from '../pipes/segment.pipe';\nimport { TranslateService } from '../translate/translate.service';\n\ndeclare const Buffer;\ndeclare const process;\n\n// @dynamic\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class RouteService {\n\n\tstatic startTime: number;\n\tstatic endTime: number;\n\tprivate urlStrategy: string;\n\tprivate _language: any = new BehaviorSubject({});\n\tpublic readonly language: Observable<any> = this._language.asObservable();\n\tprivate _languages: BehaviorSubject<Array<any>> = new BehaviorSubject([]);\n\tpublic readonly languages: Observable<any[]> = this._languages.asObservable();\n\tprivate _lang: string;\n\tprivate path: string;\n\tpublic page: Page;\n\tpublic params: Observable<Params>;\n\tpublic queryParams: Observable<Params>;\n\tpublic currentMarket: string;\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate configService: ConfigService,\n\t\tprivate injector: Injector,\n\t\tprivate translateService: TranslateService,\n\t\tprivate location: Location,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate router: Router,\n\t\tprivate segment: SegmentPipe,\n\t) {\n\t\tthis.urlStrategy = this.configService.options.urlStrategy;\n\t\tthis._languages.next(this.configService.options.languages);\n\t\tthis.currentMarket = this.configService.options.defaultMarket;\n\t\tthis.setLanguages();\n\t\tif (this.configService.options.useLang || this.configService.options.useMarket) {\n\t\t\tthis.subscribeToRouter();\n\t\t}\n\t}\n\n\tprivate get lang(): string {\n\t\treturn this._lang;\n\t}\n\n\tprivate set lang(lang: string) {\n\t\tif (lang !== this._lang) {\n\t\t\tthis._lang = lang;\n\t\t\tconst language = this._languages.getValue().find(x => x.lang === lang);\n\t\t\tthis._language.next(language);\n\t\t\tthis.translateService.use(lang);\n\t\t\t// console.log('RouteService.set lang', lang, this.configService.options.useLang);\n\t\t\tif (this.configService.options.useLang) {\n\t\t\t\tconst _lang: string = this._lang;\n\t\t\t\tlet path = this.location.path();\n\t\t\t\tif (path.indexOf(`/${_lang}`) === 0) {\n\t\t\t\t\tpath = path.replace(`/${_lang}`, `/${lang}`);\n\t\t\t\t} else if (path.indexOf(`/${lang}`) !== 0) {\n\t\t\t\t\tpath = `/${lang}` + path;\n\t\t\t\t}\n\t\t\t\tthis.path = path;\n\t\t\t\t// const langIndex = this.urlStrategy.split('/').indexOf(':lang');\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get currentLang(): string {\n\t\treturn this._lang;\n\t}\n\n\tpublic pageParams$: BehaviorSubject<Params> = new BehaviorSubject({});\n\tpublic getPageParams(): Observable<Params> {\n\t\t// console.log('RouteService.getPageParams', this.router.url);\n\t\treturn this.route.queryParams.pipe(\n\t\t\tdistinctUntilChanged(),\n\t\t\tswitchMap(params => {\n\t\t\t\t// console.log(params);\n\t\t\t\tconst parsed = this.parseParams(params);\n\t\t\t\tthis.pageParams$.next(parsed);\n\t\t\t\treturn of(parsed);\n\t\t\t}),\n\t\t\t// tap(params => console.log('RouteService.getPageParams', params)),\n\t\t);\n\t}\n\n\tpublic parseParams(params: any): any {\n\t\tconst parsed = {};\n\t\tObject.keys(params).forEach(k => parsed[k] = this.parse(params[k]));\n\t\t/*\n\t\tfor (const key in params) {\n\t\t\tif (typeof (params[key]) === 'string') {\n\t\t\t\tparsed[key] = this.parse(params[key]);\n\t\t\t} else {\n\t\t\t\tparsed[key] = params[key];\n\t\t\t}\n\t\t}\n\t\t*/\n\t\treturn parsed;\n\t}\n\n\tpublic serializeParams(params: any) {\n\t\tconst serialized = {};\n\t\tObject.keys(params).forEach(k => serialized[k] = this.serialize(params[k]));\n\t\treturn serialized;\n\t}\n\n\tpublic parse(base64) {\n\t\ttry {\n\t\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\t\treturn JSON.parse(window.atob(base64));\n\t\t\t} else {\n\t\t\t\treturn JSON.parse(Buffer.from(base64, 'base64').toString('ascii'));\n\t\t\t}\n\t\t} catch {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic serialize(object) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\treturn window.btoa(JSON.stringify(object));\n\t\t} else {\n\t\t\treturn Buffer.from(JSON.stringify(object), 'ascii').toString('base64');\n\t\t}\n\t}\n\n\tpublic getId(): number {\n\t\treturn +this.route.snapshot.paramMap.get('id');\n\t}\n\n\tpublic getSlug(): string {\n\t\treturn this.route.snapshot.paramMap.get('slug');\n\t}\n\n\tpublic toRoute(data: any[] | string): any[] {\n\t\tconst segments = this.segment.transform(data);\n\t\tif (this.configService.options.useMarket) {\n\t\t\tconst market: string = this.currentMarket;\n\t\t\tconst marketIndex = this.urlStrategy.split('/').indexOf(':market');\n\t\t\tsegments.splice(marketIndex, 0, market);\n\t\t}\n\t\tif (this.configService.options.useLang) {\n\t\t\tconst lang: string = this._lang;\n\t\t\tconst langIndex = this.urlStrategy.split('/').indexOf(':lang');\n\t\t\tsegments.splice(langIndex, 0, lang);\n\t\t}\n\t\t// console.log('RouteService.toRoute', segments);\n\t\treturn segments;\n\t}\n\n\tpublic toSlug(data: any[] | string): any[] {\n\t\tconst segments = this.segment.transform(data);\n\t\tlet paths = segments.filter(x => {\n\t\t\treturn typeof x === 'string';\n\t\t});\n\t\tconst datas = segments.filter(x => {\n\t\t\treturn typeof x !== 'string';\n\t\t});\n\t\tif (this.configService.options.useMarket) {\n\t\t\tconst marketIndex = this.urlStrategy.split('/').indexOf(':market');\n\t\t\tif (paths.length > marketIndex) {\n\t\t\t\tpaths[marketIndex] = '*';\n\t\t\t}\n\t\t}\n\t\tif (this.configService.options.useLang) {\n\t\t\tconst langIndex = this.urlStrategy.split('/').indexOf(':lang');\n\t\t\tif (paths.length > langIndex) {\n\t\t\t\tpaths[langIndex] = '*';\n\t\t\t}\n\t\t}\n\t\tpaths = paths.join('/').replace(/\\/\\*/gi, '').split('/');\n\t\t// console.log('RouteService.toSlug', data, paths);\n\t\treturn paths.concat(datas);\n\t}\n\n\tpublic toParams(data: any): any {\n\t\treturn {\n\t\t\tdata: window.btoa(JSON.stringify(data))\n\t\t};\n\t}\n\n\tpublic toData(params: any): any {\n\t\tif (params && params.data) {\n\t\t\treturn JSON.parse(window.atob(params.data));\n\t\t}\n\t}\n\n\tpublic getParams(): Observable<ComponentFactory<PageComponent>> {\n\t\treturn this.router.events.pipe(\n\t\t\tfilter(event => event instanceof ActivationEnd),\n\t\t\tmap(() => this.route),\n\t\t\tdistinctUntilChanged(),\n\t\t\tmap(route => route.firstChild),\n\t\t\tswitchMap(route => route.params),\n\t\t\t/*\n\t\t\ttap((params) => {\n\t\t\t\t// console.log('getParams', params);\n\t\t\t}),\n\t\t\t*/\n\t\t\tconcatMap(x => {\n\t\t\t\treturn of(this.toData(x));\n\t\t\t})\n\t\t);\n\t}\n\n\tpublic setLanguage(lang: string, silent?: boolean) {\n\t\tthis.lang = lang;\n\t\tif (this.configService.options.useLang && this.path) {\n\t\t\t// console.log('RouteService.setLanguage', this.path, this._lang, lang, silent);\n\t\t\tif (silent) {\n\t\t\t\tthis.location.replaceState(this.path);\n\t\t\t} else {\n\t\t\t\tthis.router.navigate([this.path]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// PRIVATE METHODS\n\n\tprivate setLanguages() {\n\t\tthis.translateService.addLangs(this.configService.options.languages ? this.configService.options.languages.map(x => x.lang) : []);\n\t\tthis.translateService.setDefaultLang(this.configService.options.defaultLanguage);\n\t\t// this.setLanguage(this.detectLanguage(), true);\n\t\tthis.setLanguage(this.configService.options.defaultLanguage, true);\n\t\t/*\n\t\tthis.translateService.onLangChange.subscribe((e: LangChangeEvent) => {\n\t\t\t// console.log('RouteService.onLangChange', e);\n\t\t});\n\t\t*/\n\t}\n\n\tprivate subscribeToRouter() {\n\t\tthis.router.events.pipe(\n\t\t\tfilter(event => event instanceof NavigationStart)\n\t\t).subscribe((event: NavigationStart) => {\n\t\t\tconst location = this.location.normalize(event.url).split('/');\n\t\t\tif (this.configService.options.useMarket) {\n\t\t\t\tconst marketIndex = this.urlStrategy.split('/').indexOf(':market');\n\t\t\t\tconst market = location[marketIndex];\n\t\t\t\tif (market !== this.currentMarket) {\n\t\t\t\t\tthis.currentMarket = market;\n\t\t\t\t\t// console.log('RouteService.setMarket', market, event.url);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.configService.options.useLang) {\n\t\t\t\tconst langIndex = this.urlStrategy.split('/').indexOf(':lang');\n\t\t\t\tconst lang = location[langIndex];\n\t\t\t\tif (lang !== this._lang) {\n\t\t\t\t\tconst language = this._languages.getValue().find(x => x.lang === lang);\n\t\t\t\t\tthis._language.next(language);\n\t\t\t\t\tthis.translateService.use(lang);\n\t\t\t\t\t// console.log('RouteService.setLang', lang, this._lang, langIndex, location, event.url);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate detectLanguage(): string {\n\t\tlet acceptLanguage: string = null;\n\t\tif (isPlatformServer(this.platformId)) {\n\t\t\t/*\n\t\t\t// server side express engine\n\t\t\tapp.engine('html',  (_, options, callback) => {\n\t\t\t\tlet engine = ngExpressEngine({\n\t\t\t\t\tbootstrap: ServerAppModule,\n\t\t\t\t\tproviders: [ { provide: 'request', useFactory: () => options.req } ]\n\t\t\t\t});\n\t\t\t\tengine(_, options, callback)\n\t\t\t})\n\t\t\t*/\n\t\t\tconst request = this.injector.get('request');\n\t\t\tif (request) {\n\t\t\t\tacceptLanguage = request.headers['accept-language'];\n\t\t\t\tconst languages: string[] = acceptLanguage.match(/[a-zA-Z\\-]{2,10}/g) || [];\n\t\t\t\tif (languages.length > 0) {\n\t\t\t\t\tacceptLanguage = languages[0].split('-')[0];\n\t\t\t\t} else {\n\t\t\t\t\tacceptLanguage = null;\n\t\t\t\t}\n\t\t\t\t// console.log('request', request, 'acceptLanguage', acceptLanguage);\n\t\t\t}\n\t\t\t// console.log('RouteService.isPlatformServer', this.platformId, acceptLanguage);\n\t\t} else if (isPlatformBrowser(this.platformId)) {\n\t\t\tacceptLanguage = this.translateService.getBrowserLang();\n\t\t\t// console.log('RouteService.isPlatformBrowser', this.platformId, acceptLanguage);\n\t\t}\n\t\tlet detectedLanguage: string = this.configService.options.defaultLanguage;\n\t\tconst regexp: RegExp = new RegExp(`(${this.configService.options.languages ? this.configService.options.languages.map(x => x.lang).join('|') : ''})`, 'gi');\n\t\tconst match = (acceptLanguage || '').match(regexp);\n\t\tdetectedLanguage = match ? match[0] : detectedLanguage;\n\t\t// console.log('RouteService.detectLanguage', detectedLanguage);\n\t\treturn detectedLanguage;\n\t}\n\n\tpublic getTime() {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\treturn (performance || Date).now();\n\t\t} else {\n\t\t\tconst time = process.hrtime();\n\t\t\treturn (time[0] * 1e9 + time[1]) / 1e6;\n\t\t}\n\t}\n\n}\n","\nimport { isPlatformBrowser } from '@angular/common';\nimport { Component, Injector, Input, PLATFORM_ID } from '@angular/core';\nimport { NavigationEnd, Params, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { DisposableComponent } from '../disposable/disposable.component';\nimport { RouteService } from '../routes/route.service';\nimport { Page } from './page';\n\nexport interface PageInit {\n\tPageInit(): void;\n}\n\n@Component({\n\tselector: 'core-page',\n\ttemplate: `<h1>I'm a default view!</h1>`,\n})\n\nexport class PageComponent extends DisposableComponent {\n\n\t@Input() page: Page;\n\t@Input() params: Observable<Params>;\n\t@Input() queryParams: Observable<Params>;\n\n\tget platformId(): string {\n\t\treturn this.injector.get(PLATFORM_ID) as string;\n\t}\n\n\tget routeService(): RouteService {\n\t\treturn this.injector.get(RouteService);\n\t}\n\n\tget router(): Router {\n\t\treturn this.injector.get(Router);\n\t}\n\n\tconstructor(\n\t\tprotected injector: Injector,\n\t) {\n\t\tsuper();\n\t\tthis.scrollToTop();\n\t}\n\n\t// !!! Scroll to top on page change\n\tprivate scrollToTop(): void {\n\t\t// !!! PLATFORM_ID dependancy manually activated\n\t\t// const platformId: string = RouteService.injector.get(PLATFORM_ID) as string;\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\t// !!! Router dependancy manually activated\n\t\t\t// const router = RouteService.injector.get(Router);\n\t\t\tthis.router.events.subscribe((e) => {\n\t\t\t\tif (!(e instanceof NavigationEnd)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\twindow.scrollTo(0, 0);\n\t\t\t});\n\t\t}\n\t}\n\n\tgetId(): number | string {\n\t\treturn this.routeService.getId() || (this.page ? this.page.id : 0);\n\t}\n\n\tgetSlug(): string {\n\t\treturn this.routeService.getSlug() || (this.page ? this.page.slug : '');\n\t}\n\n}\n","import { Component, Injector, ViewEncapsulation } from '@angular/core';\nimport { PageComponent } from './page.component';\n\n@Component({\n\tselector: 'page-not-found-component',\n\ttemplateUrl: './page-not-found.component.html',\n\tstyleUrls: ['./page-not-found.component.scss'],\n\tencapsulation: ViewEncapsulation.Emulated,\n})\n\nexport class PageNotFoundComponent extends PageComponent {\n\n\tpublic url: string;\n\n\tconstructor(\n\t\tprotected injector: Injector\n\t) {\n\t\tsuper(injector);\n\t\tthis.url = this.router.url;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class HttpStatusCodeService {\n\n\tprivate statusCode: number;\n\tprivate redirectUrl: string;\n\n\tconstructor() {\n\t\tthis.statusCode = 200;\n\t\tthis.redirectUrl = null;\n\t}\n\n\tpublic setStatusCode(statusCode: number, redirectUrl: string = null) {\n\t\tthis.statusCode = statusCode;\n\t\tthis.redirectUrl = redirectUrl;\n\t}\n\n\tpublic getStatusCode(): number {\n\t\treturn (this.statusCode === 309 ? 301 : this.statusCode);\n\t}\n\n\tpublic getRedirectUrl(): string {\n\t\treturn this.redirectUrl;\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApiService } from '../api/api.service';\nimport { Identity } from './identity';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class IdentityService<T extends Identity> extends ApiService<T> {\n\n\tconstructor(\n\t\tprotected injector: Injector\n\t) {\n\t\tsuper(injector);\n\t}\n\n\tget collection(): string {\n\t\treturn '/api/identity';\n\t}\n\n\tgetList(): Observable<T[]> {\n\t\treturn this.get();\n\t}\n\n\tgetDetailByIdNo404<Data>(id: number | string): Observable<T> {\n\t\treturn this.get({ id }).pipe(\n\t\t\tmap((identities: T[]) => identities[0]),\n\t\t);\n\t}\n\n\tgetDetailById(id: number | string): Observable<T> {\n\t\treturn this.get({ id });\n\t}\n\n\tadd(identity: T) {\n\t\treturn this.post(identity);\n\t}\n\n\tupdate(identity: T) {\n\t\treturn this.put(identity);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Entity } from './entity';\nimport { IdentityService } from './identity.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class EntityService<T extends Entity> extends IdentityService<T> {\n\n\tget collection(): string {\n\t\treturn '/api/entity';\n\t}\n\n\tgetDetailByName(name: string): Observable<T[]> {\n\t\tif (!name.trim()) {\n\t\t\treturn of([]);\n\t\t}\n\t\treturn this.get({ name });\n\t}\n\n}\n","\nexport enum ImageType {\n\tDefault = 1,\n\tGallery = 2,\n\tShare = 3,\n}\n\nexport class Image {\n\tid: number | string;\n\turl: string;\n\ttitle?: string;\n\tdescription?: string;\n\tfileName?: string;\n\ttype?: ImageType;\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\nexport class LinkDefinition {\n\thref?: string;\n\tid?: string;\n\trel?: string;\n}\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class LinkService {\n\n\tconstructor(\n\t\t@Inject(DOCUMENT) private doc: any,\n\t) { }\n\n\taddTag(definition: LinkDefinition) {\n\t\tconst element = this.doc.createElement(`link`);\n\t\tthis.updateElementDefinition(element, definition);\n\t\tthis.doc.head.appendChild(element);\n\t}\n\n\tgetTag(selector: string) {\n\t\tconst element = this.doc.querySelector(`link${selector}`);\n\t\treturn element;\n\t}\n\n\tupdateTag(selector: string, definition: LinkDefinition) {\n\t\tconst element = this.doc.querySelector(`link${selector}`);\n\t\tthis.updateElementDefinition(element, definition);\n\t}\n\n\tremoveTag(selector: string) {\n\t\tconst element = this.doc.querySelector(`link${selector}`);\n\t\telement.remove();\n\t}\n\n\tupdateElementDefinition(element: HTMLLinkElement, definition: LinkDefinition) {\n\t\tthis.updateElementAttribute(element, 'href', definition.href);\n\t\tthis.updateElementAttribute(element, 'id', definition.id);\n\t\tthis.updateElementAttribute(element, 'rel', definition.rel);\n\t}\n\n\tupdateElementAttribute(element: HTMLLinkElement, attribute: string, value: any) {\n\t\tif (value) {\n\t\t\telement.setAttribute(attribute, value);\n\t\t} else {\n\t\t\telement.removeAttribute(attribute);\n\t\t}\n\t}\n\n}\n","import { Document } from '../models/document';\nimport { Feature } from '../models/feature';\nimport { Image } from '../models/image';\nimport { Taxonomy } from '../models/taxonomy';\n\nexport class PageMeta {\n\tappId?: string;\n\tauthor?: string;\n\tcanonical?: string;\n\tdescription?: string;\n\tkeywords?: string;\n\tlocale?: string;\n\trobots?: string;\n\ttitle?: string;\n\ttype?: string;\n}\n\nexport class PageIndex implements Document {\n\tabstract?: string;\n\tid: number | string;\n\timages?: Image[];\n\tname?: string;\n\trelationType?: number | string;\n\tslug?: string;\n\ttitle?: string;\n\ttype?: number | string;\n\turl?: string;\n\n\tconstructor(options?: PageIndex) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t}\n}\n\nexport class PageRelation implements Document {\n\tid: number | string;\n\tpage: Page;\n\ttype?: number | string;\n}\n\nexport class Page implements Document {\n\tabstract?: string;\n\tactive?: boolean;\n\tcomponent?: number | string;\n\tdescription?: string;\n\tfeatures?: Feature[];\n\tid: number | string;\n\timages?: Image[];\n\tmeta?: PageMeta = {};\n\tname?: string;\n\trelated?: any[];\n\tslug?: string;\n\ttaxonomies?: Taxonomy[];\n\ttitle?: string;\n\ttype?: number | string;\n\turl?: string;\n\n\tconstructor(options?: Page) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t\tif (options.related) {\n\t\t\t\tconst related: PageIndex[] = options.related.map((x: PageRelation) => {\n\t\t\t\t\tconst item = new PageIndex(x.page);\n\t\t\t\t\titem.relationType = x.type;\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tthis.related = related;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetFeature?(id: number): Feature {\n\t\treturn this.features.find(x => x.id === id) || null;\n\t}\n\n\tgetFeatures?(type: number, n: number[]): Feature[] {\n\t\treturn this.features ? this.features.filter((x: Feature, i: number) => (\n\t\t\tn.indexOf(Number(x.id)) !== -1 && x.type === type\n\t\t)).sort((a: Feature, b: Feature) => a.type - b.type) : [];\n\t}\n\n\tgetFeaturesByTypes?(type: number[]): Feature[] {\n\t\treturn this.features ? this.features.filter((x: Feature) => (\n\t\t\ttype.indexOf(Number(x.type)) !== -1\n\t\t)) : [];\n\t}\n\n\tgetGroupedFeaturesByTypes?(type: number[]): any {\n\t\tconst groups = {};\n\t\ttype.forEach(type => {\n\t\t\tconst group = groups[type] || { features: [] };\n\t\t\tif (this.features) {\n\t\t\t\tthis.features.forEach((x: Feature) => {\n\t\t\t\t\tif (Number(x.type) === type) {\n\t\t\t\t\t\tgroup.features.push(x);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tgroups[type] = group;\n\t\t});\n\t\t/*\n\t\tif (this.features) {\n\t\t\tthis.features.forEach((x: Feature) => {\n\t\t\t\tif (type.indexOf(Number(x.type)) !== -1) {\n\t\t\t\t\tconst group = groups[x.type] || { features: [] };\n\t\t\t\t\tgroup.features.push(x);\n\t\t\t\t\tgroups[x.type] = group;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t*/\n\t\treturn groups;\n\t}\n\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { Meta, MetaDefinition, Title } from '@angular/platform-browser';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { HttpStatusCodeService } from '../http/http-status-code.service';\nimport { EntityService } from '../models/entity.service';\nimport { Image, ImageType } from '../models/image';\nimport { LinkDefinition, LinkService } from './link.service';\nimport { Page } from './page';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class PageService extends EntityService<Page> {\n\n\tget collection(): string {\n\t\treturn '/api/page';\n\t}\n\n\tconstructor(\n\t\tprotected injector: Injector,\n\t\tprivate titleService: Title,\n\t\tprivate metaService: Meta,\n\t\tprivate linkService: LinkService,\n\t\tprivate statusCodeService: HttpStatusCodeService,\n\t) {\n\t\tsuper(injector);\n\t}\n\n\tgetStatePageBySlug(slug: string): Observable<Page> {\n\t\tslug = slug.split('?')[0];\n\t\tif (slug.indexOf('/') === 0) {\n\t\t\tslug = slug.substr(1);\n\t\t}\n\t\treturn this.stateGet(`?slug=/${slug}`).pipe(\n\t\t\tmap(x => {\n\t\t\t\tx = new Page(Array.isArray(x) ? x.find(x => x.slug === `/${slug}`) : x);\n\t\t\t\t// console.log('PageService.getStatePageBySlug', x);\n\t\t\t\treturn x;\n\t\t\t}),\n\t\t\tcatchError(error => {\n\t\t\t\t// console.log('getStatePageBySlug.error', error);\n\t\t\t\tthis.statusCodeService.setStatusCode(error.status, error.error ? error.error.redirectUrl : null);\n\t\t\t\treturn of(null);\n\t\t\t}),\n\t\t);\n\t}\n\n\tgetStatePageById(id: number | string): Observable<Page> {\n\t\treturn this.stateGet(`/${id}`).pipe(\n\t\t\t// tap(x => console.log('PageService.getPageById', id, x)),\n\t\t\tmap(x => new Page(x)),\n\t\t\tcatchError(error => {\n\t\t\t\tthis.statusCodeService.setStatusCode(error.status, error.error ? error.error.redirectUrl : null);\n\t\t\t\treturn of(null);\n\t\t\t})\n\t\t);\n\t}\n\n\tgetPageById(id: number | string): Observable<Page> {\n\t\treturn this.get(`/${id}`).pipe(\n\t\t\t// tap(x => console.log('PageService.getPageById', id, x)),\n\t\t\tmap(x => new Page(x)),\n\t\t\tcatchError(error => {\n\t\t\t\tthis.statusCodeService.setStatusCode(error.status, error.error ? error.error.redirectUrl : null);\n\t\t\t\treturn of(null);\n\t\t\t})\n\t\t);\n\t}\n\n\tgetPageBySlug(slug: string): Observable<Page> {\n\t\tslug = slug.split(';')[0];\n\t\t// console.log('PageService.getPageBySlug', slug);\n\t\treturn this.get(`?slug=/${slug}`).pipe(\n\t\t\tmap(x => new Page(x)),\n\t\t\t// tap(x => this.logger.log(`found pages matching \"${slug}\"`))\n\t\t\t// tap(x => console.log('PageService.getPageBySlug', x, slug))\n\t\t\tcatchError(error => {\n\t\t\t\t// console.log('PageService.getPageBySlug.error', error);\n\t\t\t\tthis.statusCodeService.setStatusCode(error.status, error.error ? error.error.redirectUrl : null);\n\t\t\t\treturn of(null);\n\t\t\t})\n\t\t);\n\t}\n\n\taddOrUpdateMetaData(page: Page) {\n\t\t// console.log('PageService.addOrUpdateMetaData', page);\n\t\tif (!page) {\n\t\t\treturn;\n\t\t}\n\t\t// !!!\n\t\t// const fbAppId: string = this.config.plugins && this.config.plugins.facebook ? this.config.plugins.facebook.appId.toString() : '';\n\t\tthis.titleService.setTitle(page.title);\n\t\tthis.addOrUpdateMeta({ property: 'og:title', content: page.title });\n\t\tthis.addOrUpdateMeta({ property: 'og:image', content: this.getSocialImage(page).url });\n\t\tthis.addOrUpdateMeta({ property: 'og:image:width', content: '1200' });\n\t\tthis.addOrUpdateMeta({ property: 'og:image:height', content: '630' });\n\t\t// this.addOrUpdateMeta({ property: 'fb:app_id', content: fbAppId });\n\t\tthis.addOrUpdateMeta({ property: 'og:url', content: page.url || this.origin });\n\t\tconst meta = page.meta;\n\t\tif (meta) {\n\t\t\tthis.addOrUpdateMeta({ name: 'description', content: meta.description || 'Servizio di qualitÃ  senza costi aggiuntivi con i convenienti pacchetti viaggio Eurospin. Prenota comodamente online!' });\n\t\t\tthis.addOrUpdateMeta({ name: 'keywords', content: meta.keywords || 'viaggi,viaggi eurospin' });\n\t\t\tthis.addOrUpdateMeta({ name: 'robots', content: meta.robots || 'index,follow' });\n\t\t\tthis.addOrUpdateMeta({ property: 'og:locale', content: meta.locale || 'it_IT' });\n\t\t\tthis.addOrUpdateMeta({ property: 'og:type', content: meta.type || 'article' });\n\t\t\tthis.addOrUpdateMeta({ property: 'og:author', content: meta.author || 'Eurospin Viaggi' });\n\t\t\tthis.addOrUpdateLink({ rel: 'canonical', href: meta.canonical || (this.origin.indexOf(page.url) === 0 ? null : page.url) });\n\t\t}\n\t\t// console.log('PageOutletComponent.addOrUpdateMetaData', page.id, page.title, page.url);\n\t}\n\n\tprivate getSocialImage(page: Page): Image {\n\t\tconst image = page.images ? (\n\t\t\tpage.images.find(i => i.type === ImageType.Share) ||\n\t\t\tpage.images.find(i => i.type === ImageType.Default) ||\n\t\t\tpage.images.find(i => i.type === ImageType.Gallery)\n\t\t) : null;\n\t\treturn image || {\n\t\t\turl: 'https://s-static.ak.fbcdn.net/images/devsite/attachment_blank.png'\n\t\t} as Image;\n\t}\n\n\tprivate addOrUpdateMeta(definition: MetaDefinition) {\n\t\tconst selector = definition.name ? `name=\"${definition.name}\"` : `property=\"${definition.property}\"`;\n\t\tif (this.metaService.getTag(selector)) {\n\t\t\tif (definition.content) {\n\t\t\t\tthis.metaService.updateTag(definition, selector);\n\t\t\t} else {\n\t\t\t\tthis.metaService.removeTag(selector);\n\t\t\t}\n\t\t} else if (definition.content) {\n\t\t\tthis.metaService.addTag(definition);\n\t\t}\n\t}\n\n\tprivate addOrUpdateLink(definition: LinkDefinition) {\n\t\tconst selector = definition.id ? `#${definition.id}` : `[rel=\"${definition.rel}\"]`;\n\t\tif (this.linkService.getTag(selector)) {\n\t\t\tif (definition.href) {\n\t\t\t\tthis.linkService.updateTag(selector, definition);\n\t\t\t} else {\n\t\t\t\tthis.linkService.removeTag(selector);\n\t\t\t}\n\t\t} else if (definition.href) {\n\t\t\tthis.linkService.addTag(definition);\n\t\t}\n\t}\n\n}\n","import { Component, ComponentFactory, ComponentFactoryResolver, Inject, ViewContainerRef } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { DisposableComponent } from '../disposable/disposable.component';\nimport { RouteService } from '../routes/route.service';\nimport { PageNotFoundComponent } from './page-not-found.component';\nimport { PageComponent } from './page.component';\nimport { PageService } from './page.service';\n\n@Component({\n\tselector: 'page-outlet',\n\ttemplate: '',\n})\n\nexport class PageOutletComponent extends DisposableComponent {\n\n\tprivate factory: ComponentFactory<PageComponent>;\n\n\tconstructor(\n\t\t@Inject(ViewContainerRef) private viewContainerRef: ViewContainerRef,\n\t\tprivate router: Router,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate componentFactoryResolver: ComponentFactoryResolver,\n\t\tprivate routeService: RouteService,\n\t\tprivate pageService: PageService,\n\t) {\n\t\tsuper();\n\t\t// !!! keep -> Avoid PageOutlet Route Caching for different routes\n\t\tthis.router.routeReuseStrategy.shouldReuseRoute = () => {\n\t\t\treturn false;\n\t\t};\n\t\tthis.setSnapshot(this.route.snapshot);\n\t}\n\n\tsetSnapshot(snapshot: ActivatedRouteSnapshot): void {\n\t\tthis.routeService.params = this.routeService.toData(snapshot.params);\n\t\tthis.routeService.queryParams = this.routeService.toData(snapshot.queryParams);\n\t\tconst data = snapshot.data;\n\t\tconst params = this.routeService.params;\n\t\tconst queryParams = this.routeService.queryParams;\n\t\tlet component: any = PageNotFoundComponent;\n\t\tif (data.pageResolver) {\n\t\t\tcomponent = data.pageResolver.component;\n\t\t\tthis.routeService.page = data.pageResolver.page;\n\t\t\tconst factory: ComponentFactory<PageComponent> = this.componentFactoryResolver.resolveComponentFactory(component);\n\t\t\tthis.factory = factory;\n\t\t\tthis.viewContainerRef.clear();\n\t\t\tconst componentRef = this.viewContainerRef.createComponent(this.factory);\n\t\t\tconst instance = componentRef.instance;\n\t\t\tinstance.page = data.pageResolver.page;\n\t\t\tinstance.params = params;\n\t\t\tinstance.queryParams = queryParams;\n\t\t\tif (typeof instance['PageInit'] === 'function') {\n\t\t\t\tinstance['PageInit']();\n\t\t\t}\n\t\t\tif (data.pageResolver.page) {\n\t\t\t\tconst config = this.router.config.slice();\n\t\t\t\tconst slug = data.pageResolver.page.slug;\n\t\t\t\tif (slug) {\n\t\t\t\t\tconfig.push({\n\t\t\t\t\t\tpath: slug.indexOf('/') === 0 ? slug.substr(1) : slug, component: data.pageResolver.component,\n\t\t\t\t\t});\n\t\t\t\t\tthis.router.resetConfig(config);\n\t\t\t\t}\n\t\t\t\tthis.pageService.addOrUpdateMetaData(this.routeService.page);\n\t\t\t}\n\t\t}/* else {\n\t\t\t// console.log('PageOutletComponent.setSnapshot 404', data);\n\t\t}*/\n\t}\n\n}\n","import { Type } from '@angular/core';\nimport { ConfigService } from '../config/config.service';\nimport { Page } from './page';\nimport { PageNotFoundComponent } from './page-not-found.component';\nimport { PageComponent } from './page.component';\n\nexport class PageResolver {\n\n\tpublic component: Type<PageComponent> = PageComponent;\n\n\tconstructor(\n\t\tprivate configService: ConfigService,\n\t\tpublic page: Page,\n\t) {\n\t\tif (page && this.configService.options.pages) {\n\t\t\tthis.component = this.configService.options.pages[page.component] || this.configService.options.defaultPage;\n\t\t} else {\n\t\t\tthis.component = this.configService.options.notFoundPage || PageNotFoundComponent;\n\t\t}\n\t}\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ConfigService } from '../config/config.service';\nimport { RouteService } from '../routes/route.service';\nimport { Page } from './page';\nimport { PageResolver } from './page-resolver';\nimport { PageService } from './page.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class PageResolverService implements Resolve<PageResolver> {\n\n\tpublic events$: BehaviorSubject<PageResolver> = new BehaviorSubject<PageResolver>(null);\n\n\tconstructor(\n\t\tprivate configService: ConfigService,\n\t\tprivate pageService: PageService,\n\t\tprivate routeService: RouteService,\n\t) { }\n\n\tpageToPageResolver(page: Page): PageResolver {\n\t\tconst pageResolver = new PageResolver(this.configService, page);\n\t\tthis.events$.next(pageResolver);\n\t\treturn pageResolver;\n\t}\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<PageResolver> {\n\t\tif (route.params && route.params.id) {\n\t\t\treturn this.getPageById(route.params.id);\n\t\t} else {\n\t\t\tconst paths = route.url.filter(x => {\n\t\t\t\treturn x.path;\n\t\t\t}).map(x => {\n\t\t\t\treturn x.path;\n\t\t\t});\n\t\t\tconst slug = this.routeService.toSlug(paths).join('/');\n\t\t\treturn this.getPageBySlug(slug);\n\t\t}\n\t}\n\n\tgetPageById(id: number | string): Observable<PageResolver> {\n\t\t// console.log('PageResolverService.getPageById', id);\n\t\treturn this.pageService.getPageById(id).pipe(\n\t\t\tmap(page => this.pageToPageResolver(page))\n\t\t);\n\t}\n\n\tgetPageBySlug(slug: string): Observable<PageResolver> {\n\t\t// console.log('PageResolverService.getPageBySlug', slug);\n\t\treturn this.pageService.getStatePageBySlug(slug).pipe(\n\t\t\tmap(page => this.pageToPageResolver(page))\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanDeactivate, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class PageGuard implements CanActivate, CanDeactivate<any> {\n\n\tprivate match(route: ActivatedRouteSnapshot): boolean {\n\t\tconst lastPath = route.url.length ? route.url[route.url.length - 1].path : '';\n\t\tconst pattern = /\\.([0-9a-z]+)(?:[\\?#]|$)/i;\n\t\tconst match = (lastPath).match(pattern);\n\t\tif (match !== null) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tcanActivate(\n\t\troute: ActivatedRouteSnapshot,\n\t\tstate: RouterStateSnapshot\n\t): Observable<boolean> | Promise<boolean> | boolean {\n\t\treturn this.match(route);\n\t}\n\n\tcanDeactivate(\n\t\tcomponent: any,\n\t\tcurrentRoute: ActivatedRouteSnapshot,\n\t\tcurrentState: RouterStateSnapshot,\n\t\tnextState?: RouterStateSnapshot\n\t): Observable<boolean> | Promise<boolean> | boolean {\n\t\treturn this.match(currentRoute);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanDeactivate, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class StaticGuard implements CanActivate, CanDeactivate<any> {\n\n\tprivate match(route: ActivatedRouteSnapshot): boolean {\n\t\tconst lastPath = route.url[route.url.length - 1].path;\n\t\t// console.log('StaticGuard.CanActivate', e, lastPath);\n\t\tconst pattern = /\\.([0-9a-z]+)(?:[\\?#]|$)/i;\n\t\tconst match = (lastPath).match(pattern);\n\t\tif (match !== null) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tcanActivate(\n\t\troute: ActivatedRouteSnapshot,\n\t\tstate: RouterStateSnapshot\n\t): Observable<boolean> | Promise<boolean> | boolean {\n\t\treturn this.match(route);\n\t}\n\n\tcanDeactivate(\n\t\tcomponent: any,\n\t\tcurrentRoute: ActivatedRouteSnapshot,\n\t\tcurrentState: RouterStateSnapshot,\n\t\tnextState?: RouterStateSnapshot\n\t): Observable<boolean> | Promise<boolean> | boolean {\n\t\treturn this.match(currentRoute);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PageNotFoundComponent } from './pages/page-not-found.component';\nimport { PageOutletComponent } from './pages/page-outlet.component';\nimport { PageResolverService } from './pages/page-resolver.service';\nimport { PageGuard } from './pages/page.guard';\nimport { StaticGuard } from './pages/static.guard';\n\nconst routes: Routes = [\n\t{ path: 'page/:id', component: PageOutletComponent, resolve: { pageResolver: PageResolverService } },\n\t{ path: '**', component: PageOutletComponent, resolve: { pageResolver: PageResolverService }, canActivate: [PageGuard] },\n\t{ path: '**', component: PageNotFoundComponent, canActivate: [StaticGuard] },\n];\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild(routes),\n\t],\n\texports: [\n\t\tRouterModule,\n\t],\n})\n\nexport class CoreRouting { }\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBase } from './control-base';\n\n@Component({\n\tselector: 'core-control',\n\ttemplateUrl: './control.component.html',\n\tstyleUrls: ['./control.component.scss'],\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlComponent implements ControlValueAccessor {\n\t@Input() control: ControlBase<any>;\n\t@Input() form: FormGroup;\n\n\tprivate element: any;\n\tprivate blurred: boolean;\n\tprivate innervalue: any;\n\n\treveal: { checked: boolean } = { checked: false };\n\n\tconstructor(\n\t\tprivate renderer: Renderer2\n\t) { }\n\n\tget controlRef(): AbstractControl {\n\t\t// console.log('controlRef', this.control.key, this.form.controls);\n\t\treturn this.form.controls[this.control.key];\n\t}\n\n\tget isValid() { return this.controlRef.valid; }\n\n\t// ControlValueAccessor\n\n\tgetFormattedValue(): any {\n\t\t// console.log('ControlComponent.getFormattedValue', this.controlRef.value);\n\t\treturn this.controlRef.value;\n\t}\n\n\tonInput($event): void {\n\t\tthis.element = $event.target;\n\t\tthis.onChange(this.element.value);\n\t}\n\n\tonFocus($event): void {\n\t\tthis.blurred = false;\n\t\tthis.element = $event.target;\n\t\t// this.element.value = this.controlRef.value;\n\t\tthis.renderer.setProperty(this.element, 'value', this.controlRef.value);\n\t\t// console.log('ControlComponent.onFocus', this.controlRef);\n\t}\n\n\tonBlur($event): void {\n\t\tthis.blurred = true;\n\t\tthis.element = $event.target;\n\t\t// this.element.value = this.controlRef.value;\n\t\tthis.renderer.setProperty(this.element, 'value', this.controlRef.value);\n\t\t// console.log('ControlComponent.onBlur', this.controlRef);\n\t\t/*\n\t\tif (this.innervalue) {\n\t\t\tthis.control.patchValue(this.innervalue + ' H', { emitEvent: false });\n\t\t}\n\t\t*/\n\t}\n\n\tprivate onChange = (value: any) => { };\n\n\tprivate onTouched = () => { };\n\n\tprivate formatValue(value: any): void {\n\t\t// console.log('ControlComponent.formatValue', value);\n\t\tthis.renderer.setProperty(this.element, 'value', value);\n\t\t// console.log('ControlEditableComponent.writeValue', value);\n\t}\n\n\tprivate parseValue(value: any) {\n\t\t// console.log('ControlComponent.parseValue', value);\n\t\tconst parsed = this.innervalue;\n\t\tthis.onChange(parsed);\n\t}\n\n\twriteValue(value: any): void {\n\t\tthis.formatValue(value);\n\t}\n\n\tregisterOnChange(fn: any): void {\n\t\tthis.onChange = fn;\n\t\t// console.log('ControlEditableComponent.registerOnChange');\n\t}\n\n\tregisterOnTouched(fn: any): void {\n\t\tthis.onTouched = fn;\n\t\t// console.log('ControlEditableComponent.registerOnTouched');\n\t}\n\n\tsetDisabledState(isDisabled: boolean): void {\n\t\t// const node = this.textarea.nativeElement;\n\t\t/*\n\t\tif (isDisabled) {\n\t\t\tthis.renderer.addClass(this.element, 'disabled');\n\t\t} else {\n\t\t\tthis.renderer.removeClass(this.element, 'disabled');\n\t\t}\n\t\t// console.log('ControlEditableComponent.setDisabledState', isDisabled);\n\t\t*/\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { ControlBase } from './control-base';\nimport { matchValidator } from './match.validator';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ControlService {\n\n\tgetValidators(control: ControlBase<any>, group: FormGroup): ValidatorFn[] {\n\t\tconst validators: ValidatorFn[] = [];\n\t\tif (control.min) {\n\t\t\tvalidators.push(Validators.min(control.min));\n\t\t}\n\t\tif (control.max) {\n\t\t\tvalidators.push(Validators.max(control.max));\n\t\t}\n\t\tif (control.required) {\n\t\t\tvalidators.push(Validators.required);\n\t\t}\n\t\tif (control.requiredTrue) {\n\t\t\tvalidators.push(Validators.requiredTrue);\n\t\t}\n\t\tif (control.email) {\n\t\t\tvalidators.push(Validators.email);\n\t\t}\n\t\tif (control.minLength) {\n\t\t\tvalidators.push(Validators.minLength(control.minLength));\n\t\t}\n\t\tif (control.maxLength) {\n\t\t\tvalidators.push(Validators.maxLength(control.maxLength));\n\t\t}\n\t\tif (control.pattern) {\n\t\t\tvalidators.push(Validators.pattern(control.pattern));\n\t\t}\n\t\tif (control.match) {\n\t\t\tvalidators.push(matchValidator(control.match, control.reverse, group));\n\t\t}\n\t\t// console.log(control.key, validators);\n\t\treturn validators;\n\t}\n\n\ttoFormGroup(controls: ControlBase<any>[]): FormGroup {\n\t\tconst options: any = {};\n\t\tcontrols.forEach(x => {\n\t\t\t// group[x.key] = new FormControl(x.value, this.getValidators(x, group));\n\t\t\tconst formControl: FormControl = new FormControl(x.value);\n\t\t\tif (x.disabled) {\n\t\t\t\tformControl.disable();\n\t\t\t}\n\t\t\toptions[x.key] = formControl;\n\t\t\t// x.setControl(formControl); // !!!\n\t\t});\n\t\tconst group: FormGroup = new FormGroup(options);\n\t\t// console.log(group);\n\t\tcontrols.forEach(x => {\n\t\t\tconst validators = this.getValidators(x, group);\n\t\t\t// console.log(validators);\n\t\t\tgroup.controls[x.key].setValidators(validators);\n\t\t});\n\t\treturn group;\n\t}\n\n}\n","import { FormControl, FormGroup, ValidatorFn } from '@angular/forms';\n\nexport function __matchValidator(key: string, otherKey: string, group: FormGroup): ValidatorFn {\n\treturn (control: FormControl) => {\n\n\t\t// const control = group.controls[key];\n\t\tconst otherControl = group.controls[otherKey];\n\n\t\t// console.log(control.touched, otherControl.touched);\n\n\t\tif (control.touched && otherControl.touched) {\n\t\t\tconst match = control.value === otherControl.value;\n\t\t\tif (!match && control.valid && otherControl.valid) {\n\t\t\t\tcontrol.setErrors({\n\t\t\t\t\tmatch: otherKey\n\t\t\t\t});\n\t\t\t\treturn {\n\t\t\t\t\tmatch: otherKey + ' != ' + key\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (match && control.hasError('match')) {\n\t\t\t\tcontrol.setErrors(null);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n}\n\nexport function matchValidator(otherKey: string, reverse: boolean = false, group: FormGroup): ValidatorFn {\n\treturn (control: FormControl) => {\n\t\tconst otherControl = group.controls[otherKey];\n\n\t\tconst value = control.value;\n\n\t\t// value not equal\n\t\tif (otherControl && value !== otherControl.value && !reverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (otherControl && value === otherControl.value && reverse) {\n\t\t\tif (otherControl.errors) {\n\t\t\t\tdelete otherControl.errors['match'];\n\t\t\t\tif (!Object.keys(otherControl.errors).length) {\n\t\t\t\t\totherControl.setErrors(null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (otherControl && value !== otherControl.value && reverse) {\n\t\t\totherControl.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t};\n}\n\n/*\nvalidate(control: AbstractControl): { [key: string]: any } {\n\t\t// self value\n\t\tconst value = control.value;\n\n\t\t// control value\n\t\tconst input = control.root.get(this.match);\n\n\t\t// value not equal\n\t\tif (input && value !== input.value && !this.isReverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (input && value === input.value && this.isReverse) {\n\t\t\tdelete input.errors['match'];\n\t\t\tif (!Object.keys(input.errors).length) {\n\t\t\t\tinput.setErrors(null);\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (input && value !== input.value && this.isReverse) {\n\t\t\tinput.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n*/\n/*\nstatic isValidString(control: FormControl) {\n\tif (!control.value || typeof control.value !== 'string') {\n\t\treturn {isNotValidString: true};\n\t}\n\treturn null;\n}\n\nstatic isValidName(control: FormControl) {\n\tif (control.valid && control.value !== 'John Doe') {\n\t\treturn {isNotValidName: true};\n\t}\n\treturn null;\n}\n*/\n","import { Directive, forwardRef, Input } from '@angular/core';\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { catchError, debounceTime, switchMap, take } from 'rxjs/operators';\n\nconst DEBOUNCE_TIME: number = 250;\n\n@Directive({\n\tselector: '[exists][formControlName],[exists][formControl],[exists][ngModel]',\n\tproviders: [\n\t\t{ provide: NG_ASYNC_VALIDATORS, useExisting: forwardRef(() => ExistsValidator), multi: true },\n\t]\n})\nexport class ExistsValidator implements AsyncValidator {\n\n\tprivate values = new BehaviorSubject<string>(null);\n\tset value(value: string) {\n\t\tif (value && value.trim() !== '') {\n\t\t\tthis.values.next(value);\n\t\t}\n\t}\n\tprivate debounced$: Observable<ValidationErrors | null> = this.values.pipe(\n\t\tdebounceTime(DEBOUNCE_TIME),\n\t\tswitchMap((value: string) => {\n\t\t\t// console.log('ExistsValidator.debounced$', value);\n\t\t\treturn this.exists$(value);\n\t\t}),\n\t\tcatchError((response) => {\n\t\t\tconsole.log('ExistsValidator.debounced$.catchError', response);\n\t\t\treturn of(null);\n\t\t}),\n\t\ttake(1),\n\t);\n\n\t@Input() exists: Function;\n\n\texists$(value: string): Observable<ValidationErrors | null> {\n\t\tif (typeof this.exists === 'function') {\n\t\t\t// console.log('ExistsValidator.exists$', value);\n\t\t\treturn this.exists(value).pipe(\n\t\t\t\tswitchMap(exists => {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\treturn of({\n\t\t\t\t\t\t\texists: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn of(null);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t} else {\n\t\t\treturn of(null);\n\t\t}\n\t}\n\n\tvalidate(control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n\t\tthis.value = control.value;\n\t\treturn this.debounced$;\n\t}\n\n}\n","export class ControlBaseOptions<T> {\n\tvalue?: T;\n\tkey?: string;\n\tlabel?: string;\n\tplaceholder?: string;\n\t// order\n\torder?: number;\n\tschema?: string;\n\ttype?: string;\n\t// validators\n\tmin?: number;\n\tmax?: number;\n\trequired?: boolean;\n\trequiredTrue?: boolean;\n\temail?: boolean;\n\tminLength?: number;\n\tmaxLength?: number;\n\tpattern?: string | RegExp;\n\tmatch?: string;\n\t// options\n\treverse?: boolean;\n\toptions?: { key: string, value: string }[];\n\t// state\n\tdisabled?: boolean;\n\t// formatters\n\tstep?: number;\n\tformat?: string;\n}\n\nexport class ControlBase<T> {\n\t// export class ControlBase<T> implements ControlValueAccessor {\n\n\tstatic uid: number = 0;\n\n\tprivate _originalValue: T;\n\tvalue: T;\n\tkey: string;\n\t//\n\tlabel: string;\n\tplaceholder: string;\n\t// order\n\torder: number;\n\tschema: string;\n\ttype: string;\n\t// validators\n\tmin: number;\n\tmax: number;\n\trequired: boolean;\n\trequiredTrue: boolean;\n\temail: boolean;\n\tminLength: number;\n\tmaxLength: number;\n\tpattern: string | RegExp;\n\tmatch: string;\n\t// options\n\treverse: boolean;\n\toptions: { key: string, value: string }[];\n\t// state\n\tdisabled: boolean;\n\t// formatters\n\tstep: number;\n\tformat: string;\n\n\tconstructor(options: ControlBaseOptions<T> = {}) {\n\t\tthis._originalValue = options.value;\n\t\tthis.value = options.value;\n\t\tthis.key = options.key;\n\t\t//\n\t\tconst name = `${options.key || 'Control'} ${++ControlBase.uid}`;\n\t\tthis.label = options.label || name;\n\t\tthis.placeholder = options.placeholder || name;\n\t\t// order\n\t\tthis.order = options.order === undefined ? 1 : options.order;\n\t\tthis.schema = options.schema || 'text';\n\t\tthis.type = options.type || this.schema;\n\t\t// validators\n\t\tthis.min = options.min || null;\n\t\tthis.max = options.max || null;\n\t\tthis.required = !!options.required;\n\t\tthis.requiredTrue = !!options.requiredTrue;\n\t\tthis.email = !!options.email;\n\t\tthis.minLength = options.minLength || null;\n\t\tthis.maxLength = options.maxLength || null;\n\t\tthis.pattern = options.pattern || null;\n\t\tthis.match = options.match || null;\n\t\t// options\n\t\tthis.reverse = !!options.reverse;\n\t\tthis.options = options.options || [];\n\t\t// state\n\t\tthis.disabled = !!options.disabled;\n\t\t// formatters\n\t\tthis.step = options.step || null;\n\t\tthis.format = options.format || null;\n\t}\n\n\t/*\n\t//\n\tcontrol?: FormControl;\n\tinnervalue: any;\n\tblurred: boolean = false;\n\n\tfocus(): void {\n\t\t// console.log('ControlBase.focus', this.control.value);\n\t\tthis.blurred = false;\n\t\tif (this.innervalue) {\n\t\t\tthis.control.patchValue(this.innervalue, { emitEvent: false });\n\t\t}\n\t}\n\n\tblur(): void {\n\t\t// console.log('ControlBase.blur', this.control.value);\n\t\tthis.blurred = true;\n\t\tif (this.innervalue) {\n\t\t\tthis.control.patchValue(this.innervalue + ' H', { emitEvent: false });\n\t\t}\n\t}\n\n\tsetControl(control: FormControl): void {\n\t\tthis.control = control;\n\t\tthis.innervalue = control.value;\n\t\tcontrol.valueChanges.subscribe(value => {\n\t\t\t// console.log('ControlBase.control.valueChanges', value);\n\t\t\tif (this.blurred) {\n\t\t\t\tcontrol.patchValue(value + ' H', { emitEvent: false });\n\t\t\t} else {\n\t\t\t\tthis.innervalue = value;\n\t\t\t}\n\t\t});\n\t\t// this.blur();\n\t}\n\n\tformatValue(): string {\n\t\t// console.log('ControlBase.formatValue', this, this.control);\n\t\treturn 'aaa';\n\t}\n\n\tparseValue(e: Event) {\n\t\t// console.log('ControlBase.parseValue', e);\n\t}\n\n\tprivate onChange = (value: any) => { };\n\n\tprivate onTouched = () => { };\n\n\twriteValue(value: any): void {\n\t\t// console.log('ControlBase.writeValue', value);\n\t\t// this.formattedValue = value;\n\t\tthis.onChange(this.value);\n\t}\n\n\tregisterOnChange(fn: (value: any) => void): void {\n\t\t// console.log('ControlBase.registerOnChange', fn);\n\t\tthis.onChange = fn;\n\t\t// this.onChange('my new value');\n\t}\n\n\tregisterOnTouched(fn: () => void): void {\n\t\t// console.log('ControlBase.registerOnTouched', fn);\n\t\tthis.onTouched = fn;\n\t}\n\n\tsetDisabledState?(isDisabled: boolean): void {\n\t\t// console.log('ControlBase.setDisabledState', isDisabled);\n\t\tthis.disabled = isDisabled;\n\t}\n\t*/\n\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlCheckbox extends ControlBase<boolean> {\n\n\tschema = 'checkbox';\n\n\tconstructor(options: ControlBaseOptions<boolean> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlEmail extends ControlBase<string> {\n\n\tschema = 'email';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t\tthis.email = true;\n\t\tthis.pattern = options.pattern || '[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}';\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlMarkdown extends ControlBase<string> {\n\n\tschema = 'markdown';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlNumber extends ControlBase<string> {\n\n\tschema = 'number';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlPassword extends ControlBase<string> {\n\n\tschema = 'password';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlRadio extends ControlBase<boolean> {\n\n\tschema = 'radio';\n\n\tconstructor(options: ControlBaseOptions<boolean> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlSelect extends ControlBase<string> {\n\n\tschema = 'select';\n\toptions: { key: string, value: string }[] = [];\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.options = options.options || [];\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlText extends ControlBase<string> {\n\n\tschema = 'text';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ControlBase, ControlBaseOptions } from './controls/control-base';\nimport { ControlCheckbox } from './controls/control-checkbox';\nimport { ControlEmail } from './controls/control-email';\nimport { ControlMarkdown } from './controls/control-markdown';\nimport { ControlNumber } from './controls/control-number';\nimport { ControlPassword } from './controls/control-password';\nimport { ControlRadio } from './controls/control-radio';\nimport { ControlSelect } from './controls/control-select';\nimport { ControlText } from './controls/control-text';\nimport { ControlService } from './controls/control.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FormService {\n\n\tconstructor(\n\t\tprivate controlService: ControlService\n\t) { }\n\n\tgetControlsFromOptions(options: ControlBaseOptions<any>[]): ControlBase<any>[] {\n\t\tconst controls: ControlBase<any>[] = options.map(o => {\n\t\t\tswitch (o.schema) {\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\treturn new ControlCheckbox(o);\n\t\t\t\tcase 'email':\n\t\t\t\t\treturn new ControlEmail(o);\n\t\t\t\tcase 'number':\n\t\t\t\t\treturn new ControlNumber(o);\n\t\t\t\tcase 'password':\n\t\t\t\t\treturn new ControlPassword(o);\n\t\t\t\tcase 'radio':\n\t\t\t\t\treturn new ControlRadio(o);\n\t\t\t\tcase 'select':\n\t\t\t\t\treturn new ControlSelect(o);\n\t\t\t\tcase 'markdown':\n\t\t\t\t\treturn new ControlMarkdown(o);\n\t\t\t\tcase 'text':\n\t\t\t\t\treturn new ControlText(o);\n\t\t\t\tdefault:\n\t\t\t\t\treturn new ControlText(o);\n\t\t\t}\n\t\t});\n\t\tcontrols.sort((a, b) => a.order - b.order);\n\t\treturn controls;\n\t}\n\n\tgetGroupFromOptions(options: ControlBaseOptions<any>[]): FormGroup {\n\t\tconst controls: ControlBase<any>[] = this.getControlsFromOptions(options);\n\t\tconst group = this.controlService.toFormGroup(controls);\n\t\treturn group;\n\t}\n\n\tgetGroupFromControls(controls: ControlBase<any>[]): FormGroup {\n\t\tconst group = this.controlService.toFormGroup(controls);\n\t\treturn group;\n\t}\n\n}\n","import { Attribute, Directive, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n@Directive({\n\tselector: '[match][formControlName],[match][formControl],[match][ngModel]',\n\tproviders: [\n\t\t{ provide: NG_VALIDATORS, useExisting: forwardRef(() => MatchValidator), multi: true }\n\t]\n})\nexport class MatchValidator implements Validator {\n\n\tconstructor(\n\t\t@Attribute('match') public match: string,\n\t\t@Attribute('reverse') public reverse: string\n\t) { }\n\n\tprivate get isReverse() {\n\t\tif (!this.reverse) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.reverse === 'true' ? true : false;\n\t}\n\n\tvalidate(control: AbstractControl): { [key: string]: any } {\n\t\t// self value\n\t\tconst value = control.value;\n\n\t\t// control value\n\t\tconst input = control.root.get(this.match);\n\n\t\t// value not equal\n\t\tif (input && value !== input.value && !this.isReverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (input && value === input.value && this.isReverse) {\n\t\t\tdelete input.errors['match'];\n\t\t\tif (!Object.keys(input.errors).length) {\n\t\t\t\tinput.setErrors(null);\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (input && value !== input.value && this.isReverse) {\n\t\t\tinput.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n\n}\n","import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n\tselector: '[ngModel][uppercase]'\n})\nexport class UppercaseDirective {\n\t@Output() ngModelChange: EventEmitter<any> = new EventEmitter();\n\tvalue: any;\n\n\t@HostListener('input', ['$event']) onInputChange($event) {\n\t\tthis.value = $event.target.value.toUpperCase();\n\t\tthis.ngModelChange.emit(this.value);\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'highlight',\n\t// pure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class HighlightPipe implements PipeTransform {\n\n\ttransform(text: string, query: string): string {\n\t\tif (!query) {\n\t\t\treturn text;\n\t\t}\n\t\ttext = this.encodeHTML(text);\n\t\tquery = this.encodeHTML(query);\n\t\tconst regExp = new RegExp('&[^;]+;|' + this.escapeRegexChars(query), 'gi');\n\t\treturn text.replace(regExp, function (match) {\n\t\t\treturn match.toLowerCase() === query.toLowerCase() ? '<strong>' + match + '</strong>' : match;\n\t\t});\n\t}\n\n\tescapeRegexChars(text: string) {\n\t\treturn text.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n\t}\n\n\tsafeToString(text: string) {\n\t\treturn text === undefined || text === null ? '' : text.toString().trim();\n\t}\n\n\tencodeHTML(text: string) {\n\t\treturn this.safeToString(text)\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;');\n\t}\n\n}\n","\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Logger } from '../logger/logger';\nimport { RouteService } from '../routes/route.service';\nimport { HttpStatusCodeService } from './http-status-code.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class HttpResponseInterceptor implements HttpInterceptor {\n\n\tprivate _logger: Logger;\n\tget logger() {\n\t\tif (!this._logger) {\n\t\t\tthis._logger = this.injector.get(Logger);\n\t\t}\n\t\treturn this._logger;\n\t}\n\n\tprivate _router: Router;\n\tget router() {\n\t\tif (!this._router) {\n\t\t\tthis._router = this.injector.get(Router);\n\t\t}\n\t\treturn this._router;\n\t}\n\n\tprivate _routeService: RouteService;\n\tget routeService() {\n\t\tif (!this._routeService) {\n\t\t\tthis._routeService = this.injector.get(RouteService);\n\t\t}\n\t\treturn this.routeService;\n\t}\n\n\tconstructor(\n\t\tprivate injector: Injector,\n\t\tprivate statusCodeService: HttpStatusCodeService,\n\t) { }\n\n\tintercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\t// injecting request\n\t\t// parsing response\n\t\treturn next.handle(request).pipe(\n\t\t\ttap((event: HttpEvent<any>) => {\n\t\t\t\t// console.log('HttpResponseInterceptor', event);\n\t\t\t\tthis.logger.httpError = null;\n\t\t\t\t// this.logger.log(event);\n\t\t\t\t/*\n\t\t\t\tif (event instanceof HttpResponse) {\n\t\t\t\t\t// console.log('event instanceof HttpResponse');\n\t\t\t\t\t// do stuff with response if you want\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t}),\n\t\t\tcatchError((error: any) => {\n\t\t\t\t// console.warn('HttpResponseInterceptor', error);\n\t\t\t\tif (error instanceof HttpErrorResponse) {\n\t\t\t\t\t// this.statusCodeService.setStatusCode(error.status);\n\t\t\t\t\tswitch (error.status) {\n\t\t\t\t\t\tcase 401:\n\t\t\t\t\t\t\t// unauthorized\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 404:\n\t\t\t\t\t\t\t// not found\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 409:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 410:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthis.logger.http(error);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn throwError(error);\n\t\t\t})\n\t\t);\n\t}\n\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { Component, ElementRef, Inject, Input, OnChanges, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isArray, isObject } from 'util';\n// import JSONFormatter from 'json-formatter-js';\n\n@Component({\n\tselector: 'json-formatter',\n\ttemplate: `<div #jsonFormatter></div>`,\n\tstyleUrls: ['./json-formatter.component.scss'],\n\tencapsulation: ViewEncapsulation.Emulated,\n})\nexport class JsonFormatterComponent implements OnChanges {\n\t@ViewChild(`jsonFormatter`) input: ElementRef;\n\n\t@Input() json: Array<any> | Object | any;\n\n\telementRef: ElementRef;\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t) { }\n\n\tngOnChanges() {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tif (!isObject(this.json) && !isArray(this.json)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// console.log('JsonFormatterComponent', this.json);\n\t\t\tif (this.elementRef) {\n\t\t\t\tthis.input.nativeElement.removeChild(this.elementRef.nativeElement);\n\t\t\t}\n\t\t\tconst JSONFormatter = require('json-formatter-js').default;\n\t\t\tconst formatter = new JSONFormatter(this.json);\n\t\t\tconst elementRef = formatter.render();\n\t\t\tthis.input.nativeElement.appendChild(elementRef);\n\t\t\tthis.elementRef = new ElementRef(elementRef);\n\t\t}\n\t}\n}\n","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform, WrappedValue } from '@angular/core';\nimport { Observable, SubscriptionLike } from 'rxjs';\n\n@Pipe({\n\tname: 'customAsync',\n\tpure: false\n})\nexport class CustomAsyncPipe implements OnDestroy, PipeTransform {\n\n\tprivate subject: Observable<any> | null = null;\n\tprivate subscription: SubscriptionLike | null = null;\n\tprivate value: any = null;\n\tprivate cachedValue: any = null;\n\n\tconstructor(\n\t\tprivate changeDetector: ChangeDetectorRef\n\t) { }\n\n\ttransform(subject: Observable<any> | null | undefined): any {\n\t\treturn this.observableToValue(subject);\n\t}\n\n\tprivate observableToValue(subject: Observable<any> | null | undefined): any {\n\t\tif (subject !== this.subject) {\n\t\t\tif (this.subject) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t\tif (subject) {\n\t\t\t\tthis.subject = subject;\n\t\t\t\tthis.subscription = this.subject.subscribe((value: any) => {\n\t\t\t\t\t// console.log('CustomAsyncPipe.A', value);\n\t\t\t\t\tthis.value = value;\n\t\t\t\t\tthis.changeDetector.markForCheck(); // mark pipe as dirty\n\t\t\t\t});\n\t\t\t\tthis.cachedValue = this.value; // ???\n\t\t\t\treturn this.value;\n\t\t\t}\n\t\t}\n\t\t// console.log('CustomAsyncPipe.B', this.value);\n\t\tif (this.cachedValue !== this.value) {\n\t\t\tthis.cachedValue = this.value;\n\t\t\treturn WrappedValue.wrap(this.value); // notify that value has changed\n\t\t}\n\t\treturn this.cachedValue; // return cachedValue\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\t\tthis.value = null;\n\t\tthis.cachedValue = null;\n\t\tthis.subscription = null;\n\t\tthis.subject = null;\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.dispose();\n\t}\n\n\tprivate _observableToValue(subject: Observable<any> | null | undefined): any {\n\t\tif (!this.subject) {\n\t\t\tif (subject) {\n\t\t\t\tthis.subject = subject;\n\t\t\t\tthis.subscription = this.subject.subscribe((value: any) => {\n\t\t\t\t\tthis.value = value;\n\t\t\t\t\tthis.changeDetector.markForCheck(); // value has changed\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.cachedValue = this.value;\n\t\t\treturn this.value;\n\t\t}\n\t\tif (subject !== this.subject) {\n\t\t\tthis.dispose();\n\t\t\treturn this.transform(subject as any);\n\t\t}\n\t\tif (this.value === this.cachedValue) {\n\t\t\treturn this.cachedValue;\n\t\t}\n\t\tthis.cachedValue = this.value;\n\t\treturn WrappedValue.wrap(this.value); // value has changed\n\t}\n\n}\n","import { EventEmitter, Injectable, Injector } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { catchError, filter, first, map, take, tap } from 'rxjs/operators';\nimport { ApiService } from '../api/api.service';\nimport { Label } from './label';\n\nexport class LabelKey {\n\tid?: string;\n\tvalue?: string;\n\tdefaultValue?: string;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LabelService<T extends Label> extends ApiService<T> {\n\n\tget collection(): string {\n\t\treturn '/api/label';\n\t}\n\n\tprivate _language: any = new BehaviorSubject({});\n\tpublic readonly language: Observable<any> = this._language.asObservable();\n\tprivate _languages: BehaviorSubject<Array<any>> = new BehaviorSubject([]);\n\tpublic readonly languages: Observable<any[]> = this._languages.asObservable();\n\n\tprivate _lang: string;\n\tpublic get lang(): string {\n\t\treturn this._lang;\n\t}\n\tpublic set lang(lang: string) {\n\t\tif (lang !== this._lang) {\n\t\t\tthis._lang = lang;\n\t\t\tconst language = this._languages.getValue().find(x => x.lang === lang);\n\t\t\tthis._language.next(language);\n\t\t}\n\t}\n\n\tpublic events: EventEmitter<any> = new EventEmitter();\n\tpublic missingHandler?: Function;\n\tpublic cache: {} = {};\n\n\t// !!! new async pipe\n\tprivate collectedKeys: { [key: string]: LabelKey; } = {};\n\t// private cache: { [key: string]: string; } = {};\n\tprivate labels$: Subject<{ [key: string]: string; }> = new Subject();\n\tprivate emitter: EventEmitter<any> = new EventEmitter();\n\n\tconstructor(\n\t\tprotected injector: Injector,\n\t) {\n\t\tsuper(injector);\n\t\tthis._languages.next(this.config.languages);\n\t\tthis._lang = this.config.defaultLanguage;\n\t\tthis.getTranslation(this.lang).subscribe(x => {\n\t\t\t// console.log(x);\n\t\t});\n\t}\n\n\tpublic getTranslation(lang: string): Observable<{}> {\n\t\tif (!lang || !lang.trim()) {\n\t\t\treturn of(null);\n\t\t}\n\t\tthis.lang = lang;\n\t\tif (this.cache[lang]) {\n\t\t\treturn of(this.cache[lang]);\n\t\t} else {\n\t\t\treturn this.get({ lang }).pipe(\n\t\t\t\ttake(1),\n\t\t\t\tmap((x: Label[]) => {\n\t\t\t\t\tif (x[0]) {\n\t\t\t\t\t\tconst labels = x[0].labels;\n\t\t\t\t\t\tthis.cache[lang] = labels;\n\t\t\t\t\t\tthis.events.emit(labels);\n\t\t\t\t\t\treturn labels;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn of(null);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\t/*\n\t\t\t\ttap(x => {\n\t\t\t\t\t// this.logger.log(`found label matching \"${lang}\"`);\n\t\t\t\t})\n\t\t\t\t*/\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic getLabel(key: string, defaultValue?: string, params?: any): string | any {\n\t\tlet value: string | null = null;\n\t\tlet labels: any = this.cache[this.lang];\n\t\tif (labels) {\n\t\t\tconst keys: string[] = key.split('.');\n\t\t\tlet k = keys.shift();\n\t\t\twhile (keys.length > 0 && labels[k]) {\n\t\t\t\tlabels = labels[k];\n\t\t\t\tk = keys.shift();\n\t\t\t}\n\t\t\tvalue = labels[k] || `{${k}}`;\n\t\t}\n\t\treturn this.parseLabel(value, key, defaultValue, params);\n\t}\n\n\tprivate parseLabel(value: string | null, key: string, defaultValue?: string, params?: any): string | any {\n\t\tif (value == null) {\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\tif (value == null) {\n\t\t\treturn this.missingLabel(key);\n\t\t} else if (params) {\n\t\t\treturn this.parseParams(value, params);\n\t\t}\n\t\treturn value;\n\t}\n\n\tprivate missingLabel(key: string): string {\n\t\tif (this.missingHandler) {\n\t\t\treturn typeof this.missingHandler === 'function' ?\n\t\t\t\tthis.missingHandler(key) :\n\t\t\t\tthis.missingHandler;\n\t\t}\n\t\treturn key;\n\t}\n\n\tprivate parseParams(value: string, params: any): string {\n\t\tconst TEMPLATE_REGEXP: RegExp = /@\\s?([^{}\\s]*)\\s?/g; // /{{\\s?([^{}\\s]*)\\s?}}/g;\n\t\treturn value.replace(TEMPLATE_REGEXP, (text: string, key: string) => {\n\t\t\tconst replacer: string = params[key] as string;\n\t\t\treturn typeof replacer !== 'undefined' ? replacer : text;\n\t\t});\n\t}\n\n\t//\n\n\tgetKey(key: string, defaultValue?: string, params?: any): Observable<string> {\n\t\tif (this.cache.hasOwnProperty(key)) {\n\t\t\treturn of(this.cache[key]);\n\t\t} else {\n\t\t\tObject.defineProperty(this.collectedKeys, key, {\n\t\t\t\tvalue: { id: key, defaultValue: defaultValue },\n\t\t\t\tenumerable: true,\n\t\t\t\twritable: false,\n\t\t\t});\n\t\t\tthis.cache[key] = null;\n\t\t}\n\t\treturn this.labels$.pipe(\n\t\t\tmap(items => items[key] || null),\n\t\t\tfilter(label => label !== null),\n\t\t\t// tap(label => console.log('getKey', key, label)),\n\t\t\tmap(label => this.parseLabel(label, key, defaultValue, params)),\n\t\t);\n\t}\n\n\tregister(): Observable<any> {\n\t\treturn this.emitter.pipe(\n\t\t\t// throttleTime(500),\n\t\t\ttap(() => {\n\t\t\t\tthis.collectKeys().pipe(\n\t\t\t\t\tfirst(),\n\t\t\t\t).subscribe((keys) => {\n\t\t\t\t\t// console.log('LabelService.collected', keys);\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\t}\n\n\tcollect(): void {\n\t\tif (Object.keys(this.collectedKeys).length) {\n\t\t\tthis.emitter.emit();\n\t\t}\n\t}\n\n\tprivate collectKeys(): Observable<{ [key: string]: string; }> {\n\t\tconst keys = Object.keys(this.collectedKeys).map(x => this.collectedKeys[x]);\n\t\tthis.collectedKeys = {};\n\t\tif (keys.length) {\n\t\t\t// console.log('LabelService.collectKeys', JSON.stringify(keys));\n\t\t\treturn this.statePost(`/api/i18n/labels`, keys).pipe(\n\t\t\t\tmap((keys: LabelKey[]) => {\n\t\t\t\t\tconst items = {};\n\t\t\t\t\tkeys.forEach(x => items[x.id] = x.value || x.defaultValue);\n\t\t\t\t\treturn items;\n\t\t\t\t}),\n\t\t\t\ttap((items: { [key: string]: string; }) => {\n\t\t\t\t\tObject.assign(this.cache, items);\n\t\t\t\t\tthis.labels$.next(this.cache);\n\t\t\t\t\t// console.log('collectKeys', this.cache);\n\t\t\t\t}),\n\t\t\t\tcatchError(error => {\n\t\t\t\t\tconsole.log('LabelService.collectKeys.error', error);\n\t\t\t\t\treturn of({});\n\t\t\t\t}),\n\t\t\t);\n\t\t\t/*\n\t\t\treturn this.post(`/api/i18n/labels`, keys).pipe(\n\t\t\t\tmap((keys: LabelKey[]) => {\n\t\t\t\t\tconst items = {};\n\t\t\t\t\tkeys.forEach(x => items[x.id] = x.value || x.defaultValue);\n\t\t\t\t\treturn items;\n\t\t\t\t}),\n\t\t\t\ttap((items: { [key: string]: string; }) => {\n\t\t\t\t\tObject.assign(this.cache, items);\n\t\t\t\t\tthis.labels$.next(this.cache);\n\t\t\t\t\t// console.log('collectKeys', this.cache);\n\t\t\t\t}),\n\t\t\t);\n\t\t\t*/\n\t\t} else {\n\t\t\treturn of({});\n\t\t}\n\t}\n\n}\n\nexport function CustomTranslateLoader(injector: Injector) {\n\treturn new LabelService(injector);\n}\n\n","import { ChangeDetectorRef, Injectable, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { CustomAsyncPipe } from '../pipes/custom-async.pipe';\nimport { Label } from './label';\nimport { LabelService } from './label.service';\n\n@Pipe({\n\tname: 'labelAsync',\n\tpure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LabelAsyncPipe implements OnDestroy, PipeTransform {\n\n\tprivate asyncPipe: CustomAsyncPipe;\n\n\tconstructor(\n\t\tprivate changeDetector: ChangeDetectorRef,\n\t\tprivate labelService: LabelService<Label>,\n\t) {\n\t\tthis.asyncPipe = new CustomAsyncPipe(this.changeDetector);\n\t}\n\n\ttransform(key: string, text?: string, params?: any): string {\n\t\treturn this.asyncPipe.transform(this.labelService.getKey(key, text, params));\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.asyncPipe.dispose();\n\t}\n\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { DisposableComponent } from '../disposable/disposable.component';\nimport { Label } from './label';\nimport { LabelService } from './label.service';\n\n@Directive({\n\tselector: '[label]'\n})\nexport class LabelDirective extends DisposableComponent implements OnInit {\n\n\tkey: string;\n\tinnerHTML: string;\n\n\t/*\n\t@Input() set label(key: string) {\n\t\t// console.log('LabelDirective.label', this.key, this.labelParams, this.template, this.view);\n\t}\n\t*/\n\t@Input() label: string;\n\t@Input() labelParams: any;\n\n\tconstructor(\n\t\tprivate element: ElementRef,\n\t\tprivate labelService: LabelService<Label>,\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\t// console.log('LabelDirective.ngOnInit', this.element.nativeElement.innerHTML);\n\t\tthis.labelService.getKey(this.label, this.element.nativeElement.innerHTML, this.labelParams).pipe(\n\t\t\ttakeUntil(this.unsubscribe)\n\t\t).subscribe(label => {\n\t\t\tthis.element.nativeElement.innerHTML = label;\n\t\t\t// console.log('LabelDirective.ngOnInit', label);\n\t\t});\n\t\t// console.log('LabelDirective.ngOnInit', this.label, this.labelParams, this.template, this.view);\n\t}\n}\n","import { ChangeDetectorRef, Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { Label } from './label';\nimport { LabelService } from './label.service';\n\n@Pipe({\n\tname: 'label',\n\tpure: false,\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LabelPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate ref: ChangeDetectorRef,\n\t\tprotected labelService: LabelService<Label>\n\t) {\n\t\tthis.labelService.events.subscribe(\n\t\t\tx => this.ref.markForCheck()\n\t\t);\n\t}\n\n\tpublic transform(key: string, text?: string, params?: any): string {\n\t\t// console.log(key, params);\n\t\t// return WrappedValue.wrap(this.val);\n\t\tconst label = this.labelService.getLabel(key, text, params);\n\t\t// console.log('label', label, this.labelService.cache);\n\t\treturn label;\n\t}\n\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Logger } from './logger';\n\n@Component({\n\tselector: 'core-logger',\n\ttemplateUrl: './logger.component.html',\n\tstyleUrls: ['./logger.component.scss'],\n\tencapsulation: ViewEncapsulation.Emulated,\n})\nexport class LoggerComponent implements OnInit {\n\tconstructor(public logger: Logger) { }\n\n\tngOnInit() {\n\t}\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport class EventEntity {\n\ttype: string | number;\n\tdata?: any;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class EventDispatcherService {\n\n\tprivate emitter: EventEmitter<EventEntity>;\n\n\tconstructor() {\n\t\tthis.emitter = new EventEmitter<EventEntity>();\n\t}\n\n\temit(event: EventEntity): void {\n\t\treturn this.emitter.emit(event);\n\t}\n\n\tobserve(): Observable<EventEntity> {\n\t\treturn this.emitter.pipe(\n\t\t\ttap((event: EventEntity) => console.log('EventDispatcherService', event))\n\t\t);\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { EntityService } from './entity.service';\nimport { MenuItem } from './menu-item';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class MenuService extends EntityService<MenuItem> {\n\n\tget collection(): string {\n\t\treturn '/api/menu';\n\t}\n\n\tconstructor(\n\t\tprotected injector: Injector,\n\t) {\n\t\tsuper(injector);\n\t}\n\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, NgZone, PLATFORM_ID } from '@angular/core';\nimport { from, fromEvent, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// export class OnceEvent extends Event { }\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class OnceService {\n\n\tprivate uid: number = 0;\n\tprivate paths: string[] = [];\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate zone: NgZone,\n\t) { }\n\n\tscript(url: string, callback?: string | boolean): Observable<Event> {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\t// !!! this.zone.runOutsideAngular(() => {\n\t\t\tif (this.paths.indexOf(url) === -1) {\n\t\t\t\tthis.paths.push(url);\n\t\t\t\tlet callbackName: string;\n\t\t\t\tif (callback === true) {\n\t\t\t\t\tcallbackName = 'OnceCallback' + (++this.uid);\n\t\t\t\t\turl = url.split('{{callback}}').join(callbackName);\n\t\t\t\t} else {\n\t\t\t\t\tcallbackName = callback as string;\n\t\t\t\t}\n\t\t\t\tlet callback$: Observable<any>;\n\t\t\t\tconst element = document.createElement('script');\n\t\t\t\telement.type = 'text/javascript';\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback$ = from(\n\t\t\t\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\t\t\t\twindow[callbackName] = function (data) {\n\t\t\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\telement.async = true;\n\t\t\t\t\tcallback$ = fromEvent(element, 'load').pipe(\n\t\t\t\t\t\tmap(x => x as Event)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconst scripts = document.getElementsByTagName('script');\n\t\t\t\tif (scripts.length) {\n\t\t\t\t\tconst script = scripts[scripts.length - 1];\n\t\t\t\t\tscript.parentNode.insertBefore(element, script.nextSibling);\n\t\t\t\t}\n\t\t\t\telement.src = url;\n\t\t\t\treturn callback$;\n\t\t\t} else {\n\t\t\t\treturn of(new Event('loaded!'));\n\t\t\t}\n\t\t\t// });\n\t\t} else {\n\t\t\treturn of(null);\n\t\t}\n\t}\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { ConfigService } from '../config/config.service';\nimport { SegmentPipe } from './segment.pipe';\n\n@Pipe({\n\tname: 'asset',\n\t// pure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AssetPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate configService: ConfigService,\n\t\tprivate segment: SegmentPipe\n\t) { }\n\n\ttransform(data: any[] | string): string {\n\t\tif (typeof data === 'string' && (data.indexOf('http') === 0 || data.indexOf('/media/') === 0)) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst segments = this.segment.transform(data);\n\t\t\tsegments.unshift(this.configService.options.assets);\n\t\t\treturn segments.join('/');\n\t\t}\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { Image, ImageType } from '../models/image';\n\n@Pipe({\n\tname: 'image',\n\t// pure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ImagePipe implements PipeTransform {\n\ttransform(images: Image[], type?: string, queryString?: string): string {\n\t\ttype = type || 'Default';\n\t\tqueryString = queryString ? `?${queryString}` : '';\n\t\tconst imageType: ImageType = ImageType[type] || ImageType.Default;\n\t\tlet image: Image = null;\n\t\tif (images && images.length) {\n\t\t\timage = images.find(i => i.type === imageType) || images[0];\n\t\t}\n\t\treturn image ? (image.url + queryString).replace(/ /g, '%20') : null;\n\t}\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { ConfigService } from '../config/config.service';\nimport { SegmentPipe } from './segment.pipe';\n\n@Pipe({\n\tname: 'public',\n\t// pure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class PublicPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate configService: ConfigService,\n\t\tprivate segment: SegmentPipe\n\t) { }\n\n\ttransform(data: any[] | string): string {\n\t\tconst segments = this.segment.transform(data);\n\t\tsegments.unshift(this.configService.options.public);\n\t\treturn segments.join('/');\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { RouteService } from './route.service';\n\n@Pipe({\n\tname: 'route',\n\tpure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class RoutePipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate routeService: RouteService,\n\t) { }\n\n\ttransform(data: any[] | string): string[] {\n\t\treturn this.routeService.toRoute(data);\n\t}\n\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { filter, first, map, tap } from 'rxjs/operators';\nimport { DocumentIndex } from '../models/document';\nimport { EntityService } from '../models/entity.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SlugService extends EntityService<DocumentIndex> {\n\n\tprivate collectedKeys: { [key: string]: string; } = {};\n\tprivate cache: { [key: string]: string[]; } = {};\n\tprivate slugs$: Subject<{ [key: string]: string[]; }> = new Subject();\n\tprivate emitter: EventEmitter<any> = new EventEmitter();\n\n\tget collection(): string {\n\t\treturn `/api/slug`;\n\t}\n\n\tgetKey(key: string): Observable<string[]> {\n\t\tif (this.cache.hasOwnProperty(key)) {\n\t\t\treturn of(this.cache[key]);\n\t\t} else {\n\t\t\t// console.log('SlugService.getKey', key);\n\t\t\tObject.defineProperty(this.collectedKeys, key, {\n\t\t\t\tvalue: key,\n\t\t\t\tenumerable: true,\n\t\t\t\twritable: false,\n\t\t\t});\n\t\t\tthis.cache[key] = null;\n\t\t}\n\t\t// return observable of key\n\t\treturn this.slugs$.pipe(\n\t\t\tmap(items => items[key]),\n\t\t\tfilter(item => item !== null),\n\t\t);\n\t}\n\n\tregister(): Observable<any> {\n\t\treturn this.emitter.pipe(\n\t\t\t// throttleTime(500),\n\t\t\ttap(() => {\n\t\t\t\tthis.collectKeys().pipe(\n\t\t\t\t\tfirst(),\n\t\t\t\t).subscribe((keys) => {\n\t\t\t\t\t// console.log('SlugService.collected', keys);\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\t}\n\n\tcollect(): void {\n\t\tif (Object.keys(this.collectedKeys).length) {\n\t\t\tthis.emitter.emit();\n\t\t}\n\t}\n\n\tprivate getSlugs(keys: string[]): Observable<DocumentIndex[]> {\n\t\tkeys = keys || [];\n\t\treturn this.statePost(keys).pipe(\n\t\t\t// tap(items => console.log(items)),\n\t\t);\n\t}\n\n\tprivate collectKeys(): Observable<{ [key: string]: string; }> {\n\t\tthis.slugs$.next(this.cache);\n\t\tconst keys = Object.keys(this.collectedKeys);\n\t\tthis.collectedKeys = {};\n\t\treturn this.getSlugs(keys).pipe(\n\t\t\tmap((items: DocumentIndex[]) => {\n\t\t\t\tconst dictionary = {};\n\t\t\t\titems.forEach(x => dictionary[x.mnemonic] = [x.slug]);\n\t\t\t\treturn dictionary;\n\t\t\t}),\n\t\t\ttap((dictionary: { [key: string]: string; }) => {\n\t\t\t\tObject.assign(this.cache, dictionary);\n\t\t\t\tthis.slugs$.next(this.cache);\n\t\t\t})\n\t\t);\n\t}\n\n}\n","import { ChangeDetectorRef, Injectable, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { CustomAsyncPipe } from '../pipes/custom-async.pipe';\nimport { RoutePipe } from '../routes/route.pipe';\nimport { SlugService } from './slug.service';\n\n@Pipe({\n\tname: 'slugAsync',\n\tpure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SlugAsyncPipe implements OnDestroy, PipeTransform {\n\n\tprivate asyncPipe: CustomAsyncPipe;\n\n\tconstructor(\n\t\tprivate changeDetector: ChangeDetectorRef,\n\t\tprivate slugService: SlugService,\n\t\tprivate routePipe: RoutePipe,\n\t) {\n\t\tthis.asyncPipe = new CustomAsyncPipe(this.changeDetector);\n\t}\n\n\ttransform(key: string, segments?: string[]): string[] {\n\t\tlet slugs = this.routePipe.transform(this.asyncPipe.transform(this.slugService.getKey(key)));\n\t\t// console.log('SlugAsyncPipe.transform', key, slugs);\n\t\tif (slugs && segments) {\n\t\t\tslugs = slugs.concat(segments);\n\t\t}\n\t\treturn slugs;\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.asyncPipe.dispose();\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SlugService } from './slug.service';\n\n@Pipe({\n\tname: 'slug',\n\tpure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SlugPipe implements PipeTransform {\n\n\tconstructor(\n\t\t// private routeService: RouteService,\n\t\tprivate slugService: SlugService\n\t) { }\n\n\ttransform(key: string): Observable<string[]> {\n\t\treturn this.slugService.getKey(key);\n\t\t// return this.async.transform<any>(this.slugService.getKey(key));\n\t\t// return this.routeService.toSlug(key);\n\t}\n\n}\n","import { ChangeDetectorRef, Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from './translate.service';\n\n@Pipe({\n\tname: 'translate',\n\tpure: false,\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class TranslatePipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate ref: ChangeDetectorRef,\n\t\tprotected translateService: TranslateService\n\t) {\n\t\t// this.translateService.events.subscribe(\n\t\t// \tx => this.ref.markForCheck()\n\t\t// );\n\t}\n\n\tpublic transform(key: string, params?: { value: any }): string {\n\t\t// const label = this.translateService.getLabel(key, text, params);\n\t\treturn key;\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'safeStyle'\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SafeStylePipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate sanitizer: DomSanitizer\n\t) { }\n\n\ttransform(style: string) {\n\t\treturn this.sanitizer.bypassSecurityTrustStyle(style);\n\t}\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'safeUrl'\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SafeUrlPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate sanitizer: DomSanitizer\n\t) { }\n\n\ttransform(url: string) {\n\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(url);\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'safeHtml'\n})\nexport class TrustPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate sanitizer: DomSanitizer\n\t) { }\n\n\ttransform(text: string) {\n\t\treturn this.sanitizer.bypassSecurityTrustHtml(text);\n\t\t// return this.sanitizer.bypassSecurityTrustStyle(text);\n\t\t// return this.sanitizer.bypassSecurityTrustXxx(text); - see docs\n\t}\n}\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { ConfigService } from './config/config.service';\r\nimport { CoreConfig, CORE_CONFIG } from './config/core.config';\r\nimport { DefaultContentDirective } from './content/default-content.directive';\r\nimport { CoreModuleComponent } from './core-module.component';\r\nimport { CoreRouting } from './core.routing';\r\nimport { DisposableComponent } from './disposable/disposable.component';\r\nimport { ControlComponent } from './forms/controls/control.component';\r\nimport { ControlService } from './forms/controls/control.service';\r\nimport { ExistsValidator } from './forms/exists.validator';\r\nimport { FormService } from './forms/form.service';\r\nimport { MatchValidator } from './forms/match.validator';\r\nimport { UppercaseDirective } from './forms/uppercase.directive';\r\nimport { HighlightPipe } from './highlight/highlight.pipe';\r\nimport { HttpResponseInterceptor } from './http/http-response.interceptor';\r\nimport { HttpStatusCodeService } from './http/http-status-code.service';\r\nimport { JsonFormatterComponent } from './json-formatter/json-formatter.component';\r\nimport { LabelAsyncPipe } from './labels/label-async.pipe';\r\nimport { LabelDirective } from './labels/label.directive';\r\nimport { LabelPipe } from './labels/label.pipe';\r\nimport { LabelService } from './labels/label.service';\r\nimport { Logger } from './logger/logger';\r\nimport { LoggerComponent } from './logger/logger.component';\r\nimport { EventDispatcherService } from './models/event-dispatcher.service';\r\nimport { MenuService } from './models/menu.service';\r\nimport { OnceService } from './once/once.service';\r\nimport { PageNotFoundComponent } from './pages/page-not-found.component';\r\nimport { PageOutletComponent } from './pages/page-outlet.component';\r\nimport { PageComponent } from './pages/page.component';\r\nimport { PageGuard } from './pages/page.guard';\r\nimport { PageService } from './pages/page.service';\r\nimport { StaticGuard } from './pages/static.guard';\r\nimport { AssetPipe } from './pipes/asset.pipe';\r\nimport { CustomAsyncPipe } from './pipes/custom-async.pipe';\r\nimport { ImagePipe } from './pipes/image.pipe';\r\nimport { PublicPipe } from './pipes/public.pipe';\r\nimport { SegmentPipe } from './pipes/segment.pipe';\r\nimport { RoutePipe } from './routes/route.pipe';\r\nimport { SlugAsyncPipe } from './slugs/slug-async.pipe';\r\nimport { SlugPipe } from './slugs/slug.pipe';\r\nimport { CookieStorageService, LocalStorageService, SessionStorageService, StorageService } from './storage/storage.service';\r\nimport { TranslatePipe } from './translate/translate.pipe';\r\nimport { SafeStylePipe } from './trust/safe-style.pipe';\r\nimport { SafeUrlPipe } from './trust/safe-url.pipe';\r\nimport { TrustPipe } from './trust/trust.pipe';\r\n\r\nconst modules = [\r\n\tCommonModule,\r\n\tHttpClientModule,\r\n\tFormsModule,\r\n\tReactiveFormsModule,\r\n\tCoreRouting,\r\n];\r\n\r\nconst services = [\r\n\tAuthService,\r\n\tConfigService,\r\n\tControlService,\r\n\tCookieStorageService,\r\n\tEventDispatcherService,\r\n\tFormService,\r\n\tHttpStatusCodeService,\r\n\tLabelService,\r\n\tLocalStorageService,\r\n\tLogger,\r\n\tMenuService,\r\n\tOnceService,\r\n\tPageService,\r\n\tSessionStorageService,\r\n\tStorageService,\r\n];\r\n\r\nconst components = [\r\n\tControlComponent,\r\n\tCoreModuleComponent,\r\n\tDisposableComponent,\r\n\tJsonFormatterComponent,\r\n\tLoggerComponent,\r\n\tPageComponent,\r\n\tPageNotFoundComponent,\r\n\tPageOutletComponent,\r\n];\r\n\r\nconst directives = [\r\n\tDefaultContentDirective,\r\n\tLabelDirective,\r\n\tUppercaseDirective,\r\n];\r\n\r\nconst pipes = [\r\n\tAssetPipe,\r\n\tCustomAsyncPipe,\r\n\tHighlightPipe,\r\n\tImagePipe,\r\n\tLabelAsyncPipe,\r\n\tLabelPipe,\r\n\tPublicPipe,\r\n\tRoutePipe,\r\n\tSafeStylePipe,\r\n\tSafeUrlPipe,\r\n\tSegmentPipe,\r\n\tSlugAsyncPipe,\r\n\tSlugPipe,\r\n\tTranslatePipe,\r\n\tTrustPipe,\r\n];\r\n\r\nconst validators = [\r\n\tExistsValidator,\r\n\tMatchValidator,\r\n];\r\n\r\nconst guards = [\r\n\tPageGuard,\r\n\tStaticGuard,\r\n];\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\t...modules,\r\n\t],\r\n\tproviders: [\r\n\t\t{ provide: HTTP_INTERCEPTORS, useClass: HttpResponseInterceptor, multi: true },\r\n\t\t...services,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t\t...guards,\r\n\t],\r\n\tdeclarations: [\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n\texports: [\r\n\t\t...modules,\r\n\t\t...components,\r\n\t\t...directives,\r\n\t\t...pipes,\r\n\t\t...validators,\r\n\t],\r\n})\r\n\r\nexport class CoreModule {\r\n\r\n\tconstructor(\r\n\t\t@Optional() @SkipSelf() parentModule: CoreModule\r\n\t) {\r\n\t\tif (parentModule) {\r\n\t\t\tthrow new Error('CoreModule is already loaded. Import it in the AppModule only');\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static forRoot(\r\n\t\tconfig?: CoreConfig,\r\n\t): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: CoreModule,\r\n\t\t\tproviders: [{\r\n\t\t\t\tprovide: CORE_CONFIG, useValue: config\r\n\t\t\t}]\r\n\t\t};\r\n\t}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CoreService {\n\n\tconstructor() { }\n}\n","import { Entity } from '../models/entity';\n\nexport class Label implements Entity {\n\tid: number | string;\n\tname: string;\n\tlang: string;\n\tlabels?: any;\n}\n","import { Entity } from './entity';\n\nexport class Document implements Entity {\n\tid: number | string;\n\tname?: string;\n\ttitle?: string;\n\tdescription?: string;\n\tslug?: string;\n}\n\nexport class DocumentIndex {\n\tid: number | string;\n\tmnemonic?: string;\n\tslug?: string;\n}\n\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Document } from './document'; // !!! Document class conflict?\nimport { EntityService } from './entity.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class DocumentService<T extends Document> extends EntityService<T> {\n\n\tget collection(): string {\n\t\treturn '/api/document';\n\t}\n\n\tgetDetailBySlug(slug: string): Observable<T> {\n\t\tif (!slug.trim()) {\n\t\t\t// if not search term, return empty identity array.\n\t\t\treturn of();\n\t\t}\n\t\treturn this.get({ slug }).pipe(\n\t\t\t// tap(x => this.logger.log(`found identities matching \"${slug}\"`)),\n\t\t\tswitchMap(x => of(x[0]))\n\t\t);\n\t}\n\n}\n","import { Identity } from './identity';\n\nexport class Entity implements Identity {\n\tid: number | string;\n\tname?: string;\n}\n","\nexport class Feature {\n\tid: number | string;\n\tslug?: string;\n\ttitle?: string;\n\tabstract?: string;\n\ttype?: number;\n\treadmore?: boolean = false;\n}\n","\nexport class Identity {\n\tid: number | string;\n}\n","import { Document } from './document';\nimport { Image } from './image';\n\nexport class MenuItem implements Document {\n\tid: number | string;\n\tname?: string;\n\ttitle?: string;\n\tabstract?: string;\n\tslug?: string;\n\turl?: string;\n\ttype?: number | string;\n\timages?: Image[];\n\titems?: MenuItem[];\n\n\tconstructor(options?: any) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t\tif (options.items) {\n\t\t\t\tthis.items = options.items.map(item => new MenuItem(item));\n\t\t\t}\n\t\t}\n\t}\n}\n","\nexport class Taxonomy {\n\tid: number | string;\n\tname?: string;\n\ttype?: number;\n}\n"]}