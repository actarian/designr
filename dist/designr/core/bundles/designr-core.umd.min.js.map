{"version":3,"sources":["ng://@designr/core/lib/storage/storage.service.ts","ng://@designr/core/lib/auth/auth.service.ts","ng://@designr/core/lib/config/core.config.ts","ng://@designr/core/lib/config/config.service.ts","ng://@designr/core/lib/content/default-content.directive.ts","ng://@designr/core/lib/core-module.component.ts","node_modules/tslib/tslib.es6.js","ng://@designr/core/lib/disposable/disposable.component.ts","ng://@designr/core/lib/pipes/segment.pipe.ts","ng://@designr/core/lib/logger/logger.ts","ng://@designr/core/lib/api/api.service.ts","ng://@designr/core/lib/translate/translate.service.ts","ng://@designr/core/lib/routes/route.service.ts","ng://@designr/core/lib/pages/page.component.ts","ng://@designr/core/lib/pages/page-not-found.component.ts","ng://@designr/core/lib/http/http-status-code.service.ts","ng://@designr/core/lib/models/identity.service.ts","ng://@designr/core/lib/models/entity.service.ts","ng://@designr/core/lib/models/image.ts","ng://@designr/core/lib/pages/link.service.ts","ng://@designr/core/lib/pages/page.ts","ng://@designr/core/lib/pages/page.service.ts","ng://@designr/core/lib/pages/page-outlet.component.ts","ng://@designr/core/lib/pages/page-resolver.ts","ng://@designr/core/lib/pages/page-resolver.service.ts","ng://@designr/core/lib/pages/page.guard.ts","ng://@designr/core/lib/pages/static.guard.ts","ng://@designr/core/lib/core.routing.ts","ng://@designr/core/lib/forms/controls/control.component.ts","ng://@designr/core/lib/forms/controls/control.service.ts","ng://@designr/core/lib/forms/controls/match.validator.ts","ng://@designr/core/lib/forms/exists.validator.ts","ng://@designr/core/lib/forms/controls/control-base.ts","ng://@designr/core/lib/forms/controls/control-checkbox.ts","ng://@designr/core/lib/forms/controls/control-email.ts","ng://@designr/core/lib/forms/controls/control-markdown.ts","ng://@designr/core/lib/forms/controls/control-number.ts","ng://@designr/core/lib/forms/controls/control-password.ts","ng://@designr/core/lib/forms/controls/control-radio.ts","ng://@designr/core/lib/forms/controls/control-select.ts","ng://@designr/core/lib/forms/controls/control-text.ts","ng://@designr/core/lib/forms/form.service.ts","ng://@designr/core/lib/forms/match.validator.ts","ng://@designr/core/lib/forms/uppercase.directive.ts","ng://@designr/core/lib/highlight/highlight.pipe.ts","ng://@designr/core/lib/http/http-response.interceptor.ts","ng://@designr/core/lib/json-formatter/json-formatter.component.ts","ng://@designr/core/lib/pipes/custom-async.pipe.ts","ng://@designr/core/lib/labels/label.service.ts","ng://@designr/core/lib/labels/label-async.pipe.ts","ng://@designr/core/lib/labels/label.directive.ts","ng://@designr/core/lib/labels/label.pipe.ts","ng://@designr/core/lib/logger/logger.component.ts","ng://@designr/core/lib/models/event-dispatcher.service.ts","ng://@designr/core/lib/models/menu.service.ts","ng://@designr/core/lib/once/once.service.ts","ng://@designr/core/lib/pipes/asset.pipe.ts","ng://@designr/core/lib/pipes/image.pipe.ts","ng://@designr/core/lib/pipes/public.pipe.ts","ng://@designr/core/lib/routes/route.pipe.ts","ng://@designr/core/lib/slugs/slug.service.ts","ng://@designr/core/lib/slugs/slug-async.pipe.ts","ng://@designr/core/lib/slugs/slug.pipe.ts","ng://@designr/core/lib/translate/translate.pipe.ts","ng://@designr/core/lib/trust/safe-style.pipe.ts","ng://@designr/core/lib/trust/safe-url.pipe.ts","ng://@designr/core/lib/trust/trust.pipe.ts","ng://@designr/core/lib/core.module.ts","ng://@designr/core/lib/core.service.ts","ng://@designr/core/lib/labels/label.ts","ng://@designr/core/lib/models/document.ts","ng://@designr/core/lib/models/menu-item.ts"],"names":["StorageService","prototype","delete","name","exist","get","set","value","days","on","of","tryGet","this","Injectable","args","providedIn","CookieStorageService","platformId","storageService","isSupported","setter","document","cookie","indexOf","cookieName","ca","split","i","length","c","charAt","substring","model","JSON","parse","decodeURIComponent","atob","e","console","log","cache_1","json","stringify","key","push","btoa","encodeURIComponent","interval","timeout","elapsed","checkCookie","setTimeout","expires","date","Date","setTime","getTime","toUTCString","isPlatformBrowser","Inject","PLATFORM_ID","SessionStorageService","cookieStorageService","window","sessionStorage","removeItem","undefined","cache_2","setItem","supported","LocalStorageService","localStorage","cache_3","AuthToken","accessToken","expiresIn","AuthService","injector","localStorageService","cachedRequests","paths","setToken","authToken","retryFailedRequests","getToken","getFakeToken","isValid","now","isAuthenticated","collectFailedRequest","request","Injector","Bearer","Cookie","CoreTransitionConfig","options","Object","assign","CorePrebootConfig","CoreConfig","assets","authStrategy","AuthStrategy","defaultLanguage","defaultMarket","languages","id","lang","origin","pages","production","public","urlStrategy","useHash","useLang","useMarket","preboot","transition","defaultPage","notFoundPage","CORE_CONFIG","InjectionToken","ConfigService","decorators","type","DefaultContentDirective","element","container","renderer","hasContent","nativeElement","ngAfterContentChecked","childNodes","node","nodeType","clear","createEmbeddedView","default","Directive","selector","ElementRef","ViewContainerRef","Renderer2","Input","CoreModuleComponent","version","ngOnInit","Component","template","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","DisposableComponent","unsubscribe","Subject","ngOnDestroy","next","complete","SegmentPipe","location","transform","segments","path","isArray","join","normalize","Pipe","Location","_super","LoggerError","tslib_1.__extends","HttpErrorResponse","Logger","configService","logs","_i","arguments","s","apply","concat","warn","error","http","httpError","message","status","statusText","url","ApiRequestOptions","headers","HttpHeaders","Content-Type","params","HttpParams","ApiService","defineProperty","_logger","_http","HttpClient","_state","TransferState","_platformId","_config","_origin","config","base","collection","toLowerCase","getUrl","method","first","second","_this","pipe","tap","x","logger","post","third","put","patch","identity","toCamelCase","input","output","keyCamelCase","map","slice","toString","getStateKey","flatMap","substr","keys","k","replace","makeStateKey","stateGet","stateKey","state","hasKey","cached","remove","isPlatformServer","onSerialize","statePost","TranslateService","call","use","setDefaultLang","addLangs","getBrowserLang","RouteService","translateService","route","router","segment","componentFactoryResolver","_language","BehaviorSubject","language","asObservable","_languages","pageParams$","currentMarket","setLanguages","subscribeToRouter","_lang","getValue","find","getPageParams","queryParams","distinctUntilChanged","switchMap","parsed","parseParams","forEach","serializeParams","serialized","serialize","base64","Buffer","from","_a","object","getId","snapshot","paramMap","getSlug","toRoute","data","market","marketIndex","splice","langIndex","toSlug","filter","datas","toParams","toData","getParams","events","event","ActivationEnd","firstChild","concatMap","_unused_getPageComponentFactory","pageResolver","page","resolveComponentFactory","component","setLanguage","silent","replaceState","navigate","NavigationStart","subscribe","lang_1","detectLanguage","acceptLanguage","match","detectedLanguage","regexp","RegExp","performance","time","process","hrtime","ActivatedRoute","Router","ComponentFactoryResolver","PageComponent","scrollToTop","NavigationEnd","scrollTo","routeService","slug","PageNotFoundComponent","encapsulation","ViewEncapsulation","Emulated","HttpStatusCodeService","statusCode","redirectUrl","setStatusCode","getStatusCode","getRedirectUrl","IdentityService","getList","getDetailByIdNo404","identities","getDetailById","add","update","EntityService","getDetailByName","trim","Default","Gallery","Share","LinkService","doc","addTag","definition","createElement","updateElementDefinition","head","appendChild","getTag","querySelector","updateTag","removeTag","updateElementAttribute","href","rel","attribute","setAttribute","removeAttribute","DOCUMENT","PageMeta","PageIndex","PageRelation","Page","meta","related","item","relationType","getFeature","features","getFeatures","n","Number","sort","a","getFeaturesByTypes","getGroupedFeaturesByTypes","groups","group","PageService","titleService","metaService","linkService","statusCodeService","getStatePageBySlug","catchError","getStatePageById","getPageById","getPageBySlug","addOrUpdateMetaData","setTitle","title","addOrUpdateMeta","property","content","getSocialImage","description","keywords","robots","locale","author","addOrUpdateLink","canonical","images","ImageType","Title","Meta","PageOutletComponent","viewContainerRef","pageService","routeReuseStrategy","shouldReuseRoute","setSnapshot","factory","instance","createComponent","resetConfig","PageResolver","PageResolverService","events$","pageToPageResolver","resolve","PageGuard","canActivate","canDeactivate","currentRoute","currentState","nextState","StaticGuard","routes","CoreRouting","NgModule","imports","RouterModule","forChild","exports","ControlComponent","reveal","checked","onChange","onTouched","form","controls","control","controlRef","valid","getFormattedValue","onInput","$event","target","onFocus","blurred","setProperty","onBlur","formatValue","parseValue","innervalue","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ControlService","getValidators","validators","min","Validators","max","required","requiredTrue","email","minLength","maxLength","pattern","matchValidator","otherKey","reverse","otherControl","errors","setErrors","toFormGroup","formControl","FormControl","disabled","disable","FormGroup","setValidators","ExistsValidator","values","debounced$","debounceTime","exists$","response","take","exists","validate","NG_ASYNC_VALIDATORS","ControlBaseOptions","ControlBase","_originalValue","uid","label","placeholder","order","schema","step","format","ControlCheckbox","ControlEmail","ControlMarkdown","ControlNumber","ControlPassword","ControlRadio","ControlSelect","ControlText","FormService","controlService","getControlsFromOptions","o","getGroupFromOptions","getGroupFromControls","MatchValidator","root","isReverse","NG_VALIDATORS","Attribute","UppercaseDirective","ngModelChange","EventEmitter","onInputChange","toUpperCase","emit","Output","HostListener","HighlightPipe","text","query","encodeHTML","regExp","escapeRegexChars","safeToString","HttpResponseInterceptor","_router","_routeService","intercept","handle","throwError","JsonFormatterComponent","ngOnChanges","isObject","elementRef","removeChild","require","render","ViewChild","CustomAsyncPipe","changeDetector","subject","subscription","cachedValue","observableToValue","dispose","markForCheck","WrappedValue","wrap","_observableToValue","pure","ChangeDetectorRef","LabelService","cache","collectedKeys","labels$","emitter","getTranslation","labels","getLabel","defaultValue","shift","parseLabel","missingLabel","missingHandler","replacer","getKey","enumerable","writable","items","register","collectKeys","collect","LabelAsyncPipe","labelService","asyncPipe","LabelDirective","innerHTML","labelParams","takeUntil","LabelPipe","ref","LoggerComponent","EventDispatcherService","observe","MenuService","OnceService","zone","script","callback","Event","callbackName_1","callback$","Promise","reject","async","fromEvent","scripts","getElementsByTagName","parentNode","insertBefore","nextSibling","src","NgZone","AssetPipe","unshift","ImagePipe","queryString","imageType","image","PublicPipe","RoutePipe","SlugService","slugs$","getSlugs","dictionary","mnemonic","SlugAsyncPipe","slugService","routePipe","slugs","SlugPipe","TranslatePipe","SafeStylePipe","sanitizer","style","bypassSecurityTrustStyle","DomSanitizer","SafeUrlPipe","bypassSecurityTrustResourceUrl","TrustPipe","bypassSecurityTrustHtml","CoreModule","parentModule","Error","forRoot","ngModule","useValue","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","declarations","HTTP_INTERCEPTORS","useClass","Optional","SkipSelf","CoreService","Label","Document","DocumentIndex","MenuItem"],"mappings":"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","sourcesContent":["import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nconst TIMEOUT = 5 * 60 * 1000; // five minutes\n\n/*\nexport class StorageEvent extends Event {}\n\nexport class CookieStorageEvent extends StorageEvent { }\n\nexport class SessionStorageEvent extends StorageEvent { }\n\nexport class LocalStorageEvent extends StorageEvent { }\n*/\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class StorageService {\n\tpublic delete(name: string): void { }\n\tpublic exist(name: string): boolean { return false; }\n\tpublic get(name: string): any { return null; }\n\tpublic set(name: string, value: any, days?: number): void { }\n\tpublic on(): Observable<any> { return of(null); }\n\tpublic tryGet(): StorageService {\n\t\t// console.log('no StorageService available...');\n\t\treturn this;\n\t}\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CookieStorageService implements StorageService {\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate storageService: StorageService,\n\t) { }\n\n\tpublic tryGet(): StorageService {\n\t\tif (this.isSupported()) {\n\t\t\t// console.log('CookieStorageService.supported');\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn this.storageService.tryGet();\n\t\t}\n\t}\n\n\tpublic delete(name: string): void {\n\t\tthis.setter(name, '', -1);\n\t}\n\n\tpublic exist(name: string): boolean {\n\t\treturn document.cookie.indexOf(';' + name + '=') !== -1 || document.cookie.indexOf(name + '=') === 0;\n\t}\n\n\tpublic get(name: string): any {\n\t\tconst cookieName = name + '=';\n\t\tconst ca = document.cookie.split(';');\n\t\tfor (let i = 0; i < ca.length; i++) {\n\t\t\tlet c = ca[i];\n\t\t\twhile (c.charAt(0) === ' ') {\n\t\t\t\tc = c.substring(1, c.length);\n\t\t\t}\n\t\t\tif (c.indexOf(cookieName) === 0) {\n\t\t\t\tconst value = c.substring(cookieName.length, c.length);\n\t\t\t\tlet model = null;\n\t\t\t\ttry {\n\t\t\t\t\tmodel = JSON.parse(decodeURIComponent(atob(value)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.log('Cookie.get.error parsing', name, e);\n\t\t\t\t}\n\t\t\t\treturn model;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic set(name: string, value: any, days?: number) {\n\t\ttry {\n\t\t\tlet cache = [];\n\t\t\tconst json = JSON.stringify(value, function (key, value) {\n\t\t\t\tif (key === 'pool') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (typeof value === 'object' && value !== null) {\n\t\t\t\t\tif (cache.indexOf(value) !== -1) {\n\t\t\t\t\t\t// throw (new Error('circular reference found, discard key'));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcache.push(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t\tcache = null;\n\t\t\tthis.setter(name, btoa(encodeURIComponent(json)), days);\n\t\t} catch (e) {\n\t\t\tconsole.log('CookieSet.error serializing', name, value, e);\n\t\t}\n\t}\n\n\tpublic on(): Observable<any> {\n\t\t// todo\n\t\tconst interval: number = 1000, timeout: number = TIMEOUT;\n\t\tlet i, elapsed: number = 0;\n\t\tfunction checkCookie() {\n\t\t\tif (elapsed > timeout) {\n\t\t\t\t// promise.reject('timeout');\n\t\t\t} else {\n\t\t\t\tconst c: any = this.get(name);\n\t\t\t\tif (c) {\n\t\t\t\t\t// promise.resolve(c);\n\t\t\t\t} else {\n\t\t\t\t\telapsed += interval;\n\t\t\t\t\ti = setTimeout(checkCookie, interval);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcheckCookie();\n\t\treturn of(null);\n\t}\n\n\tprivate setter(name: string, value: any, days?: number) {\n\t\tlet expires;\n\t\tif (days) {\n\t\t\tconst date = new Date();\n\t\t\tdate.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n\t\t\texpires = '; expires=' + date.toUTCString();\n\t\t} else {\n\t\t\texpires = '';\n\t\t}\n\t\tdocument.cookie = name + '=' + value + expires + '; path=/';\n\t}\n\n\tprivate isSupported(): boolean {\n\t\treturn isPlatformBrowser(this.platformId);\n\t}\n\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SessionStorageService implements StorageService {\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate cookieStorageService: CookieStorageService,\n\t) { }\n\n\tpublic tryGet(): StorageService {\n\t\tif (this.isSupported()) {\n\t\t\t// console.log('SessionStorageService.supported');\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn this.cookieStorageService.tryGet();\n\t\t}\n\t}\n\n\tpublic delete(name: string): void {\n\t\twindow.sessionStorage.removeItem(name);\n\t}\n\n\tpublic exist(name: string): boolean {\n\t\treturn window.sessionStorage[name] !== undefined;\n\t}\n\n\tpublic get(name: string): any {\n\t\tlet value = null;\n\t\tif (window.sessionStorage[name] !== undefined) {\n\t\t\ttry {\n\t\t\t\tvalue = JSON.parse(window.sessionStorage[name]);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log('SessionStorage.get.error parsing', name, e);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\tpublic on(): Observable<any> {\n\t\t/*\n\t\treturn $promise(function (promise) {\n\t\t\tconst timeout = TIMEOUT;\n\t\t\tlet i;\n\t\t\tfunction storageEvent(e) {\n\t\t\t\tif (i) {\n\t\t\t\t\tclearTimeout(i);\n\t\t\t\t}\n\t\t\t\tif (e.originalEvent.key === name) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet value = JSON.parse(e.originalEvent.newValue);\n\t\t\t\t\t\tpromise.resolve(value);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.log('SessionStorage.on.error parsing', name, error);\n\t\t\t\t\t\tpromise.reject('error parsing ' + name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// return fromEvent(window, 'storage');\n\t\t\tangular.element(window).on('storage', storageEvent);\n\t\t\ti = setTimeout(function () {\n\t\t\t\tpromise.reject('timeout');\n\t\t\t}, timeout);\n\t\t});\n\t\t*/\n\t\treturn of(null);\n\t}\n\n\tpublic set(name: string, value: any, days?: number): void {\n\t\ttry {\n\t\t\tlet cache = [];\n\t\t\tconst json = JSON.stringify(value, function (key, value) {\n\t\t\t\tif (key === 'pool') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (typeof value === 'object' && value !== null) {\n\t\t\t\t\tif (cache.indexOf(value) !== -1) {\n\t\t\t\t\t\t// throw (new Error('circular reference found, discard key'));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcache.push(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t\tcache = null;\n\t\t\twindow.sessionStorage.setItem(name, json);\n\t\t} catch (e) {\n\t\t\tconsole.log('SessionStorage.set.error serializing', name, value, e);\n\t\t}\n\t}\n\n\tprivate isSupported(): boolean {\n\t\tlet supported: boolean = false;\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\ttry {\n\t\t\t\tsupported = 'sessionStorage' in window && window.sessionStorage !== null;\n\t\t\t\tif (supported) {\n\t\t\t\t\twindow.sessionStorage.setItem('test', '1');\n\t\t\t\t\twindow.sessionStorage.removeItem('test');\n\t\t\t\t} else {\n\t\t\t\t\tsupported = false;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tsupported = false;\n\t\t\t}\n\t\t}\n\t\treturn supported;\n\t}\n\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LocalStorageService implements StorageService {\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate cookieStorageService: CookieStorageService,\n\t) { }\n\n\tpublic tryGet(): StorageService {\n\t\tif (this.isSupported()) {\n\t\t\t// console.log('LocalStorageService.supported');\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn this.cookieStorageService.tryGet();\n\t\t}\n\t}\n\n\tpublic delete(name: string): void {\n\t\twindow.localStorage.removeItem(name);\n\t}\n\n\tpublic exist(name: string): boolean {\n\t\treturn window.localStorage[name] !== undefined;\n\t}\n\n\tpublic get(name: string): any {\n\t\tlet value = null;\n\t\tif (window.localStorage[name] !== undefined) {\n\t\t\ttry {\n\t\t\t\tvalue = JSON.parse(window.localStorage[name]);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log('LocalStorage.get.error parsing', name, e);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\tpublic on(): Observable<any> {\n\t\t/*\n\t\treturn $promise(function (promise) {\n\t\t\tconst timeout = TIMEOUT;\n\t\t\tlet i;\n\t\t\tfunction storageEvent(e) {\n\t\t\t\tif (i) {\n\t\t\t\t\tclearTimeout(i);\n\t\t\t\t}\n\t\t\t\tif (e.originalEvent.key === name) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet value = JSON.parse(e.originalEvent.newValue);\n\t\t\t\t\t\tpromise.resolve(value);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.log('LocalStorage.on.error parsing', name, error);\n\t\t\t\t\t\tpromise.reject('error parsing ' + name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// return fromEvent(window, 'storage');\n\t\t\tangular.element(window).on('storage', storageEvent);\n\t\t\ti = setTimeout(function () {\n\t\t\t\tpromise.reject('timeout');\n\t\t\t}, timeout);\n\t\t});\n\t\t*/\n\t\treturn of(null);\n\t}\n\n\tpublic set(name: string, value: any, days?: number): void {\n\t\ttry {\n\t\t\tlet cache = [];\n\t\t\tconst json = JSON.stringify(value, function (key, value) {\n\t\t\t\tif (key === 'pool') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (typeof value === 'object' && value !== null) {\n\t\t\t\t\tif (cache.indexOf(value) !== -1) {\n\t\t\t\t\t\t// throw (new Error('circular reference found, discard key'));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcache.push(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t\tcache = null;\n\t\t\twindow.localStorage.setItem(name, json);\n\t\t} catch (e) {\n\t\t\tconsole.log('LocalStorage.set.error serializing', name, value, e);\n\t\t}\n\t}\n\n\tprivate isSupported(): boolean {\n\t\tlet supported: boolean = false;\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\ttry {\n\t\t\t\tsupported = 'localStorage' in window && window.localStorage !== null;\n\t\t\t\tif (supported) {\n\t\t\t\t\twindow.localStorage.setItem('test', '1');\n\t\t\t\t\twindow.localStorage.removeItem('test');\n\t\t\t\t} else {\n\t\t\t\t\tsupported = false;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tsupported = false;\n\t\t\t}\n\t\t}\n\t\treturn supported;\n\t}\n\n}\n","import { HttpRequest } from '@angular/common/http';\nimport { Inject, Injectable, Injector, PLATFORM_ID } from '@angular/core';\nimport { LocalStorageService } from '../storage/storage.service';\n\nexport class AuthToken {\n\tconstructor(\n\t\tpublic accessToken: string,\n\t\tpublic expiresIn: number = 0\n\t) { }\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthService {\n\n\tprivate cachedRequests: Array<HttpRequest<any>> = [];\n\tprivate paths: string[] = [];\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate injector: Injector,\n\t\tprivate localStorageService: LocalStorageService,\n\t) { }\n\n\tsetToken(authToken: AuthToken): void {\n\t\tthis.localStorageService.set('authToken', authToken);\n\t\tthis.retryFailedRequests();\n\t}\n\n\tgetToken(): AuthToken {\n\t\treturn this.localStorageService.get('authToken') as AuthToken;\n\t}\n\n\tgetFakeToken(): AuthToken {\n\t\treturn new AuthToken('fakeToken');\n\t}\n\n\tisValid(authToken: AuthToken): boolean {\n\t\t// return a boolean reflecting whether or not the token is expired\n\t\treturn authToken && (authToken.expiresIn > Date.now() || authToken.expiresIn === 0);\n\t}\n\n\tisAuthenticated(): boolean {\n\t\tconst authToken = this.getToken();\n\t\treturn this.isValid(authToken);\n\t}\n\n\tcollectFailedRequest(request): void {\n\t\tthis.cachedRequests.push(request);\n\t}\n\n\tretryFailedRequests(): void {\n\t\t// this method can be called after the token is refreshed\n\t\t// console.log('AuthService.retryFailedRequests');\n\t\t// retry the requests.\n\t}\n\n}\n","import { InjectionToken, Type } from '@angular/core';\nimport { PageComponent } from '../pages/page.component';\nimport { Pages } from '../pages/pages';\n\nexport enum AuthStrategy {\n\tBearer = 0,\n\tCookie = 1,\n}\n\nexport class Language {\n\tid?: number;\n\tname?: string;\n\tlang?: string;\n}\n\nexport class CoreTransitionConfig {\n\tappId?: string;\n\n\tconstructor(options?: CoreTransitionConfig) {\n\t\tconsole.log('CoreTransitionConfig', options);\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t}\n}\n\nexport class CorePrebootConfig {\n\tappRoot?: string;\n\n\tconstructor(options?: CorePrebootConfig) {\n\t\tconsole.log('CorePrebootConfig', options);\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t}\n}\n\nexport class CoreConfig {\n\tassets?: string = '';\n\tauthStrategy?: AuthStrategy = AuthStrategy.Cookie;\n\tdefaultLanguage?: string = 'it';\n\tdefaultMarket?: string = 'it';\n\tdefaultPage?: Type<PageComponent>;\n\teditor?: boolean;\n\tenableTracing?: boolean;\n\tlanguages?: Language[] = [{ id: 1, name: 'Italiano', lang: 'it' }];\n\tnotFoundPage?: Type<PageComponent>;\n\torigin?: string = '';\n\tpages?: Pages = {};\n\tpreboot?: CorePrebootConfig;\n\tproduction?: boolean = false;\n\tpublic?: string = '';\n\ttransition?: CoreTransitionConfig;\n\turlStrategy?: string = '';\n\tuseHash?: boolean = true;\n\tuseLang?: boolean = false;\n\tuseMarket?: boolean = false;\n\tuseServiceWorker?: boolean;\n\n\tconstructor(options?: CoreConfig) {\n\t\tconsole.log('CoreConfig', options);\n\t\tif (options) {\n\t\t\tthis.pages = options.pages || {};\n\t\t\tthis.preboot = new CorePrebootConfig(options.preboot);\n\t\t\tthis.transition = new CoreTransitionConfig(options.transition);\n\t\t\tthis.defaultPage = options.defaultPage;\n\t\t\tthis.notFoundPage = options.notFoundPage;\n\t\t} else {\n\t\t\tthis.preboot = new CorePrebootConfig();\n\t\t\tthis.transition = new CoreTransitionConfig();\n\t\t}\n\t}\n}\n\nexport const CORE_CONFIG = new InjectionToken<CoreConfig>('core.config');\n","\nimport { Inject, Injectable } from '@angular/core';\nimport { CoreConfig, CORE_CONFIG } from './core.config';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ConfigService {\n\n\tpublic options: CoreConfig;\n\n\tconstructor(\n\t\t@Inject(CORE_CONFIG) options: CoreConfig\n\t) {\n\t\tconsole.log('ConfigService', options);\n\t\toptions = options || {};\n\t\t// options.defaultPage = (options.defaultPage || PageNotFoundComponent) as Type<PageComponent>;\n\t\t// options.notFoundPage = (options.notFoundPage || PageNotFoundComponent) as Type<PageComponent>;\n\t\tthis.options = new CoreConfig(options);\n\t}\n\n}\n","import { AfterContentChecked, Directive, ElementRef, Input, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n\tselector: '[default]',\n})\nexport class DefaultContentDirective implements AfterContentChecked {\n\n\t@Input() default: TemplateRef<any>;\n\tprivate element: HTMLElement;\n\tprivate hasContent = true;\n\n\tconstructor(\n\t\telement: ElementRef,\n\t\tprivate container: ViewContainerRef,\n\t\tprivate renderer: Renderer2) {\n\t\tthis.element = element.nativeElement;\n\t}\n\n\tngAfterContentChecked(): void {\n\t\tlet hasContent = false;\n\t\tconsole.log('DefaultContentDirective', this.element.childNodes);\n\t\tfor (let i = this.element.childNodes.length - 1; i >= 0; --i) {\n\t\t\tconst node = this.element.childNodes[i];\n\t\t\tif (node.nodeType === 1 || node.nodeType === 3) {\n\t\t\t\thasContent = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (hasContent !== this.hasContent) {\n\t\t\tthis.hasContent = hasContent;\n\t\t\tif (hasContent) {\n\t\t\t\t// this.renderer.removeClass(this.element, 'is-empty');\n\t\t\t\tthis.container.clear();\n\t\t\t} else {\n\t\t\t\t// this.renderer.addClass(this.element, 'is-empty');\n\t\t\t\tthis.container.createEmbeddedView(this.default);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'core-module',\n\ttemplate: `<span class=\"core-module\">core {{version}}</span>`,\n\tstyles: []\n})\nexport class CoreModuleComponent implements OnInit {\n\n\tversion: string = '0.0.1';\n\n\tconstructor() { }\n\n\tngOnInit() {\n\t}\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nimport { Component, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n\ttemplate: ''\n})\nexport class DisposableComponent implements OnDestroy {\n\n\tprotected unsubscribe: any = new Subject();\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe.next();\n\t\tthis.unsubscribe.complete();\n\t\t// console.log('DisposableComponent.ngOnDestroy', this);\n\t}\n\n}\n","\nimport { Location } from '@angular/common';\nimport { Injectable, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'segment',\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SegmentPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate location: Location\n\t) { }\n\n\ttransform(segments: any[] | string): any[] {\n\t\tsegments = segments != null ? (Array.isArray(segments) ? segments : segments.split('/')) : [];\n\t\tlet path: string = segments.join('/');\n\t\tpath = this.location.normalize(path);\n\t\tif (path.indexOf('/') !== 0) {\n\t\t\tpath = `/${path}`;\n\t\t}\n\t\tsegments = path.split('/');\n\t\treturn segments;\n\t}\n\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ConfigService } from '../config/config.service';\n\nexport class LoggerError extends HttpErrorResponse {\n\tbody?: any;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class Logger {\n\n\thttpError: LoggerError;\n\tlogs: string[] = [];\n\n\tconstructor(\n\t\tprivate configService: ConfigService,\n\t) {\n\t\t//\n\t}\n\n\trequest(...args: any[]) {\n\t\tif (!this.configService.options.production) {\n\t\t\tconst s = args.join(', ');\n\t\t\tthis.logs.push(s);\n\t\t\t// console.log.apply(this, ['%c %s', 'background: #dddddd; color: #111'].concat(args));\n\t\t}\n\t}\n\n\tlog(...args: any[]) {\n\t\tif (!this.configService.options.production) {\n\t\t\tconst s = args.join(', ');\n\t\t\tthis.logs.push(s);\n\t\t\tconsole.log.apply(this, ['%c%s', 'background: #1976d2; color: #fff; border-radius: 3px; padding: 4px 8px; margin-bottom: 4px;'].concat(args));\n\t\t}\n\t}\n\n\twarn(...args: any[]) {\n\t\tif (!this.configService.options.production) {\n\t\t\tconst s = args.join(', ');\n\t\t\tthis.logs.push(s);\n\t\t\tconsole.log.apply(this, ['%c%s', 'background: #ff5500; color: #fff'].concat(args));\n\t\t}\n\t}\n\n\terror(...args: any[]) {\n\t\tif (!this.configService.options.production) {\n\t\t\tconst s = args.join(', ');\n\t\t\tthis.logs.push(s);\n\t\t\tconsole.error.apply(console, args);\n\t\t}\n\t}\n\n\thttp(error: HttpErrorResponse) {\n\t\tthis.httpError = error;\n\t\tif (!this.configService.options.production) {\n\t\t\tthis.logs.push(error.message);\n\t\t}\n\t\tconsole.warn('Logger.http.error', error.status, error.statusText, error.url);\n\t}\n\n\tclear() {\n\t\tthis.httpError = null;\n\t\tthis.logs = [];\n\t}\n}\n","import { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable, Injector, PLATFORM_ID } from '@angular/core';\nimport { makeStateKey, StateKey, TransferState } from '@angular/platform-browser';\nimport { Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ConfigService } from '../config/config.service';\nimport { CoreConfig } from '../config/core.config';\nimport { Logger } from '../logger/logger';\nimport { Identity } from '../models/identity';\n\nexport class ApiRequestOptions {\n\theaders?: HttpHeaders;\n\tparams?: HttpParams;\n\tconstructor(options?: {}) {\n\t\tthis.headers = new HttpHeaders({\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\t\tthis.params = options ? new HttpParams(options) : null;\n\t}\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ApiService<T extends Identity> {\n\n\tget collection(): string {\n\t\treturn '/api';\n\t}\n\n\tprivate _logger: Logger;\n\tget logger(): Logger {\n\t\tif (!this._logger) {\n\t\t\tthis._logger = this.injector.get(Logger);\n\t\t}\n\t\treturn this._logger;\n\t}\n\n\tprivate _http: HttpClient;\n\tget http(): HttpClient {\n\t\tif (!this._http) {\n\t\t\tthis._http = this.injector.get(HttpClient);\n\t\t}\n\t\treturn this._http;\n\t}\n\n\tprivate _state: TransferState;\n\tget state(): TransferState {\n\t\tif (!this._state) {\n\t\t\tthis._state = this.injector.get(TransferState);\n\t\t}\n\t\treturn this._state;\n\t}\n\n\tprivate _platformId: string;\n\tget platformId(): string {\n\t\tif (!this._platformId) {\n\t\t\tthis._platformId = this.injector.get<string>(PLATFORM_ID);\n\t\t}\n\t\treturn this._platformId;\n\t}\n\n\tprivate _config: CoreConfig;\n\tget config(): CoreConfig {\n\t\tif (!this._config) {\n\t\t\tthis._config = this.injector.get(ConfigService).options;\n\t\t}\n\t\treturn this._config;\n\t}\n\n\tprivate _origin: string;\n\tget origin(): string {\n\t\tif (!this._origin) {\n\t\t\tthis._origin = this.config.origin;\n\t\t}\n\t\treturn this._origin;\n\t}\n\n\tget url(): string {\n\t\tlet base: string = this.origin;\n\t\tconst collection = this.collection.toLowerCase();\n\t\tif (collection.indexOf('http') === 0) {\n\t\t\tbase = '';\n\t\t}\n\t\treturn `${base}${collection}`;\n\t}\n\n\tconstructor(\n\t\tprotected injector: Injector\n\t) { }\n\n\tgetUrl(method: string = ''): string {\n\t\treturn `${this.url}${method}`;\n\t}\n\n\tget(first?: string | {}, second?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst params: {} = (typeof first === 'object' ? first : second);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\treturn this.http.get<T>(url, options).pipe(\n\t\t\ttap(x => this.logger.request(url)),\n\t\t);\n\t}\n\n\tpost(first: string | {}, second?: {}, third?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst model: {} = (typeof first === 'object' ? first : second);\n\t\tconst params: {} = (typeof second === 'object' ? second : third);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\treturn this.http.post<T>(url, model, options).pipe(\n\t\t\ttap(x => this.logger.request(url)),\n\t\t);\n\t}\n\n\tput(first: string | T, second?: T | {}, third?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst model: T = (typeof first === 'object' ? first : second) as T;\n\t\tconst params: {} = (typeof second === 'object' ? second : third);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\treturn this.http.put<T>(url, model, options).pipe(\n\t\t\ttap(x => this.logger.request(url)),\n\t\t);\n\t}\n\n\tpatch(first: string | T, second?: T | {}, third?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst model: T = (typeof first === 'object' ? first : second) as T;\n\t\tconst params: {} = (typeof second === 'object' ? second : third);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\treturn this.http.patch<T>(url, model, options).pipe(\n\t\t\ttap(x => this.logger.request(url)),\n\t\t);\n\t}\n\n\tdelete(first: string | T | number, second?: T | number | {}, third?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst identity: T | number = (typeof first !== 'string' ? first : second) as T | number;\n\t\tconst id = identity ? (typeof identity === 'number' ? identity : identity.id) : null;\n\t\tconst params: {} = (typeof second === 'object' ? second : third);\n\t\tconst url: string = id !== null ? this.getUrl(`${method}/${id}`) : this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\treturn this.http.delete<T[]>(url, options).pipe(\n\t\t\ttap(x => this.logger.request(url)),\n\t\t);\n\t}\n\n\ttoCamelCase(input: any): any {\n\t\tlet output, key, keyCamelCase, value;\n\t\tif (input instanceof Array) {\n\t\t\treturn input.map((value: any) => {\n\t\t\t\tif (typeof value === 'object') {\n\t\t\t\t\tvalue = this.toCamelCase(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t});\n\t\t} else {\n\t\t\toutput = {};\n\t\t\tfor (key in input) {\n\t\t\t\tif (input.hasOwnProperty(key)) {\n\t\t\t\t\tkeyCamelCase = (key.charAt(0).toLowerCase() + key.slice(1) || key).toString();\n\t\t\t\t\tvalue = input[key];\n\t\t\t\t\tif (value instanceof Array || (value !== null && value.constructor === Object)) {\n\t\t\t\t\t\tvalue = this.toCamelCase(value);\n\t\t\t\t\t}\n\t\t\t\t\toutput[keyCamelCase] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// TRANSFER STATE\n\n\tgetStateKey(url: string, model: {}): StateKey<T> {\n\t\tconst flatMap = (s: string, x: any) => {\n\t\t\tif (typeof x === 'number') {\n\t\t\t\ts += x.toString();\n\t\t\t} else if (typeof x === 'string') {\n\t\t\t\ts += x.substr(0, 10);\n\t\t\t} else if (x && typeof x === 'object') {\n\t\t\t\ts += '_' + Object.keys(x).map(k => k + '_' + flatMap('', x[k])).join('_');\n\t\t\t}\n\t\t\treturn s;\n\t\t};\n\t\turl = flatMap(url, model);\n\t\t// console.log('ApiService.getStateKey.url', url);\n\t\tconst key: string = url.replace(/(\\W)/gm, '_');\n\t\t// this.logger.log('ApiService.getStateKey.key', key);\n\t\treturn makeStateKey(key);\n\t}\n\n\tstateGet(first?: string | {}, second?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst params: {} = (typeof first === 'object' ? first : second);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\tconst stateKey = this.getStateKey(url, params);\n\t\tif (isPlatformBrowser(this.platformId) && this.state.hasKey(stateKey)) {\n\t\t\tconst cached = this.state.get(stateKey, null);\n\t\t\tthis.state.remove(stateKey);\n\t\t\treturn of(cached);\n\t\t} else {\n\t\t\treturn this.http.get<T>(url, options).pipe(\n\t\t\t\ttap(x => {\n\t\t\t\t\tif (isPlatformServer(this.platformId)) {\n\t\t\t\t\t\tthis.state.onSerialize(stateKey, () => x);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n\n\tstatePost(first: string | {}, second?: {}, third?: {}): Observable<any> {\n\t\tconst method: string = (typeof first === 'string' ? first : '');\n\t\tconst model: {} = (typeof first === 'object' ? first : second);\n\t\tconst params: {} = (typeof second === 'object' ? second : third);\n\t\tconst url: string = this.getUrl(method);\n\t\tconst options = new ApiRequestOptions(params);\n\t\tconst stateKey = this.getStateKey(url, model);\n\t\tif (isPlatformBrowser(this.platformId) && this.state.hasKey(stateKey)) {\n\t\t\tconst cached = this.state.get(stateKey, null);\n\t\t\tthis.state.remove(stateKey);\n\t\t\treturn of(cached);\n\t\t} else {\n\t\t\treturn this.http.post<T>(url, model, options).pipe(\n\t\t\t\ttap(x => {\n\t\t\t\t\tif (isPlatformServer(this.platformId)) {\n\t\t\t\t\t\tthis.state.onSerialize(stateKey, () => x);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { ApiService } from '../api/api.service';\n\nexport class Translate {\n\tid: string;\n\tvalue?: string;\n\tdefaultValue?: string;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class TranslateService extends ApiService<Translate>  {\n\n\tget collection(): string {\n\t\treturn '/api/translate';\n\t}\n\n\tconstructor(\n\t\tprotected injector: Injector\n\t) {\n\t\tsuper(injector);\n\t}\n\n\tpublic use(lang: string) {\n\n\t}\n\n\tpublic setDefaultLang(lang: string) {\n\n\t}\n\n\tpublic addLangs(lang: string[]) {\n\n\t}\n\n\tpublic getBrowserLang(): string {\n\t\treturn 'it';\n\t}\n}\n","\n\nimport { isPlatformBrowser, isPlatformServer, Location } from '@angular/common';\nimport { ComponentFactory, ComponentFactoryResolver, Inject, Injectable, Injector, PLATFORM_ID } from '@angular/core';\nimport { ActivatedRoute, ActivationEnd, NavigationStart, Params, Router } from '@angular/router';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { concatMap, distinctUntilChanged, filter, map, switchMap, tap } from 'rxjs/operators';\nimport { ConfigService } from '../config/config.service';\nimport { Page } from '../pages/page';\nimport { PageComponent } from '../pages/page.component';\nimport { SegmentPipe } from '../pipes/segment.pipe';\nimport { TranslateService } from '../translate/translate.service';\n\ndeclare const Buffer;\ndeclare const process;\n\n// @dynamic\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class RouteService {\n\n\tstatic startTime: number;\n\tstatic endTime: number;\n\tprivate urlStrategy: string;\n\tprivate _language: any = new BehaviorSubject({});\n\tpublic readonly language: Observable<any> = this._language.asObservable();\n\tprivate _languages: BehaviorSubject<Array<any>> = new BehaviorSubject([]);\n\tpublic readonly languages: Observable<any[]> = this._languages.asObservable();\n\tprivate _lang: string;\n\tprivate path: string;\n\tpublic page: Page;\n\tpublic params: Observable<Params>;\n\tpublic queryParams: Observable<Params>;\n\tprivate busy: boolean;\n\tpublic currentMarket: string;\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate configService: ConfigService,\n\t\tprivate injector: Injector,\n\t\tprivate translateService: TranslateService,\n\t\tprivate location: Location,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate router: Router,\n\t\tprivate segment: SegmentPipe,\n\t\tprivate componentFactoryResolver: ComponentFactoryResolver\n\t) {\n\t\tthis.urlStrategy = this.configService.options.urlStrategy;\n\t\tthis._languages.next(this.configService.options.languages);\n\t\tthis.currentMarket = this.configService.options.defaultMarket;\n\t\tthis.setLanguages();\n\t\tif (this.configService.options.useLang || this.configService.options.useMarket) {\n\t\t\tthis.subscribeToRouter();\n\t\t}\n\t}\n\n\tprivate get lang(): string {\n\t\treturn this._lang;\n\t}\n\n\tprivate set lang(lang: string) {\n\t\tif (lang !== this._lang) {\n\t\t\tthis._lang = lang;\n\t\t\tconst language = this._languages.getValue().find(x => x.lang === lang);\n\t\t\tthis._language.next(language);\n\t\t\tthis.translateService.use(lang);\n\t\t\t// console.log('RouteService.set lang', lang, this.configService.options.useLang);\n\t\t\tif (this.configService.options.useLang) {\n\t\t\t\tconst _lang: string = this._lang;\n\t\t\t\tlet path = this.location.path();\n\t\t\t\tif (path.indexOf(`/${_lang}`) === 0) {\n\t\t\t\t\tpath = path.replace(`/${_lang}`, `/${lang}`);\n\t\t\t\t} else if (path.indexOf(`/${lang}`) !== 0) {\n\t\t\t\t\tpath = `/${lang}` + path;\n\t\t\t\t}\n\t\t\t\tthis.path = path;\n\t\t\t\t// const langIndex = this.urlStrategy.split('/').indexOf(':lang');\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get currentLang(): string {\n\t\treturn this._lang;\n\t}\n\n\tpublic pageParams$: BehaviorSubject<Params> = new BehaviorSubject({});\n\tpublic getPageParams(): Observable<Params> {\n\t\t// console.log('RouteService.getPageParams', this.router.url);\n\t\treturn this.route.queryParams.pipe(\n\t\t\tdistinctUntilChanged(),\n\t\t\tswitchMap(params => {\n\t\t\t\t// console.log(params);\n\t\t\t\tconst parsed = this.parseParams(params);\n\t\t\t\tthis.pageParams$.next(parsed);\n\t\t\t\treturn of(parsed);\n\t\t\t}),\n\t\t\t// tap(params => console.log('RouteService.getPageParams', params)),\n\t\t);\n\t}\n\n\tpublic parseParams(params: any): any {\n\t\tconst parsed = {};\n\t\tObject.keys(params).forEach(k => parsed[k] = this.parse(params[k]));\n\t\t/*\n\t\tfor (const key in params) {\n\t\t\tif (typeof (params[key]) === 'string') {\n\t\t\t\tparsed[key] = this.parse(params[key]);\n\t\t\t} else {\n\t\t\t\tparsed[key] = params[key];\n\t\t\t}\n\t\t}\n\t\t*/\n\t\treturn parsed;\n\t}\n\n\tpublic serializeParams(params: any) {\n\t\tconst serialized = {};\n\t\tObject.keys(params).forEach(k => serialized[k] = this.serialize(params[k]));\n\t\treturn serialized;\n\t}\n\n\tpublic parse(base64) {\n\t\ttry {\n\t\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\t\treturn JSON.parse(window.atob(base64));\n\t\t\t} else {\n\t\t\t\treturn JSON.parse(Buffer.from(base64, 'base64').toString('ascii'));\n\t\t\t}\n\t\t} catch {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic serialize(object) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\treturn window.btoa(JSON.stringify(object));\n\t\t} else {\n\t\t\treturn Buffer.from(JSON.stringify(object), 'ascii').toString('base64');\n\t\t}\n\t}\n\n\tpublic getId(): number {\n\t\treturn +this.route.snapshot.paramMap.get('id');\n\t}\n\n\tpublic getSlug(): string {\n\t\treturn this.route.snapshot.paramMap.get('slug');\n\t}\n\n\tpublic toRoute(data: any[] | string): any[] {\n\t\tconst segments = this.segment.transform(data);\n\t\tif (this.configService.options.useMarket) {\n\t\t\tconst market: string = this.currentMarket;\n\t\t\tconst marketIndex = this.urlStrategy.split('/').indexOf(':market');\n\t\t\tsegments.splice(marketIndex, 0, market);\n\t\t}\n\t\tif (this.configService.options.useLang) {\n\t\t\tconst lang: string = this._lang;\n\t\t\tconst langIndex = this.urlStrategy.split('/').indexOf(':lang');\n\t\t\tsegments.splice(langIndex, 0, lang);\n\t\t}\n\t\t// console.log('RouteService.toRoute', segments);\n\t\treturn segments;\n\t}\n\n\tpublic toSlug(data: any[] | string): any[] {\n\t\tconst segments = this.segment.transform(data);\n\t\tlet paths = segments.filter(x => {\n\t\t\treturn typeof x === 'string';\n\t\t});\n\t\tconst datas = segments.filter(x => {\n\t\t\treturn typeof x !== 'string';\n\t\t});\n\t\tif (this.configService.options.useMarket) {\n\t\t\tconst marketIndex = this.urlStrategy.split('/').indexOf(':market');\n\t\t\tif (paths.length > marketIndex) {\n\t\t\t\tpaths[marketIndex] = '*';\n\t\t\t}\n\t\t}\n\t\tif (this.configService.options.useLang) {\n\t\t\tconst langIndex = this.urlStrategy.split('/').indexOf(':lang');\n\t\t\tif (paths.length > langIndex) {\n\t\t\t\tpaths[langIndex] = '*';\n\t\t\t}\n\t\t}\n\t\tpaths = paths.join('/').replace(/\\/\\*/gi, '').split('/');\n\t\t// console.log('RouteService.toSlug', data, paths);\n\t\treturn paths.concat(datas);\n\t}\n\n\tpublic toParams(data: any): any {\n\t\treturn {\n\t\t\tdata: window.btoa(JSON.stringify(data))\n\t\t};\n\t}\n\n\tpublic toData(params: any): any {\n\t\tif (params && params.data) {\n\t\t\treturn JSON.parse(window.atob(params.data));\n\t\t}\n\t}\n\n\tpublic getParams(): Observable<ComponentFactory<PageComponent>> {\n\t\treturn this.router.events.pipe(\n\t\t\tfilter(event => event instanceof ActivationEnd),\n\t\t\tmap(() => this.route),\n\t\t\tdistinctUntilChanged(),\n\t\t\tmap(route => route.firstChild),\n\t\t\tswitchMap(route => route.params),\n\t\t\t/*\n\t\t\ttap((params) => {\n\t\t\t\t// console.log('getParams', params);\n\t\t\t}),\n\t\t\t*/\n\t\t\tconcatMap(x => {\n\t\t\t\treturn of(this.toData(x));\n\t\t\t})\n\t\t);\n\t}\n\n\tpublic _unused_getPageComponentFactory(): Observable<ComponentFactory<PageComponent>> {\n\t\treturn this.router.events.pipe(\n\t\t\tfilter(event => event instanceof ActivationEnd),\n\t\t\t/*\n\t\t\ttap((event) => {\n\t\t\t\t// console.log('ActivationEnd', event);\n\t\t\t}),\n\t\t\t*/\n\t\t\tmap(() => this.route),\n\t\t\tdistinctUntilChanged(),\n\t\t\tmap(route => route.firstChild),\n\t\t\ttap((route) => {\n\t\t\t\tthis.params = route.params.pipe(\n\t\t\t\t\tconcatMap(x => {\n\t\t\t\t\t\treturn of(this.toData(x));\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tthis.queryParams = route.queryParams.pipe(\n\t\t\t\t\t// tap(x => console.log('queryParams', x)),\n\t\t\t\t\tconcatMap(x => {\n\t\t\t\t\t\treturn of(this.toData(x));\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\t// console.log('params', this.route.params);\n\t\t\t}),\n\t\t\tswitchMap(route => route.data),\n\t\t\tmap((data): ComponentFactory<PageComponent> => {\n\t\t\t\tif (data.pageResolver) {\n\t\t\t\t\tthis.page = data.pageResolver.page;\n\t\t\t\t\tconst factory: ComponentFactory<PageComponent> = this.componentFactoryResolver.resolveComponentFactory(data.pageResolver.component);\n\t\t\t\t\treturn factory;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tpublic setLanguage(lang: string, silent?: boolean) {\n\t\tthis.lang = lang;\n\t\tif (this.configService.options.useLang && this.path) {\n\t\t\t// console.log('RouteService.setLanguage', this.path, this._lang, lang, silent);\n\t\t\tif (silent) {\n\t\t\t\tthis.location.replaceState(this.path);\n\t\t\t} else {\n\t\t\t\tthis.router.navigate([this.path]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// PRIVATE METHODS\n\n\tprivate setLanguages() {\n\t\tthis.translateService.addLangs(this.configService.options.languages ? this.configService.options.languages.map(x => x.lang) : []);\n\t\tthis.translateService.setDefaultLang(this.configService.options.defaultLanguage);\n\t\t// this.setLanguage(this.detectLanguage(), true);\n\t\tthis.setLanguage(this.configService.options.defaultLanguage, true);\n\t\t/*\n\t\tthis.translateService.onLangChange.subscribe((e: LangChangeEvent) => {\n\t\t\t// console.log('RouteService.onLangChange', e);\n\t\t});\n\t\t*/\n\t}\n\n\tprivate subscribeToRouter() {\n\t\tthis.router.events.pipe(\n\t\t\tfilter(event => event instanceof NavigationStart)\n\t\t).subscribe((event: NavigationStart) => {\n\t\t\tconst location = this.location.normalize(event.url).split('/');\n\t\t\tif (this.configService.options.useMarket) {\n\t\t\t\tconst marketIndex = this.urlStrategy.split('/').indexOf(':market');\n\t\t\t\tconst market = location[marketIndex];\n\t\t\t\tif (market !== this.currentMarket) {\n\t\t\t\t\tthis.currentMarket = market;\n\t\t\t\t\t// console.log('RouteService.setMarket', market, event.url);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.configService.options.useLang) {\n\t\t\t\tconst langIndex = this.urlStrategy.split('/').indexOf(':lang');\n\t\t\t\tconst lang = location[langIndex];\n\t\t\t\tif (lang !== this._lang) {\n\t\t\t\t\tconst language = this._languages.getValue().find(x => x.lang === lang);\n\t\t\t\t\tthis._language.next(language);\n\t\t\t\t\tthis.translateService.use(lang);\n\t\t\t\t\t// console.log('RouteService.setLang', lang, this._lang, langIndex, location, event.url);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate detectLanguage(): string {\n\t\tlet acceptLanguage: string = null;\n\t\tif (isPlatformServer(this.platformId)) {\n\t\t\t/*\n\t\t\t// server side express engine\n\t\t\tapp.engine('html',  (_, options, callback) => {\n\t\t\t\tlet engine = ngExpressEngine({\n\t\t\t\t\tbootstrap: ServerAppModule,\n\t\t\t\t\tproviders: [ { provide: 'request', useFactory: () => options.req } ]\n\t\t\t\t});\n\t\t\t\tengine(_, options, callback)\n\t\t\t})\n\t\t\t*/\n\t\t\tconst request = this.injector.get('request');\n\t\t\tif (request) {\n\t\t\t\tacceptLanguage = request.headers['accept-language'];\n\t\t\t\tconst languages: string[] = acceptLanguage.match(/[a-zA-Z\\-]{2,10}/g) || [];\n\t\t\t\tif (languages.length > 0) {\n\t\t\t\t\tacceptLanguage = languages[0].split('-')[0];\n\t\t\t\t} else {\n\t\t\t\t\tacceptLanguage = null;\n\t\t\t\t}\n\t\t\t\t// console.log('request', request, 'acceptLanguage', acceptLanguage);\n\t\t\t}\n\t\t\t// console.log('RouteService.isPlatformServer', this.platformId, acceptLanguage);\n\t\t} else if (isPlatformBrowser(this.platformId)) {\n\t\t\tacceptLanguage = this.translateService.getBrowserLang();\n\t\t\t// console.log('RouteService.isPlatformBrowser', this.platformId, acceptLanguage);\n\t\t}\n\t\tlet detectedLanguage: string = this.configService.options.defaultLanguage;\n\t\tconst regexp: RegExp = new RegExp(`(${this.configService.options.languages ? this.configService.options.languages.map(x => x.lang).join('|') : ''})`, 'gi');\n\t\tconst match = (acceptLanguage || '').match(regexp);\n\t\tdetectedLanguage = match ? match[0] : detectedLanguage;\n\t\t// console.log('RouteService.detectLanguage', detectedLanguage);\n\t\treturn detectedLanguage;\n\t}\n\n\tpublic getTime() {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\treturn (performance || Date).now();\n\t\t} else {\n\t\t\tconst time = process.hrtime();\n\t\t\treturn (time[0] * 1e9 + time[1]) / 1e6;\n\t\t}\n\t}\n\n}\n","\nimport { isPlatformBrowser } from '@angular/common';\nimport { Component, Injector, Input, PLATFORM_ID } from '@angular/core';\nimport { NavigationEnd, Params, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { DisposableComponent } from '../disposable/disposable.component';\nimport { RouteService } from '../routes/route.service';\nimport { Page } from './page';\n\nexport interface PageInit {\n\tPageInit(): void;\n}\n\n@Component({\n\tselector: 'core-page',\n\ttemplate: `<h1>I'm a default view!</h1>`,\n})\n\nexport class PageComponent extends DisposableComponent {\n\n\t@Input() page: Page;\n\t@Input() params: Observable<Params>;\n\t@Input() queryParams: Observable<Params>;\n\n\tget platformId(): string {\n\t\treturn this.injector.get(PLATFORM_ID) as string;\n\t}\n\n\tget routeService(): RouteService {\n\t\treturn this.injector.get(RouteService);\n\t}\n\n\tget router(): Router {\n\t\treturn this.injector.get(Router);\n\t}\n\n\tconstructor(\n\t\tprotected injector: Injector,\n\t) {\n\t\tsuper();\n\t\tthis.scrollToTop();\n\t}\n\n\t// !!! Scroll to top on page change\n\tprivate scrollToTop(): void {\n\t\t// !!! PLATFORM_ID dependancy manually activated\n\t\t// const platformId: string = RouteService.injector.get(PLATFORM_ID) as string;\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\t// !!! Router dependancy manually activated\n\t\t\t// const router = RouteService.injector.get(Router);\n\t\t\tthis.router.events.subscribe((e) => {\n\t\t\t\tif (!(e instanceof NavigationEnd)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\twindow.scrollTo(0, 0);\n\t\t\t});\n\t\t}\n\t}\n\n\tgetId(): number | string {\n\t\treturn this.routeService.getId() || (this.page ? this.page.id : 0);\n\t}\n\n\tgetSlug(): string {\n\t\treturn this.routeService.getSlug() || (this.page ? this.page.slug : '');\n\t}\n\n}\n","import { Component, Injector, ViewEncapsulation } from '@angular/core';\nimport { PageComponent } from './page.component';\n\n@Component({\n\tselector: 'page-not-found-component',\n\ttemplateUrl: './page-not-found.component.html',\n\tstyleUrls: ['./page-not-found.component.scss'],\n\tencapsulation: ViewEncapsulation.Emulated,\n})\n\nexport class PageNotFoundComponent extends PageComponent {\n\n\tpublic url: string;\n\n\tconstructor(\n\t\tprotected injector: Injector\n\t) {\n\t\tsuper(injector);\n\t\tthis.url = this.router.url;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class HttpStatusCodeService {\n\n\tprivate statusCode: number;\n\tprivate redirectUrl: string;\n\n\tconstructor() {\n\t\tthis.statusCode = 200;\n\t\tthis.redirectUrl = null;\n\t}\n\n\tpublic setStatusCode(statusCode: number, redirectUrl: string = null) {\n\t\tthis.statusCode = statusCode;\n\t\tthis.redirectUrl = redirectUrl;\n\t}\n\n\tpublic getStatusCode(): number {\n\t\treturn (this.statusCode === 309 ? 301 : this.statusCode);\n\t}\n\n\tpublic getRedirectUrl(): string {\n\t\treturn this.redirectUrl;\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApiService } from '../api/api.service';\nimport { Identity } from './identity';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class IdentityService<T extends Identity> extends ApiService<T> {\n\n\tconstructor(\n\t\tprotected injector: Injector\n\t) {\n\t\tsuper(injector);\n\t}\n\n\tget collection(): string {\n\t\treturn '/api/identity';\n\t}\n\n\tgetList(): Observable<T[]> {\n\t\treturn this.get();\n\t}\n\n\tgetDetailByIdNo404<Data>(id: number | string): Observable<T> {\n\t\treturn this.get({ id }).pipe(\n\t\t\tmap((identities: T[]) => identities[0]),\n\t\t);\n\t}\n\n\tgetDetailById(id: number | string): Observable<T> {\n\t\treturn this.get({ id });\n\t}\n\n\tadd(identity: T) {\n\t\treturn this.post(identity);\n\t}\n\n\tupdate(identity: T) {\n\t\treturn this.put(identity);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Entity } from './entity';\nimport { IdentityService } from './identity.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class EntityService<T extends Entity> extends IdentityService<T> {\n\n\tget collection(): string {\n\t\treturn '/api/entity';\n\t}\n\n\tgetDetailByName(name: string): Observable<T[]> {\n\t\tif (!name.trim()) {\n\t\t\treturn of([]);\n\t\t}\n\t\treturn this.get({ name });\n\t}\n\n}\n","\nexport enum ImageType {\n\tDefault = 1,\n\tGallery = 2,\n\tShare = 3,\n}\n\nexport class Image {\n\tid: number | string;\n\turl: string;\n\ttitle?: string;\n\tdescription?: string;\n\tfileName?: string;\n\ttype?: ImageType;\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\nexport class LinkDefinition {\n\thref?: string;\n\tid?: string;\n\trel?: string;\n}\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class LinkService {\n\n\tconstructor(\n\t\t@Inject(DOCUMENT) private doc: any,\n\t) { }\n\n\taddTag(definition: LinkDefinition) {\n\t\tconst element = this.doc.createElement(`link`);\n\t\tthis.updateElementDefinition(element, definition);\n\t\tthis.doc.head.appendChild(element);\n\t}\n\n\tgetTag(selector: string) {\n\t\tconst element = this.doc.querySelector(`link${selector}`);\n\t\treturn element;\n\t}\n\n\tupdateTag(selector: string, definition: LinkDefinition) {\n\t\tconst element = this.doc.querySelector(`link${selector}`);\n\t\tthis.updateElementDefinition(element, definition);\n\t}\n\n\tremoveTag(selector: string) {\n\t\tconst element = this.doc.querySelector(`link${selector}`);\n\t\telement.remove();\n\t}\n\n\tupdateElementDefinition(element: HTMLLinkElement, definition: LinkDefinition) {\n\t\tthis.updateElementAttribute(element, 'href', definition.href);\n\t\tthis.updateElementAttribute(element, 'id', definition.id);\n\t\tthis.updateElementAttribute(element, 'rel', definition.rel);\n\t}\n\n\tupdateElementAttribute(element: HTMLLinkElement, attribute: string, value: any) {\n\t\tif (value) {\n\t\t\telement.setAttribute(attribute, value);\n\t\t} else {\n\t\t\telement.removeAttribute(attribute);\n\t\t}\n\t}\n\n}\n","import { Document } from '../models/document';\nimport { Feature } from '../models/feature';\nimport { Image } from '../models/image';\nimport { Taxonomy } from '../models/taxonomy';\n\nexport class PageMeta {\n\tappId?: string;\n\tauthor?: string;\n\tcanonical?: string;\n\tdescription?: string;\n\tkeywords?: string;\n\tlocale?: string;\n\trobots?: string;\n\ttitle?: string;\n\ttype?: string;\n}\n\nexport class PageIndex implements Document {\n\tabstract?: string;\n\tid: number | string;\n\timages?: Image[];\n\tname?: string;\n\trelationType?: number | string;\n\tslug?: string;\n\ttitle?: string;\n\ttype?: number | string;\n\turl?: string;\n\n\tconstructor(options?: PageIndex) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t}\n}\n\nexport class PageRelation implements Document {\n\tid: number | string;\n\tpage: Page;\n\ttype?: number | string;\n}\n\nexport class Page implements Document {\n\tabstract?: string;\n\tactive?: boolean;\n\tcomponent?: number | string;\n\tdescription?: string;\n\tfeatures?: Feature[];\n\tid: number | string;\n\timages?: Image[];\n\tmeta?: PageMeta = {};\n\tname?: string;\n\trelated?: any[];\n\tslug?: string;\n\ttaxonomies?: Taxonomy[];\n\ttitle?: string;\n\ttype?: number | string;\n\turl?: string;\n\n\tconstructor(options?: Page) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t\tif (options.related) {\n\t\t\t\tconst related: PageIndex[] = options.related.map((x: PageRelation) => {\n\t\t\t\t\tconst item = new PageIndex(x.page);\n\t\t\t\t\titem.relationType = x.type;\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tthis.related = related;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetFeature?(id: number): Feature {\n\t\treturn this.features.find(x => x.id === id) || null;\n\t}\n\n\tgetFeatures?(type: number, n: number[]): Feature[] {\n\t\treturn this.features ? this.features.filter((x: Feature, i: number) => (\n\t\t\tn.indexOf(Number(x.id)) !== -1 && x.type === type\n\t\t)).sort((a: Feature, b: Feature) => a.type - b.type) : [];\n\t}\n\n\tgetFeaturesByTypes?(type: number[]): Feature[] {\n\t\treturn this.features ? this.features.filter((x: Feature) => (\n\t\t\ttype.indexOf(Number(x.type)) !== -1\n\t\t)) : [];\n\t}\n\n\tgetGroupedFeaturesByTypes?(type: number[]): any {\n\t\tconst groups = {};\n\t\ttype.forEach(type => {\n\t\t\tconst group = groups[type] || { features: [] };\n\t\t\tif (this.features) {\n\t\t\t\tthis.features.forEach((x: Feature) => {\n\t\t\t\t\tif (Number(x.type) === type) {\n\t\t\t\t\t\tgroup.features.push(x);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tgroups[type] = group;\n\t\t});\n\t\t/*\n\t\tif (this.features) {\n\t\t\tthis.features.forEach((x: Feature) => {\n\t\t\t\tif (type.indexOf(Number(x.type)) !== -1) {\n\t\t\t\t\tconst group = groups[x.type] || { features: [] };\n\t\t\t\t\tgroup.features.push(x);\n\t\t\t\t\tgroups[x.type] = group;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t*/\n\t\treturn groups;\n\t}\n\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { Meta, MetaDefinition, Title } from '@angular/platform-browser';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { HttpStatusCodeService } from '../http/http-status-code.service';\nimport { EntityService } from '../models/entity.service';\nimport { Image, ImageType } from '../models/image';\nimport { LinkDefinition, LinkService } from './link.service';\nimport { Page } from './page';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class PageService extends EntityService<Page> {\n\n\tget collection(): string {\n\t\treturn '/api/page';\n\t}\n\n\tconstructor(\n\t\tprotected injector: Injector,\n\t\tprivate titleService: Title,\n\t\tprivate metaService: Meta,\n\t\tprivate linkService: LinkService,\n\t\tprivate statusCodeService: HttpStatusCodeService,\n\t) {\n\t\tsuper(injector);\n\t}\n\n\tgetStatePageBySlug(slug: string): Observable<Page> {\n\t\tslug = slug.split('?')[0];\n\t\tif (slug.indexOf('/') === 0) {\n\t\t\tslug = slug.substr(1);\n\t\t}\n\t\treturn this.stateGet(`?slug=/${slug}`).pipe(\n\t\t\tmap(x => {\n\t\t\t\tx = new Page(Array.isArray(x) ? x.find(x => x.slug === `/${slug}`) : x);\n\t\t\t\t// console.log('PageService.getStatePageBySlug', x);\n\t\t\t\treturn x;\n\t\t\t}),\n\t\t\tcatchError(error => {\n\t\t\t\t// console.log('getStatePageBySlug.error', error);\n\t\t\t\tthis.statusCodeService.setStatusCode(error.status, error.error ? error.error.redirectUrl : null);\n\t\t\t\treturn of(null);\n\t\t\t}),\n\t\t);\n\t}\n\n\tgetStatePageById(id: number | string): Observable<Page> {\n\t\treturn this.stateGet(`/${id}`).pipe(\n\t\t\t// tap(x => console.log('PageService.getPageById', id, x)),\n\t\t\tmap(x => new Page(x)),\n\t\t\tcatchError(error => {\n\t\t\t\tthis.statusCodeService.setStatusCode(error.status, error.error ? error.error.redirectUrl : null);\n\t\t\t\treturn of(null);\n\t\t\t})\n\t\t);\n\t}\n\n\tgetPageById(id: number | string): Observable<Page> {\n\t\treturn this.get(`/${id}`).pipe(\n\t\t\t// tap(x => console.log('PageService.getPageById', id, x)),\n\t\t\tmap(x => new Page(x)),\n\t\t\tcatchError(error => {\n\t\t\t\tthis.statusCodeService.setStatusCode(error.status, error.error ? error.error.redirectUrl : null);\n\t\t\t\treturn of(null);\n\t\t\t})\n\t\t);\n\t}\n\n\tgetPageBySlug(slug: string): Observable<Page> {\n\t\tslug = slug.split(';')[0];\n\t\t// console.log('PageService.getPageBySlug', slug);\n\t\treturn this.get(`?slug=/${slug}`).pipe(\n\t\t\tmap(x => new Page(x)),\n\t\t\t// tap(x => this.logger.log(`found pages matching \"${slug}\"`))\n\t\t\t// tap(x => console.log('PageService.getPageBySlug', x, slug))\n\t\t\tcatchError(error => {\n\t\t\t\t// console.log('PageService.getPageBySlug.error', error);\n\t\t\t\tthis.statusCodeService.setStatusCode(error.status, error.error ? error.error.redirectUrl : null);\n\t\t\t\treturn of(null);\n\t\t\t})\n\t\t);\n\t}\n\n\taddOrUpdateMetaData(page: Page) {\n\t\t// console.log('PageService.addOrUpdateMetaData', page);\n\t\tif (!page) {\n\t\t\treturn;\n\t\t}\n\t\t// !!!\n\t\t// const fbAppId: string = this.config.plugins && this.config.plugins.facebook ? this.config.plugins.facebook.appId.toString() : '';\n\t\tthis.titleService.setTitle(page.title);\n\t\tthis.addOrUpdateMeta({ property: 'og:title', content: page.title });\n\t\tthis.addOrUpdateMeta({ property: 'og:image', content: this.getSocialImage(page).url });\n\t\tthis.addOrUpdateMeta({ property: 'og:image:width', content: '1200' });\n\t\tthis.addOrUpdateMeta({ property: 'og:image:height', content: '630' });\n\t\t// this.addOrUpdateMeta({ property: 'fb:app_id', content: fbAppId });\n\t\tthis.addOrUpdateMeta({ property: 'og:url', content: page.url || this.origin });\n\t\tconst meta = page.meta;\n\t\tif (meta) {\n\t\t\tthis.addOrUpdateMeta({ name: 'description', content: meta.description || 'Servizio di qualitÃ  senza costi aggiuntivi con i convenienti pacchetti viaggio Eurospin. Prenota comodamente online!' });\n\t\t\tthis.addOrUpdateMeta({ name: 'keywords', content: meta.keywords || 'viaggi,viaggi eurospin' });\n\t\t\tthis.addOrUpdateMeta({ name: 'robots', content: meta.robots || 'index,follow' });\n\t\t\tthis.addOrUpdateMeta({ property: 'og:locale', content: meta.locale || 'it_IT' });\n\t\t\tthis.addOrUpdateMeta({ property: 'og:type', content: meta.type || 'article' });\n\t\t\tthis.addOrUpdateMeta({ property: 'og:author', content: meta.author || 'Eurospin Viaggi' });\n\t\t\tthis.addOrUpdateLink({ rel: 'canonical', href: meta.canonical || (this.origin.indexOf(page.url) === 0 ? null : page.url) });\n\t\t}\n\t\t// console.log('PageOutletComponent.addOrUpdateMetaData', page.id, page.title, page.url);\n\t}\n\n\tprivate getSocialImage(page: Page): Image {\n\t\tconst image = page.images ? (\n\t\t\tpage.images.find(i => i.type === ImageType.Share) ||\n\t\t\tpage.images.find(i => i.type === ImageType.Default) ||\n\t\t\tpage.images.find(i => i.type === ImageType.Gallery)\n\t\t) : null;\n\t\treturn image || {\n\t\t\turl: 'https://s-static.ak.fbcdn.net/images/devsite/attachment_blank.png'\n\t\t} as Image;\n\t}\n\n\tprivate addOrUpdateMeta(definition: MetaDefinition) {\n\t\tconst selector = definition.name ? `name=\"${definition.name}\"` : `property=\"${definition.property}\"`;\n\t\tif (this.metaService.getTag(selector)) {\n\t\t\tif (definition.content) {\n\t\t\t\tthis.metaService.updateTag(definition, selector);\n\t\t\t} else {\n\t\t\t\tthis.metaService.removeTag(selector);\n\t\t\t}\n\t\t} else if (definition.content) {\n\t\t\tthis.metaService.addTag(definition);\n\t\t}\n\t}\n\n\tprivate addOrUpdateLink(definition: LinkDefinition) {\n\t\tconst selector = definition.id ? `#${definition.id}` : `[rel=\"${definition.rel}\"]`;\n\t\tif (this.linkService.getTag(selector)) {\n\t\t\tif (definition.href) {\n\t\t\t\tthis.linkService.updateTag(selector, definition);\n\t\t\t} else {\n\t\t\t\tthis.linkService.removeTag(selector);\n\t\t\t}\n\t\t} else if (definition.href) {\n\t\t\tthis.linkService.addTag(definition);\n\t\t}\n\t}\n\n}\n","import { Component, ComponentFactory, ComponentFactoryResolver, Inject, ViewContainerRef } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { DisposableComponent } from '../disposable/disposable.component';\nimport { RouteService } from '../routes/route.service';\nimport { PageNotFoundComponent } from './page-not-found.component';\nimport { PageComponent } from './page.component';\nimport { PageService } from './page.service';\n\n@Component({\n\tselector: 'page-outlet',\n\ttemplate: '',\n})\n\nexport class PageOutletComponent extends DisposableComponent {\n\n\tprivate factory: ComponentFactory<PageComponent>;\n\n\tconstructor(\n\t\t@Inject(ViewContainerRef) private viewContainerRef: ViewContainerRef,\n\t\tprivate router: Router,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate componentFactoryResolver: ComponentFactoryResolver,\n\t\tprivate routeService: RouteService,\n\t\tprivate pageService: PageService,\n\t) {\n\t\tsuper();\n\t\t// !!! keep -> Avoid PageOutlet Route Caching for different routes\n\t\tthis.router.routeReuseStrategy.shouldReuseRoute = () => {\n\t\t\treturn false;\n\t\t};\n\t\tthis.setSnapshot(this.route.snapshot);\n\t}\n\n\tsetSnapshot(snapshot: ActivatedRouteSnapshot): void {\n\t\tthis.routeService.params = this.routeService.toData(snapshot.params);\n\t\tthis.routeService.queryParams = this.routeService.toData(snapshot.queryParams);\n\t\tconst data = snapshot.data;\n\t\tconst params = this.routeService.params;\n\t\tconst queryParams = this.routeService.queryParams;\n\t\tlet component: any = PageNotFoundComponent;\n\t\tif (data.pageResolver) {\n\t\t\tcomponent = data.pageResolver.component;\n\t\t\tthis.routeService.page = data.pageResolver.page;\n\t\t\tconst factory: ComponentFactory<PageComponent> = this.componentFactoryResolver.resolveComponentFactory(component);\n\t\t\tthis.factory = factory;\n\t\t\tthis.viewContainerRef.clear();\n\t\t\tconst componentRef = this.viewContainerRef.createComponent(this.factory);\n\t\t\tconst instance = componentRef.instance;\n\t\t\tinstance.page = data.pageResolver.page;\n\t\t\tinstance.params = params;\n\t\t\tinstance.queryParams = queryParams;\n\t\t\tif (typeof instance['PageInit'] === 'function') {\n\t\t\t\tinstance['PageInit']();\n\t\t\t}\n\t\t\tif (data.pageResolver.page) {\n\t\t\t\tconst config = this.router.config.slice();\n\t\t\t\tconst slug = data.pageResolver.page.slug;\n\t\t\t\tif (slug) {\n\t\t\t\t\tconfig.push({\n\t\t\t\t\t\tpath: slug.indexOf('/') === 0 ? slug.substr(1) : slug, component: data.pageResolver.component,\n\t\t\t\t\t});\n\t\t\t\t\tthis.router.resetConfig(config);\n\t\t\t\t}\n\t\t\t\tthis.pageService.addOrUpdateMetaData(this.routeService.page);\n\t\t\t}\n\t\t}/* else {\n\t\t\t// console.log('PageOutletComponent.setSnapshot 404', data);\n\t\t}*/\n\t}\n\n}\n","import { Type } from '@angular/core';\nimport { ConfigService } from '../config/config.service';\nimport { Page } from './page';\nimport { PageNotFoundComponent } from './page-not-found.component';\nimport { PageComponent } from './page.component';\n\nexport class PageResolver {\n\n\tpublic component: Type<PageComponent> = PageComponent;\n\n\tconstructor(\n\t\tprivate configService: ConfigService,\n\t\tpublic page: Page,\n\t) {\n\t\tif (page && this.configService.options.pages) {\n\t\t\tthis.component = this.configService.options.pages[page.component] || this.configService.options.defaultPage;\n\t\t} else {\n\t\t\tthis.component = this.configService.options.notFoundPage || PageNotFoundComponent;\n\t\t}\n\t}\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ConfigService } from '../config/config.service';\nimport { RouteService } from '../routes/route.service';\nimport { Page } from './page';\nimport { PageResolver } from './page-resolver';\nimport { PageService } from './page.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class PageResolverService implements Resolve<PageResolver> {\n\n\tpublic events$: BehaviorSubject<PageResolver> = new BehaviorSubject<PageResolver>(null);\n\n\tconstructor(\n\t\tprivate configService: ConfigService,\n\t\tprivate pageService: PageService,\n\t\tprivate routeService: RouteService,\n\t) { }\n\n\tpageToPageResolver(page: Page): PageResolver {\n\t\tconst pageResolver = new PageResolver(this.configService, page);\n\t\tthis.events$.next(pageResolver);\n\t\treturn pageResolver;\n\t}\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<PageResolver> {\n\t\tif (route.params && route.params.id) {\n\t\t\treturn this.getPageById(route.params.id);\n\t\t} else {\n\t\t\tconst paths = route.url.filter(x => {\n\t\t\t\treturn x.path;\n\t\t\t}).map(x => {\n\t\t\t\treturn x.path;\n\t\t\t});\n\t\t\tconst slug = this.routeService.toSlug(paths).join('/');\n\t\t\treturn this.getPageBySlug(slug);\n\t\t}\n\t}\n\n\tgetPageById(id: number | string): Observable<PageResolver> {\n\t\t// console.log('PageResolverService.getPageById', id);\n\t\treturn this.pageService.getPageById(id).pipe(\n\t\t\tmap(page => this.pageToPageResolver(page))\n\t\t);\n\t}\n\n\tgetPageBySlug(slug: string): Observable<PageResolver> {\n\t\t// console.log('PageResolverService.getPageBySlug', slug);\n\t\treturn this.pageService.getStatePageBySlug(slug).pipe(\n\t\t\tmap(page => this.pageToPageResolver(page))\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanDeactivate, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class PageGuard implements CanActivate, CanDeactivate<any> {\n\n\tprivate match(route: ActivatedRouteSnapshot): boolean {\n\t\tconst lastPath = route.url.length ? route.url[route.url.length - 1].path : '';\n\t\tconst pattern = /\\.([0-9a-z]+)(?:[\\?#]|$)/i;\n\t\tconst match = (lastPath).match(pattern);\n\t\tif (match !== null) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tcanActivate(\n\t\troute: ActivatedRouteSnapshot,\n\t\tstate: RouterStateSnapshot\n\t): Observable<boolean> | Promise<boolean> | boolean {\n\t\treturn this.match(route);\n\t}\n\n\tcanDeactivate(\n\t\tcomponent: any,\n\t\tcurrentRoute: ActivatedRouteSnapshot,\n\t\tcurrentState: RouterStateSnapshot,\n\t\tnextState?: RouterStateSnapshot\n\t): Observable<boolean> | Promise<boolean> | boolean {\n\t\treturn this.match(currentRoute);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanDeactivate, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class StaticGuard implements CanActivate, CanDeactivate<any> {\n\n\tprivate match(route: ActivatedRouteSnapshot): boolean {\n\t\tconst lastPath = route.url[route.url.length - 1].path;\n\t\t// console.log('StaticGuard.CanActivate', e, lastPath);\n\t\tconst pattern = /\\.([0-9a-z]+)(?:[\\?#]|$)/i;\n\t\tconst match = (lastPath).match(pattern);\n\t\tif (match !== null) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tcanActivate(\n\t\troute: ActivatedRouteSnapshot,\n\t\tstate: RouterStateSnapshot\n\t): Observable<boolean> | Promise<boolean> | boolean {\n\t\treturn this.match(route);\n\t}\n\n\tcanDeactivate(\n\t\tcomponent: any,\n\t\tcurrentRoute: ActivatedRouteSnapshot,\n\t\tcurrentState: RouterStateSnapshot,\n\t\tnextState?: RouterStateSnapshot\n\t): Observable<boolean> | Promise<boolean> | boolean {\n\t\treturn this.match(currentRoute);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PageNotFoundComponent } from './pages/page-not-found.component';\nimport { PageOutletComponent } from './pages/page-outlet.component';\nimport { PageResolverService } from './pages/page-resolver.service';\nimport { PageGuard } from './pages/page.guard';\nimport { StaticGuard } from './pages/static.guard';\n\nconst routes: Routes = [\n\t{ path: 'page/:id', component: PageOutletComponent, resolve: { pageResolver: PageResolverService } },\n\t{ path: '**', component: PageOutletComponent, resolve: { pageResolver: PageResolverService }, canActivate: [PageGuard] },\n\t{ path: '**', component: PageNotFoundComponent, canActivate: [StaticGuard] },\n];\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild(routes),\n\t],\n\texports: [\n\t\tRouterModule,\n\t],\n})\n\nexport class CoreRouting { }\n","import { Component, forwardRef, Input, Renderer2 } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlBase } from './control-base';\n\n@Component({\n\tselector: 'core-control',\n\ttemplateUrl: './control.component.html',\n\tstyleUrls: ['./control.component.scss'],\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => ControlComponent),\n\t\tmulti: true,\n\t}],\n})\nexport class ControlComponent implements ControlValueAccessor {\n\t@Input() control: ControlBase<any>;\n\t@Input() form: FormGroup;\n\n\tprivate element: any;\n\tprivate blurred: boolean;\n\tprivate innervalue: any;\n\n\treveal: { checked: boolean } = { checked: false };\n\n\tconstructor(\n\t\tprivate renderer: Renderer2\n\t) { }\n\n\tget controlRef(): AbstractControl {\n\t\t// console.log('controlRef', this.control.key, this.form.controls);\n\t\treturn this.form.controls[this.control.key];\n\t}\n\n\tget isValid() { return this.controlRef.valid; }\n\n\t// ControlValueAccessor\n\n\tgetFormattedValue(): any {\n\t\t// console.log('ControlComponent.getFormattedValue', this.controlRef.value);\n\t\treturn this.controlRef.value;\n\t}\n\n\tonInput($event): void {\n\t\tthis.element = $event.target;\n\t\tthis.onChange(this.element.value);\n\t}\n\n\tonFocus($event): void {\n\t\tthis.blurred = false;\n\t\tthis.element = $event.target;\n\t\t// this.element.value = this.controlRef.value;\n\t\tthis.renderer.setProperty(this.element, 'value', this.controlRef.value);\n\t\t// console.log('ControlComponent.onFocus', this.controlRef);\n\t}\n\n\tonBlur($event): void {\n\t\tthis.blurred = true;\n\t\tthis.element = $event.target;\n\t\t// this.element.value = this.controlRef.value;\n\t\tthis.renderer.setProperty(this.element, 'value', this.controlRef.value);\n\t\t// console.log('ControlComponent.onBlur', this.controlRef);\n\t\t/*\n\t\tif (this.innervalue) {\n\t\t\tthis.control.patchValue(this.innervalue + ' H', { emitEvent: false });\n\t\t}\n\t\t*/\n\t}\n\n\tprivate onChange = (value: any) => { };\n\n\tprivate onTouched = () => { };\n\n\tprivate formatValue(value: any): void {\n\t\t// console.log('ControlComponent.formatValue', value);\n\t\tthis.renderer.setProperty(this.element, 'value', value);\n\t\t// console.log('ControlEditableComponent.writeValue', value);\n\t}\n\n\tprivate parseValue(value: any) {\n\t\t// console.log('ControlComponent.parseValue', value);\n\t\tconst parsed = this.innervalue;\n\t\tthis.onChange(parsed);\n\t}\n\n\twriteValue(value: any): void {\n\t\tthis.formatValue(value);\n\t}\n\n\tregisterOnChange(fn: any): void {\n\t\tthis.onChange = fn;\n\t\t// console.log('ControlEditableComponent.registerOnChange');\n\t}\n\n\tregisterOnTouched(fn: any): void {\n\t\tthis.onTouched = fn;\n\t\t// console.log('ControlEditableComponent.registerOnTouched');\n\t}\n\n\tsetDisabledState(isDisabled: boolean): void {\n\t\t// const node = this.textarea.nativeElement;\n\t\t/*\n\t\tif (isDisabled) {\n\t\t\tthis.renderer.addClass(this.element, 'disabled');\n\t\t} else {\n\t\t\tthis.renderer.removeClass(this.element, 'disabled');\n\t\t}\n\t\t// console.log('ControlEditableComponent.setDisabledState', isDisabled);\n\t\t*/\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { ControlBase } from './control-base';\nimport { matchValidator } from './match.validator';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ControlService {\n\n\tgetValidators(control: ControlBase<any>, group: FormGroup): ValidatorFn[] {\n\t\tconst validators: ValidatorFn[] = [];\n\t\tif (control.min) {\n\t\t\tvalidators.push(Validators.min(control.min));\n\t\t}\n\t\tif (control.max) {\n\t\t\tvalidators.push(Validators.max(control.max));\n\t\t}\n\t\tif (control.required) {\n\t\t\tvalidators.push(Validators.required);\n\t\t}\n\t\tif (control.requiredTrue) {\n\t\t\tvalidators.push(Validators.requiredTrue);\n\t\t}\n\t\tif (control.email) {\n\t\t\tvalidators.push(Validators.email);\n\t\t}\n\t\tif (control.minLength) {\n\t\t\tvalidators.push(Validators.minLength(control.minLength));\n\t\t}\n\t\tif (control.maxLength) {\n\t\t\tvalidators.push(Validators.maxLength(control.maxLength));\n\t\t}\n\t\tif (control.pattern) {\n\t\t\tvalidators.push(Validators.pattern(control.pattern));\n\t\t}\n\t\tif (control.match) {\n\t\t\tvalidators.push(matchValidator(control.match, control.reverse, group));\n\t\t}\n\t\t// console.log(control.key, validators);\n\t\treturn validators;\n\t}\n\n\ttoFormGroup(controls: ControlBase<any>[]): FormGroup {\n\t\tconst options: any = {};\n\t\tcontrols.forEach(x => {\n\t\t\t// group[x.key] = new FormControl(x.value, this.getValidators(x, group));\n\t\t\tconst formControl: FormControl = new FormControl(x.value);\n\t\t\tif (x.disabled) {\n\t\t\t\tformControl.disable();\n\t\t\t}\n\t\t\toptions[x.key] = formControl;\n\t\t\t// x.setControl(formControl); // !!!\n\t\t});\n\t\tconst group: FormGroup = new FormGroup(options);\n\t\t// console.log(group);\n\t\tcontrols.forEach(x => {\n\t\t\tconst validators = this.getValidators(x, group);\n\t\t\t// console.log(validators);\n\t\t\tgroup.controls[x.key].setValidators(validators);\n\t\t});\n\t\treturn group;\n\t}\n\n}\n","import { FormControl, FormGroup, ValidatorFn } from '@angular/forms';\n\nexport function __matchValidator(key: string, otherKey: string, group: FormGroup): ValidatorFn {\n\treturn (control: FormControl) => {\n\n\t\t// const control = group.controls[key];\n\t\tconst otherControl = group.controls[otherKey];\n\n\t\t// console.log(control.touched, otherControl.touched);\n\n\t\tif (control.touched && otherControl.touched) {\n\t\t\tconst match = control.value === otherControl.value;\n\t\t\tif (!match && control.valid && otherControl.valid) {\n\t\t\t\tcontrol.setErrors({\n\t\t\t\t\tmatch: otherKey\n\t\t\t\t});\n\t\t\t\treturn {\n\t\t\t\t\tmatch: otherKey + ' != ' + key\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (match && control.hasError('match')) {\n\t\t\t\tcontrol.setErrors(null);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n}\n\nexport function matchValidator(otherKey: string, reverse: boolean = false, group: FormGroup): ValidatorFn {\n\treturn (control: FormControl) => {\n\t\tconst otherControl = group.controls[otherKey];\n\n\t\tconst value = control.value;\n\n\t\t// value not equal\n\t\tif (otherControl && value !== otherControl.value && !reverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (otherControl && value === otherControl.value && reverse) {\n\t\t\tif (otherControl.errors) {\n\t\t\t\tdelete otherControl.errors['match'];\n\t\t\t\tif (!Object.keys(otherControl.errors).length) {\n\t\t\t\t\totherControl.setErrors(null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (otherControl && value !== otherControl.value && reverse) {\n\t\t\totherControl.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t};\n}\n\n/*\nvalidate(control: AbstractControl): { [key: string]: any } {\n\t\t// self value\n\t\tconst value = control.value;\n\n\t\t// control value\n\t\tconst input = control.root.get(this.match);\n\n\t\t// value not equal\n\t\tif (input && value !== input.value && !this.isReverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (input && value === input.value && this.isReverse) {\n\t\t\tdelete input.errors['match'];\n\t\t\tif (!Object.keys(input.errors).length) {\n\t\t\t\tinput.setErrors(null);\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (input && value !== input.value && this.isReverse) {\n\t\t\tinput.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n*/\n/*\nstatic isValidString(control: FormControl) {\n\tif (!control.value || typeof control.value !== 'string') {\n\t\treturn {isNotValidString: true};\n\t}\n\treturn null;\n}\n\nstatic isValidName(control: FormControl) {\n\tif (control.valid && control.value !== 'John Doe') {\n\t\treturn {isNotValidName: true};\n\t}\n\treturn null;\n}\n*/\n","import { Directive, forwardRef, Input } from '@angular/core';\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { catchError, debounceTime, switchMap, take } from 'rxjs/operators';\n\nconst DEBOUNCE_TIME: number = 250;\n\n@Directive({\n\tselector: '[exists][formControlName],[exists][formControl],[exists][ngModel]',\n\tproviders: [\n\t\t{ provide: NG_ASYNC_VALIDATORS, useExisting: forwardRef(() => ExistsValidator), multi: true },\n\t]\n})\nexport class ExistsValidator implements AsyncValidator {\n\n\tprivate values = new BehaviorSubject<string>(null);\n\tset value(value: string) {\n\t\tif (value && value.trim() !== '') {\n\t\t\tthis.values.next(value);\n\t\t}\n\t}\n\tprivate debounced$: Observable<ValidationErrors | null> = this.values.pipe(\n\t\tdebounceTime(DEBOUNCE_TIME),\n\t\tswitchMap((value: string) => {\n\t\t\t// console.log('ExistsValidator.debounced$', value);\n\t\t\treturn this.exists$(value);\n\t\t}),\n\t\tcatchError((response) => {\n\t\t\tconsole.log('ExistsValidator.debounced$.catchError', response);\n\t\t\treturn of(null);\n\t\t}),\n\t\ttake(1),\n\t);\n\n\t@Input() exists: Function;\n\n\texists$(value: string): Observable<ValidationErrors | null> {\n\t\tif (typeof this.exists === 'function') {\n\t\t\t// console.log('ExistsValidator.exists$', value);\n\t\t\treturn this.exists(value).pipe(\n\t\t\t\tswitchMap(exists => {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\treturn of({\n\t\t\t\t\t\t\texists: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn of(null);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t} else {\n\t\t\treturn of(null);\n\t\t}\n\t}\n\n\tvalidate(control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n\t\tthis.value = control.value;\n\t\treturn this.debounced$;\n\t}\n\n}\n","export class ControlBaseOptions<T> {\n\tvalue?: T;\n\tkey?: string;\n\tlabel?: string;\n\tplaceholder?: string;\n\t// order\n\torder?: number;\n\tschema?: string;\n\ttype?: string;\n\t// validators\n\tmin?: number;\n\tmax?: number;\n\trequired?: boolean;\n\trequiredTrue?: boolean;\n\temail?: boolean;\n\tminLength?: number;\n\tmaxLength?: number;\n\tpattern?: string | RegExp;\n\tmatch?: string;\n\t// options\n\treverse?: boolean;\n\toptions?: { key: string, value: string }[];\n\t// state\n\tdisabled?: boolean;\n\t// formatters\n\tstep?: number;\n\tformat?: string;\n}\n\nexport class ControlBase<T> {\n\t// export class ControlBase<T> implements ControlValueAccessor {\n\n\tstatic uid: number = 0;\n\n\tprivate _originalValue: T;\n\tvalue: T;\n\tkey: string;\n\t//\n\tlabel: string;\n\tplaceholder: string;\n\t// order\n\torder: number;\n\tschema: string;\n\ttype: string;\n\t// validators\n\tmin: number;\n\tmax: number;\n\trequired: boolean;\n\trequiredTrue: boolean;\n\temail: boolean;\n\tminLength: number;\n\tmaxLength: number;\n\tpattern: string | RegExp;\n\tmatch: string;\n\t// options\n\treverse: boolean;\n\toptions: { key: string, value: string }[];\n\t// state\n\tdisabled: boolean;\n\t// formatters\n\tstep: number;\n\tformat: string;\n\n\tconstructor(options: ControlBaseOptions<T> = {}) {\n\t\tthis._originalValue = options.value;\n\t\tthis.value = options.value;\n\t\tthis.key = options.key;\n\t\t//\n\t\tconst name = `${options.key || 'Control'} ${++ControlBase.uid}`;\n\t\tthis.label = options.label || name;\n\t\tthis.placeholder = options.placeholder || name;\n\t\t// order\n\t\tthis.order = options.order === undefined ? 1 : options.order;\n\t\tthis.schema = options.schema || 'text';\n\t\tthis.type = options.type || this.schema;\n\t\t// validators\n\t\tthis.min = options.min || null;\n\t\tthis.max = options.max || null;\n\t\tthis.required = !!options.required;\n\t\tthis.requiredTrue = !!options.requiredTrue;\n\t\tthis.email = !!options.email;\n\t\tthis.minLength = options.minLength || null;\n\t\tthis.maxLength = options.maxLength || null;\n\t\tthis.pattern = options.pattern || null;\n\t\tthis.match = options.match || null;\n\t\t// options\n\t\tthis.reverse = !!options.reverse;\n\t\tthis.options = options.options || [];\n\t\t// state\n\t\tthis.disabled = !!options.disabled;\n\t\t// formatters\n\t\tthis.step = options.step || null;\n\t\tthis.format = options.format || null;\n\t}\n\n\t/*\n\t//\n\tcontrol?: FormControl;\n\tinnervalue: any;\n\tblurred: boolean = false;\n\n\tfocus(): void {\n\t\t// console.log('ControlBase.focus', this.control.value);\n\t\tthis.blurred = false;\n\t\tif (this.innervalue) {\n\t\t\tthis.control.patchValue(this.innervalue, { emitEvent: false });\n\t\t}\n\t}\n\n\tblur(): void {\n\t\t// console.log('ControlBase.blur', this.control.value);\n\t\tthis.blurred = true;\n\t\tif (this.innervalue) {\n\t\t\tthis.control.patchValue(this.innervalue + ' H', { emitEvent: false });\n\t\t}\n\t}\n\n\tsetControl(control: FormControl): void {\n\t\tthis.control = control;\n\t\tthis.innervalue = control.value;\n\t\tcontrol.valueChanges.subscribe(value => {\n\t\t\t// console.log('ControlBase.control.valueChanges', value);\n\t\t\tif (this.blurred) {\n\t\t\t\tcontrol.patchValue(value + ' H', { emitEvent: false });\n\t\t\t} else {\n\t\t\t\tthis.innervalue = value;\n\t\t\t}\n\t\t});\n\t\t// this.blur();\n\t}\n\n\tformatValue(): string {\n\t\t// console.log('ControlBase.formatValue', this, this.control);\n\t\treturn 'aaa';\n\t}\n\n\tparseValue(e: Event) {\n\t\t// console.log('ControlBase.parseValue', e);\n\t}\n\n\tprivate onChange = (value: any) => { };\n\n\tprivate onTouched = () => { };\n\n\twriteValue(value: any): void {\n\t\t// console.log('ControlBase.writeValue', value);\n\t\t// this.formattedValue = value;\n\t\tthis.onChange(this.value);\n\t}\n\n\tregisterOnChange(fn: (value: any) => void): void {\n\t\t// console.log('ControlBase.registerOnChange', fn);\n\t\tthis.onChange = fn;\n\t\t// this.onChange('my new value');\n\t}\n\n\tregisterOnTouched(fn: () => void): void {\n\t\t// console.log('ControlBase.registerOnTouched', fn);\n\t\tthis.onTouched = fn;\n\t}\n\n\tsetDisabledState?(isDisabled: boolean): void {\n\t\t// console.log('ControlBase.setDisabledState', isDisabled);\n\t\tthis.disabled = isDisabled;\n\t}\n\t*/\n\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlCheckbox extends ControlBase<boolean> {\n\n\tschema = 'checkbox';\n\n\tconstructor(options: ControlBaseOptions<boolean> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlEmail extends ControlBase<string> {\n\n\tschema = 'email';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t\tthis.email = true;\n\t\tthis.pattern = options.pattern || '[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}';\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlMarkdown extends ControlBase<string> {\n\n\tschema = 'markdown';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlNumber extends ControlBase<string> {\n\n\tschema = 'number';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlPassword extends ControlBase<string> {\n\n\tschema = 'password';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlRadio extends ControlBase<boolean> {\n\n\tschema = 'radio';\n\n\tconstructor(options: ControlBaseOptions<boolean> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlSelect extends ControlBase<string> {\n\n\tschema = 'select';\n\toptions: { key: string, value: string }[] = [];\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.options = options.options || [];\n\t}\n}\n","import { ControlBase, ControlBaseOptions } from './control-base';\n\nexport class ControlText extends ControlBase<string> {\n\n\tschema = 'text';\n\n\tconstructor(options: ControlBaseOptions<string> = {}) {\n\t\tsuper(options);\n\t\tthis.type = options.type || this.type;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ControlBase, ControlBaseOptions } from './controls/control-base';\nimport { ControlCheckbox } from './controls/control-checkbox';\nimport { ControlEmail } from './controls/control-email';\nimport { ControlMarkdown } from './controls/control-markdown';\nimport { ControlNumber } from './controls/control-number';\nimport { ControlPassword } from './controls/control-password';\nimport { ControlRadio } from './controls/control-radio';\nimport { ControlSelect } from './controls/control-select';\nimport { ControlText } from './controls/control-text';\nimport { ControlService } from './controls/control.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FormService {\n\n\tconstructor(\n\t\tprivate controlService: ControlService\n\t) { }\n\n\tgetControlsFromOptions(options: ControlBaseOptions<any>[]): ControlBase<any>[] {\n\t\tconst controls: ControlBase<any>[] = options.map(o => {\n\t\t\tswitch (o.schema) {\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\treturn new ControlCheckbox(o);\n\t\t\t\tcase 'email':\n\t\t\t\t\treturn new ControlEmail(o);\n\t\t\t\tcase 'number':\n\t\t\t\t\treturn new ControlNumber(o);\n\t\t\t\tcase 'password':\n\t\t\t\t\treturn new ControlPassword(o);\n\t\t\t\tcase 'radio':\n\t\t\t\t\treturn new ControlRadio(o);\n\t\t\t\tcase 'select':\n\t\t\t\t\treturn new ControlSelect(o);\n\t\t\t\tcase 'markdown':\n\t\t\t\t\treturn new ControlMarkdown(o);\n\t\t\t\tcase 'text':\n\t\t\t\t\treturn new ControlText(o);\n\t\t\t\tdefault:\n\t\t\t\t\treturn new ControlText(o);\n\t\t\t}\n\t\t});\n\t\tcontrols.sort((a, b) => a.order - b.order);\n\t\treturn controls;\n\t}\n\n\tgetGroupFromOptions(options: ControlBaseOptions<any>[]): FormGroup {\n\t\tconst controls: ControlBase<any>[] = this.getControlsFromOptions(options);\n\t\tconst group = this.controlService.toFormGroup(controls);\n\t\treturn group;\n\t}\n\n\tgetGroupFromControls(controls: ControlBase<any>[]): FormGroup {\n\t\tconst group = this.controlService.toFormGroup(controls);\n\t\treturn group;\n\t}\n\n}\n","import { Attribute, Directive, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n@Directive({\n\tselector: '[match][formControlName],[match][formControl],[match][ngModel]',\n\tproviders: [\n\t\t{ provide: NG_VALIDATORS, useExisting: forwardRef(() => MatchValidator), multi: true }\n\t]\n})\nexport class MatchValidator implements Validator {\n\n\tconstructor(\n\t\t@Attribute('match') public match: string,\n\t\t@Attribute('reverse') public reverse: string\n\t) { }\n\n\tprivate get isReverse() {\n\t\tif (!this.reverse) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.reverse === 'true' ? true : false;\n\t}\n\n\tvalidate(control: AbstractControl): { [key: string]: any } {\n\t\t// self value\n\t\tconst value = control.value;\n\n\t\t// control value\n\t\tconst input = control.root.get(this.match);\n\n\t\t// value not equal\n\t\tif (input && value !== input.value && !this.isReverse) {\n\t\t\treturn {\n\t\t\t\tmatch: true,\n\t\t\t};\n\t\t}\n\n\t\t// value equal and reverse\n\t\tif (input && value === input.value && this.isReverse) {\n\t\t\tdelete input.errors['match'];\n\t\t\tif (!Object.keys(input.errors).length) {\n\t\t\t\tinput.setErrors(null);\n\t\t\t}\n\t\t}\n\t\t// value not equal and reverse\n\t\tif (input && value !== input.value && this.isReverse) {\n\t\t\tinput.setErrors({\n\t\t\t\tmatch: true,\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n\n}\n","import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n\tselector: '[ngModel][uppercase]'\n})\nexport class UppercaseDirective {\n\t@Output() ngModelChange: EventEmitter<any> = new EventEmitter();\n\tvalue: any;\n\n\t@HostListener('input', ['$event']) onInputChange($event) {\n\t\tthis.value = $event.target.value.toUpperCase();\n\t\tthis.ngModelChange.emit(this.value);\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'highlight',\n\t// pure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class HighlightPipe implements PipeTransform {\n\n\ttransform(text: string, query: string): string {\n\t\tif (!query) {\n\t\t\treturn text;\n\t\t}\n\t\ttext = this.encodeHTML(text);\n\t\tquery = this.encodeHTML(query);\n\t\tconst regExp = new RegExp('&[^;]+;|' + this.escapeRegexChars(query), 'gi');\n\t\treturn text.replace(regExp, function (match) {\n\t\t\treturn match.toLowerCase() === query.toLowerCase() ? '<strong>' + match + '</strong>' : match;\n\t\t});\n\t}\n\n\tescapeRegexChars(text: string) {\n\t\treturn text.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n\t}\n\n\tsafeToString(text: string) {\n\t\treturn text === undefined || text === null ? '' : text.toString().trim();\n\t}\n\n\tencodeHTML(text: string) {\n\t\treturn this.safeToString(text)\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;');\n\t}\n\n}\n","\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Logger } from '../logger/logger';\nimport { RouteService } from '../routes/route.service';\nimport { HttpStatusCodeService } from './http-status-code.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class HttpResponseInterceptor implements HttpInterceptor {\n\n\tprivate _logger: Logger;\n\tget logger() {\n\t\tif (!this._logger) {\n\t\t\tthis._logger = this.injector.get(Logger);\n\t\t}\n\t\treturn this._logger;\n\t}\n\n\tprivate _router: Router;\n\tget router() {\n\t\tif (!this._router) {\n\t\t\tthis._router = this.injector.get(Router);\n\t\t}\n\t\treturn this._router;\n\t}\n\n\tprivate _routeService: RouteService;\n\tget routeService() {\n\t\tif (!this._routeService) {\n\t\t\tthis._routeService = this.injector.get(RouteService);\n\t\t}\n\t\treturn this.routeService;\n\t}\n\n\tconstructor(\n\t\tprivate injector: Injector,\n\t\tprivate statusCodeService: HttpStatusCodeService,\n\t) { }\n\n\tintercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\t// injecting request\n\t\t// parsing response\n\t\treturn next.handle(request).pipe(\n\t\t\ttap((event: HttpEvent<any>) => {\n\t\t\t\t// console.log('HttpResponseInterceptor', event);\n\t\t\t\tthis.logger.httpError = null;\n\t\t\t\t// this.logger.log(event);\n\t\t\t\t/*\n\t\t\t\tif (event instanceof HttpResponse) {\n\t\t\t\t\t// console.log('event instanceof HttpResponse');\n\t\t\t\t\t// do stuff with response if you want\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t}),\n\t\t\tcatchError((error: any) => {\n\t\t\t\t// console.warn('HttpResponseInterceptor', error);\n\t\t\t\tif (error instanceof HttpErrorResponse) {\n\t\t\t\t\t// this.statusCodeService.setStatusCode(error.status);\n\t\t\t\t\tswitch (error.status) {\n\t\t\t\t\t\tcase 401:\n\t\t\t\t\t\t\t// unauthorized\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 404:\n\t\t\t\t\t\t\t// not found\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 409:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 410:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthis.logger.http(error);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn throwError(error);\n\t\t\t})\n\t\t);\n\t}\n\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { Component, ElementRef, Inject, Input, OnChanges, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isArray, isObject } from 'util';\n// import JSONFormatter from 'json-formatter-js';\n\n@Component({\n\tselector: 'json-formatter',\n\ttemplate: `<div #jsonFormatter></div>`,\n\tstyleUrls: ['./json-formatter.component.scss'],\n\tencapsulation: ViewEncapsulation.Emulated,\n})\nexport class JsonFormatterComponent implements OnChanges {\n\t@ViewChild(`jsonFormatter`) input: ElementRef;\n\n\t@Input() json: Array<any> | Object | any;\n\n\telementRef: ElementRef;\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t) { }\n\n\tngOnChanges() {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tif (!isObject(this.json) && !isArray(this.json)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// console.log('JsonFormatterComponent', this.json);\n\t\t\tif (this.elementRef) {\n\t\t\t\tthis.input.nativeElement.removeChild(this.elementRef.nativeElement);\n\t\t\t}\n\t\t\tconst JSONFormatter = require('json-formatter-js').default;\n\t\t\tconst formatter = new JSONFormatter(this.json);\n\t\t\tconst elementRef = formatter.render();\n\t\t\tthis.input.nativeElement.appendChild(elementRef);\n\t\t\tthis.elementRef = new ElementRef(elementRef);\n\t\t}\n\t}\n}\n","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform, WrappedValue } from '@angular/core';\nimport { Observable, SubscriptionLike } from 'rxjs';\n\n@Pipe({\n\tname: 'customAsync',\n\tpure: false\n})\nexport class CustomAsyncPipe implements OnDestroy, PipeTransform {\n\n\tprivate subject: Observable<any> | null = null;\n\tprivate subscription: SubscriptionLike | null = null;\n\tprivate value: any = null;\n\tprivate cachedValue: any = null;\n\n\tconstructor(\n\t\tprivate changeDetector: ChangeDetectorRef\n\t) { }\n\n\ttransform(subject: Observable<any> | null | undefined): any {\n\t\treturn this.observableToValue(subject);\n\t}\n\n\tprivate observableToValue(subject: Observable<any> | null | undefined): any {\n\t\tif (subject !== this.subject) {\n\t\t\tif (this.subject) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t\tif (subject) {\n\t\t\t\tthis.subject = subject;\n\t\t\t\tthis.subscription = this.subject.subscribe((value: any) => {\n\t\t\t\t\t// console.log('CustomAsyncPipe.A', value);\n\t\t\t\t\tthis.value = value;\n\t\t\t\t\tthis.changeDetector.markForCheck(); // mark pipe as dirty\n\t\t\t\t});\n\t\t\t\tthis.cachedValue = this.value; // ???\n\t\t\t\treturn this.value;\n\t\t\t}\n\t\t}\n\t\t// console.log('CustomAsyncPipe.B', this.value);\n\t\tif (this.cachedValue !== this.value) {\n\t\t\tthis.cachedValue = this.value;\n\t\t\treturn WrappedValue.wrap(this.value); // notify that value has changed\n\t\t}\n\t\treturn this.cachedValue; // return cachedValue\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\t\tthis.value = null;\n\t\tthis.cachedValue = null;\n\t\tthis.subscription = null;\n\t\tthis.subject = null;\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.dispose();\n\t}\n\n\tprivate _observableToValue(subject: Observable<any> | null | undefined): any {\n\t\tif (!this.subject) {\n\t\t\tif (subject) {\n\t\t\t\tthis.subject = subject;\n\t\t\t\tthis.subscription = this.subject.subscribe((value: any) => {\n\t\t\t\t\tthis.value = value;\n\t\t\t\t\tthis.changeDetector.markForCheck(); // value has changed\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.cachedValue = this.value;\n\t\t\treturn this.value;\n\t\t}\n\t\tif (subject !== this.subject) {\n\t\t\tthis.dispose();\n\t\t\treturn this.transform(subject as any);\n\t\t}\n\t\tif (this.value === this.cachedValue) {\n\t\t\treturn this.cachedValue;\n\t\t}\n\t\tthis.cachedValue = this.value;\n\t\treturn WrappedValue.wrap(this.value); // value has changed\n\t}\n\n}\n","import { EventEmitter, Injectable, Injector } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { catchError, filter, first, map, take, tap } from 'rxjs/operators';\nimport { ApiService } from '../api/api.service';\nimport { Label } from './label';\n\nexport class LabelKey {\n\tid?: string;\n\tvalue?: string;\n\tdefaultValue?: string;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LabelService<T extends Label> extends ApiService<T> {\n\n\tget collection(): string {\n\t\treturn '/api/label';\n\t}\n\n\tprivate _language: any = new BehaviorSubject({});\n\tpublic readonly language: Observable<any> = this._language.asObservable();\n\tprivate _languages: BehaviorSubject<Array<any>> = new BehaviorSubject([]);\n\tpublic readonly languages: Observable<any[]> = this._languages.asObservable();\n\n\tprivate _lang: string;\n\tpublic get lang(): string {\n\t\treturn this._lang;\n\t}\n\tpublic set lang(lang: string) {\n\t\tif (lang !== this._lang) {\n\t\t\tthis._lang = lang;\n\t\t\tconst language = this._languages.getValue().find(x => x.lang === lang);\n\t\t\tthis._language.next(language);\n\t\t}\n\t}\n\n\tpublic events: EventEmitter<any> = new EventEmitter();\n\tpublic missingHandler?: Function;\n\tpublic cache: {} = {};\n\n\t// !!! new async pipe\n\tprivate collectedKeys: { [key: string]: LabelKey; } = {};\n\t// private cache: { [key: string]: string; } = {};\n\tprivate labels$: Subject<{ [key: string]: string; }> = new Subject();\n\tprivate emitter: EventEmitter<any> = new EventEmitter();\n\n\tconstructor(\n\t\tprotected injector: Injector,\n\t) {\n\t\tsuper(injector);\n\t\tthis._languages.next(this.config.languages);\n\t\tthis._lang = this.config.defaultLanguage;\n\t\tthis.getTranslation(this.lang).subscribe(x => {\n\t\t\t// console.log(x);\n\t\t});\n\t}\n\n\tpublic getTranslation(lang: string): Observable<{}> {\n\t\tif (!lang || !lang.trim()) {\n\t\t\treturn of(null);\n\t\t}\n\t\tthis.lang = lang;\n\t\tif (this.cache[lang]) {\n\t\t\treturn of(this.cache[lang]);\n\t\t} else {\n\t\t\treturn this.get({ lang }).pipe(\n\t\t\t\ttake(1),\n\t\t\t\tmap((x: Label[]) => {\n\t\t\t\t\tif (x[0]) {\n\t\t\t\t\t\tconst labels = x[0].labels;\n\t\t\t\t\t\tthis.cache[lang] = labels;\n\t\t\t\t\t\tthis.events.emit(labels);\n\t\t\t\t\t\treturn labels;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn of(null);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\t/*\n\t\t\t\ttap(x => {\n\t\t\t\t\t// this.logger.log(`found label matching \"${lang}\"`);\n\t\t\t\t})\n\t\t\t\t*/\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic getLabel(key: string, defaultValue?: string, params?: any): string | any {\n\t\tlet value: string | null = null;\n\t\tlet labels: any = this.cache[this.lang];\n\t\tif (labels) {\n\t\t\tconst keys: string[] = key.split('.');\n\t\t\tlet k = keys.shift();\n\t\t\twhile (keys.length > 0 && labels[k]) {\n\t\t\t\tlabels = labels[k];\n\t\t\t\tk = keys.shift();\n\t\t\t}\n\t\t\tvalue = labels[k] || `{${k}}`;\n\t\t}\n\t\treturn this.parseLabel(value, key, defaultValue, params);\n\t}\n\n\tprivate parseLabel(value: string | null, key: string, defaultValue?: string, params?: any): string | any {\n\t\tif (value == null) {\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\tif (value == null) {\n\t\t\treturn this.missingLabel(key);\n\t\t} else if (params) {\n\t\t\treturn this.parseParams(value, params);\n\t\t}\n\t\treturn value;\n\t}\n\n\tprivate missingLabel(key: string): string {\n\t\tif (this.missingHandler) {\n\t\t\treturn typeof this.missingHandler === 'function' ?\n\t\t\t\tthis.missingHandler(key) :\n\t\t\t\tthis.missingHandler;\n\t\t}\n\t\treturn key;\n\t}\n\n\tprivate parseParams(value: string, params: any): string {\n\t\tconst TEMPLATE_REGEXP: RegExp = /@\\s?([^{}\\s]*)\\s?/g; // /{{\\s?([^{}\\s]*)\\s?}}/g;\n\t\treturn value.replace(TEMPLATE_REGEXP, (text: string, key: string) => {\n\t\t\tconst replacer: string = params[key] as string;\n\t\t\treturn typeof replacer !== 'undefined' ? replacer : text;\n\t\t});\n\t}\n\n\t//\n\n\tgetKey(key: string, defaultValue?: string, params?: any): Observable<string> {\n\t\tif (this.cache.hasOwnProperty(key)) {\n\t\t\treturn of(this.cache[key]);\n\t\t} else {\n\t\t\tObject.defineProperty(this.collectedKeys, key, {\n\t\t\t\tvalue: { id: key, defaultValue: defaultValue },\n\t\t\t\tenumerable: true,\n\t\t\t\twritable: false,\n\t\t\t});\n\t\t\tthis.cache[key] = null;\n\t\t}\n\t\treturn this.labels$.pipe(\n\t\t\tmap(items => items[key] || null),\n\t\t\tfilter(label => label !== null),\n\t\t\t// tap(label => console.log('getKey', key, label)),\n\t\t\tmap(label => this.parseLabel(label, key, defaultValue, params)),\n\t\t);\n\t}\n\n\tregister(): Observable<any> {\n\t\treturn this.emitter.pipe(\n\t\t\t// throttleTime(500),\n\t\t\ttap(() => {\n\t\t\t\tthis.collectKeys().pipe(\n\t\t\t\t\tfirst(),\n\t\t\t\t).subscribe((keys) => {\n\t\t\t\t\t// console.log('LabelService.collected', keys);\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\t}\n\n\tcollect(): void {\n\t\tif (Object.keys(this.collectedKeys).length) {\n\t\t\tthis.emitter.emit();\n\t\t}\n\t}\n\n\tprivate collectKeys(): Observable<{ [key: string]: string; }> {\n\t\tconst keys = Object.keys(this.collectedKeys).map(x => this.collectedKeys[x]);\n\t\tthis.collectedKeys = {};\n\t\tif (keys.length) {\n\t\t\t// console.log('LabelService.collectKeys', JSON.stringify(keys));\n\t\t\treturn this.statePost(`/api/i18n/labels`, keys).pipe(\n\t\t\t\tmap((keys: LabelKey[]) => {\n\t\t\t\t\tconst items = {};\n\t\t\t\t\tkeys.forEach(x => items[x.id] = x.value || x.defaultValue);\n\t\t\t\t\treturn items;\n\t\t\t\t}),\n\t\t\t\ttap((items: { [key: string]: string; }) => {\n\t\t\t\t\tObject.assign(this.cache, items);\n\t\t\t\t\tthis.labels$.next(this.cache);\n\t\t\t\t\t// console.log('collectKeys', this.cache);\n\t\t\t\t}),\n\t\t\t\tcatchError(error => {\n\t\t\t\t\tconsole.log('LabelService.collectKeys.error', error);\n\t\t\t\t\treturn of({});\n\t\t\t\t}),\n\t\t\t);\n\t\t\t/*\n\t\t\treturn this.post(`/api/i18n/labels`, keys).pipe(\n\t\t\t\tmap((keys: LabelKey[]) => {\n\t\t\t\t\tconst items = {};\n\t\t\t\t\tkeys.forEach(x => items[x.id] = x.value || x.defaultValue);\n\t\t\t\t\treturn items;\n\t\t\t\t}),\n\t\t\t\ttap((items: { [key: string]: string; }) => {\n\t\t\t\t\tObject.assign(this.cache, items);\n\t\t\t\t\tthis.labels$.next(this.cache);\n\t\t\t\t\t// console.log('collectKeys', this.cache);\n\t\t\t\t}),\n\t\t\t);\n\t\t\t*/\n\t\t} else {\n\t\t\treturn of({});\n\t\t}\n\t}\n\n}\n\nexport function CustomTranslateLoader(injector: Injector) {\n\treturn new LabelService(injector);\n}\n\n","import { ChangeDetectorRef, Injectable, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { CustomAsyncPipe } from '../pipes/custom-async.pipe';\nimport { Label } from './label';\nimport { LabelService } from './label.service';\n\n@Pipe({\n\tname: 'labelAsync',\n\tpure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LabelAsyncPipe implements OnDestroy, PipeTransform {\n\n\tprivate asyncPipe: CustomAsyncPipe;\n\n\tconstructor(\n\t\tprivate changeDetector: ChangeDetectorRef,\n\t\tprivate labelService: LabelService<Label>,\n\t) {\n\t\tthis.asyncPipe = new CustomAsyncPipe(this.changeDetector);\n\t}\n\n\ttransform(key: string, text?: string, params?: any): string {\n\t\treturn this.asyncPipe.transform(this.labelService.getKey(key, text, params));\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.asyncPipe.dispose();\n\t}\n\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { DisposableComponent } from '../disposable/disposable.component';\nimport { Label } from './label';\nimport { LabelService } from './label.service';\n\n@Directive({\n\tselector: '[label]'\n})\nexport class LabelDirective extends DisposableComponent implements OnInit {\n\n\tkey: string;\n\tinnerHTML: string;\n\n\t/*\n\t@Input() set label(key: string) {\n\t\t// console.log('LabelDirective.label', this.key, this.labelParams, this.template, this.view);\n\t}\n\t*/\n\t@Input() label: string;\n\t@Input() labelParams: any;\n\n\tconstructor(\n\t\tprivate element: ElementRef,\n\t\tprivate labelService: LabelService<Label>,\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\t// console.log('LabelDirective.ngOnInit', this.element.nativeElement.innerHTML);\n\t\tthis.labelService.getKey(this.label, this.element.nativeElement.innerHTML, this.labelParams).pipe(\n\t\t\ttakeUntil(this.unsubscribe)\n\t\t).subscribe(label => {\n\t\t\tthis.element.nativeElement.innerHTML = label;\n\t\t\t// console.log('LabelDirective.ngOnInit', label);\n\t\t});\n\t\t// console.log('LabelDirective.ngOnInit', this.label, this.labelParams, this.template, this.view);\n\t}\n}\n","import { ChangeDetectorRef, Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { Label } from './label';\nimport { LabelService } from './label.service';\n\n@Pipe({\n\tname: 'label',\n\tpure: false,\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LabelPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate ref: ChangeDetectorRef,\n\t\tprotected labelService: LabelService<Label>\n\t) {\n\t\tthis.labelService.events.subscribe(\n\t\t\tx => this.ref.markForCheck()\n\t\t);\n\t}\n\n\tpublic transform(key: string, text?: string, params?: any): string {\n\t\t// console.log(key, params);\n\t\t// return WrappedValue.wrap(this.val);\n\t\tconst label = this.labelService.getLabel(key, text, params);\n\t\t// console.log('label', label, this.labelService.cache);\n\t\treturn label;\n\t}\n\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Logger } from './logger';\n\n@Component({\n\tselector: 'core-logger',\n\ttemplateUrl: './logger.component.html',\n\tstyleUrls: ['./logger.component.scss'],\n\tencapsulation: ViewEncapsulation.Emulated,\n})\nexport class LoggerComponent implements OnInit {\n\tconstructor(public logger: Logger) { }\n\n\tngOnInit() {\n\t}\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport class EventEntity {\n\ttype: string | number;\n\tdata?: any;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class EventDispatcherService {\n\n\tprivate emitter: EventEmitter<EventEntity>;\n\n\tconstructor() {\n\t\tthis.emitter = new EventEmitter<EventEntity>();\n\t}\n\n\temit(event: EventEntity): void {\n\t\treturn this.emitter.emit(event);\n\t}\n\n\tobserve(): Observable<EventEntity> {\n\t\treturn this.emitter.pipe(\n\t\t\ttap((event: EventEntity) => console.log('EventDispatcherService', event))\n\t\t);\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { EntityService } from './entity.service';\nimport { MenuItem } from './menu-item';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class MenuService extends EntityService<MenuItem> {\n\n\tget collection(): string {\n\t\treturn '/api/menu';\n\t}\n\n\tconstructor(\n\t\tprotected injector: Injector,\n\t) {\n\t\tsuper(injector);\n\t}\n\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, NgZone, PLATFORM_ID } from '@angular/core';\nimport { from, fromEvent, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// export class OnceEvent extends Event { }\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class OnceService {\n\n\tprivate uid: number = 0;\n\tprivate paths: string[] = [];\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate zone: NgZone,\n\t) { }\n\n\tscript(url: string, callback?: string | boolean): Observable<Event> {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\t// !!! this.zone.runOutsideAngular(() => {\n\t\t\tif (this.paths.indexOf(url) === -1) {\n\t\t\t\tthis.paths.push(url);\n\t\t\t\tlet callbackName: string;\n\t\t\t\tif (callback === true) {\n\t\t\t\t\tcallbackName = 'OnceCallback' + (++this.uid);\n\t\t\t\t\turl = url.split('{{callback}}').join(callbackName);\n\t\t\t\t} else {\n\t\t\t\t\tcallbackName = callback as string;\n\t\t\t\t}\n\t\t\t\tlet callback$: Observable<any>;\n\t\t\t\tconst element = document.createElement('script');\n\t\t\t\telement.type = 'text/javascript';\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback$ = from(\n\t\t\t\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\t\t\t\twindow[callbackName] = function (data) {\n\t\t\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\telement.async = true;\n\t\t\t\t\tcallback$ = fromEvent(element, 'load').pipe(\n\t\t\t\t\t\tmap(x => x as Event)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconst scripts = document.getElementsByTagName('script');\n\t\t\t\tif (scripts.length) {\n\t\t\t\t\tconst script = scripts[scripts.length - 1];\n\t\t\t\t\tscript.parentNode.insertBefore(element, script.nextSibling);\n\t\t\t\t}\n\t\t\t\telement.src = url;\n\t\t\t\treturn callback$;\n\t\t\t} else {\n\t\t\t\treturn of(new Event('loaded!'));\n\t\t\t}\n\t\t\t// });\n\t\t} else {\n\t\t\treturn of(null);\n\t\t}\n\t}\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { ConfigService } from '../config/config.service';\nimport { SegmentPipe } from './segment.pipe';\n\n@Pipe({\n\tname: 'asset',\n\t// pure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AssetPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate configService: ConfigService,\n\t\tprivate segment: SegmentPipe\n\t) { }\n\n\ttransform(data: any[] | string): string {\n\t\tif (typeof data === 'string' && (data.indexOf('http') === 0 || data.indexOf('/media/') === 0)) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst segments = this.segment.transform(data);\n\t\t\tsegments.unshift(this.configService.options.assets);\n\t\t\treturn segments.join('/');\n\t\t}\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { Image, ImageType } from '../models/image';\n\n@Pipe({\n\tname: 'image',\n\t// pure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ImagePipe implements PipeTransform {\n\ttransform(images: Image[], type?: string, queryString?: string): string {\n\t\ttype = type || 'Default';\n\t\tqueryString = queryString ? `?${queryString}` : '';\n\t\tconst imageType: ImageType = ImageType[type] || ImageType.Default;\n\t\tlet image: Image = null;\n\t\tif (images && images.length) {\n\t\t\timage = images.find(i => i.type === imageType) || images[0];\n\t\t}\n\t\treturn image ? (image.url + queryString).replace(/ /g, '%20') : null;\n\t}\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { ConfigService } from '../config/config.service';\nimport { SegmentPipe } from './segment.pipe';\n\n@Pipe({\n\tname: 'public',\n\t// pure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class PublicPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate configService: ConfigService,\n\t\tprivate segment: SegmentPipe\n\t) { }\n\n\ttransform(data: any[] | string): string {\n\t\tconst segments = this.segment.transform(data);\n\t\tsegments.unshift(this.configService.options.public);\n\t\treturn segments.join('/');\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { RouteService } from './route.service';\n\n@Pipe({\n\tname: 'route',\n\tpure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class RoutePipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate routeService: RouteService,\n\t) { }\n\n\ttransform(data: any[] | string): string[] {\n\t\treturn this.routeService.toRoute(data);\n\t}\n\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { filter, first, map, tap } from 'rxjs/operators';\nimport { DocumentIndex } from '../models/document';\nimport { EntityService } from '../models/entity.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SlugService extends EntityService<DocumentIndex> {\n\n\tprivate collectedKeys: { [key: string]: string; } = {};\n\tprivate cache: { [key: string]: string[]; } = {};\n\tprivate slugs$: Subject<{ [key: string]: string[]; }> = new Subject();\n\tprivate emitter: EventEmitter<any> = new EventEmitter();\n\n\tget collection(): string {\n\t\treturn `/api/slug`;\n\t}\n\n\tgetKey(key: string): Observable<string[]> {\n\t\tif (this.cache.hasOwnProperty(key)) {\n\t\t\treturn of(this.cache[key]);\n\t\t} else {\n\t\t\t// console.log('SlugService.getKey', key);\n\t\t\tObject.defineProperty(this.collectedKeys, key, {\n\t\t\t\tvalue: key,\n\t\t\t\tenumerable: true,\n\t\t\t\twritable: false,\n\t\t\t});\n\t\t\tthis.cache[key] = null;\n\t\t}\n\t\t// return observable of key\n\t\treturn this.slugs$.pipe(\n\t\t\tmap(items => items[key]),\n\t\t\tfilter(item => item !== null),\n\t\t);\n\t}\n\n\tregister(): Observable<any> {\n\t\treturn this.emitter.pipe(\n\t\t\t// throttleTime(500),\n\t\t\ttap(() => {\n\t\t\t\tthis.collectKeys().pipe(\n\t\t\t\t\tfirst(),\n\t\t\t\t).subscribe((keys) => {\n\t\t\t\t\t// console.log('SlugService.collected', keys);\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\t}\n\n\tcollect(): void {\n\t\tif (Object.keys(this.collectedKeys).length) {\n\t\t\tthis.emitter.emit();\n\t\t}\n\t}\n\n\tprivate getSlugs(keys: string[]): Observable<DocumentIndex[]> {\n\t\tkeys = keys || [];\n\t\treturn this.statePost(keys).pipe(\n\t\t\t// tap(items => console.log(items)),\n\t\t);\n\t}\n\n\tprivate collectKeys(): Observable<{ [key: string]: string; }> {\n\t\tthis.slugs$.next(this.cache);\n\t\tconst keys = Object.keys(this.collectedKeys);\n\t\tthis.collectedKeys = {};\n\t\treturn this.getSlugs(keys).pipe(\n\t\t\tmap((items: DocumentIndex[]) => {\n\t\t\t\tconst dictionary = {};\n\t\t\t\titems.forEach(x => dictionary[x.mnemonic] = [x.slug]);\n\t\t\t\treturn dictionary;\n\t\t\t}),\n\t\t\ttap((dictionary: { [key: string]: string; }) => {\n\t\t\t\tObject.assign(this.cache, dictionary);\n\t\t\t\tthis.slugs$.next(this.cache);\n\t\t\t})\n\t\t);\n\t}\n\n}\n","import { ChangeDetectorRef, Injectable, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { CustomAsyncPipe } from '../pipes/custom-async.pipe';\nimport { RoutePipe } from '../routes/route.pipe';\nimport { SlugService } from './slug.service';\n\n@Pipe({\n\tname: 'slugAsync',\n\tpure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SlugAsyncPipe implements OnDestroy, PipeTransform {\n\n\tprivate asyncPipe: CustomAsyncPipe;\n\n\tconstructor(\n\t\tprivate changeDetector: ChangeDetectorRef,\n\t\tprivate slugService: SlugService,\n\t\tprivate routePipe: RoutePipe,\n\t) {\n\t\tthis.asyncPipe = new CustomAsyncPipe(this.changeDetector);\n\t}\n\n\ttransform(key: string, segments?: string[]): string[] {\n\t\tlet slugs = this.routePipe.transform(this.asyncPipe.transform(this.slugService.getKey(key)));\n\t\t// console.log('SlugAsyncPipe.transform', key, slugs);\n\t\tif (slugs && segments) {\n\t\t\tslugs = slugs.concat(segments);\n\t\t}\n\t\treturn slugs;\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.asyncPipe.dispose();\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SlugService } from './slug.service';\n\n@Pipe({\n\tname: 'slug',\n\tpure: false\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SlugPipe implements PipeTransform {\n\n\tconstructor(\n\t\t// private routeService: RouteService,\n\t\tprivate slugService: SlugService\n\t) { }\n\n\ttransform(key: string): Observable<string[]> {\n\t\treturn this.slugService.getKey(key);\n\t\t// return this.async.transform<any>(this.slugService.getKey(key));\n\t\t// return this.routeService.toSlug(key);\n\t}\n\n}\n","import { ChangeDetectorRef, Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from './translate.service';\n\n@Pipe({\n\tname: 'translate',\n\tpure: false,\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class TranslatePipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate ref: ChangeDetectorRef,\n\t\tprotected translateService: TranslateService\n\t) {\n\t\t// this.translateService.events.subscribe(\n\t\t// \tx => this.ref.markForCheck()\n\t\t// );\n\t}\n\n\tpublic transform(key: string, params?: { value: any }): string {\n\t\t// const label = this.translateService.getLabel(key, text, params);\n\t\treturn key;\n\t}\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'safeStyle'\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SafeStylePipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate sanitizer: DomSanitizer\n\t) { }\n\n\ttransform(style: string) {\n\t\treturn this.sanitizer.bypassSecurityTrustStyle(style);\n\t}\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'safeUrl'\n})\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SafeUrlPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate sanitizer: DomSanitizer\n\t) { }\n\n\ttransform(url: string) {\n\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(url);\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'safeHtml'\n})\nexport class TrustPipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate sanitizer: DomSanitizer\n\t) { }\n\n\ttransform(text: string) {\n\t\treturn this.sanitizer.bypassSecurityTrustHtml(text);\n\t\t// return this.sanitizer.bypassSecurityTrustStyle(text);\n\t\t// return this.sanitizer.bypassSecurityTrustXxx(text); - see docs\n\t}\n}\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { ConfigService } from './config/config.service';\r\nimport { CoreConfig, CORE_CONFIG } from './config/core.config';\r\nimport { DefaultContentDirective } from './content/default-content.directive';\r\nimport { CoreModuleComponent } from './core-module.component';\r\nimport { CoreRouting } from './core.routing';\r\nimport { DisposableComponent } from './disposable/disposable.component';\r\nimport { ControlComponent } from './forms/controls/control.component';\r\nimport { ControlService } from './forms/controls/control.service';\r\nimport { ExistsValidator } from './forms/exists.validator';\r\nimport { FormService } from './forms/form.service';\r\nimport { MatchValidator } from './forms/match.validator';\r\nimport { UppercaseDirective } from './forms/uppercase.directive';\r\nimport { HighlightPipe } from './highlight/highlight.pipe';\r\nimport { HttpResponseInterceptor } from './http/http-response.interceptor';\r\nimport { HttpStatusCodeService } from './http/http-status-code.service';\r\nimport { JsonFormatterComponent } from './json-formatter/json-formatter.component';\r\nimport { LabelAsyncPipe } from './labels/label-async.pipe';\r\nimport { LabelDirective } from './labels/label.directive';\r\nimport { LabelPipe } from './labels/label.pipe';\r\nimport { LabelService } from './labels/label.service';\r\nimport { Logger } from './logger/logger';\r\nimport { LoggerComponent } from './logger/logger.component';\r\nimport { EventDispatcherService } from './models/event-dispatcher.service';\r\nimport { MenuService } from './models/menu.service';\r\nimport { OnceService } from './once/once.service';\r\nimport { PageNotFoundComponent } from './pages/page-not-found.component';\r\nimport { PageOutletComponent } from './pages/page-outlet.component';\r\nimport { PageComponent } from './pages/page.component';\r\nimport { PageGuard } from './pages/page.guard';\r\nimport { PageService } from './pages/page.service';\r\nimport { StaticGuard } from './pages/static.guard';\r\nimport { AssetPipe } from './pipes/asset.pipe';\r\nimport { CustomAsyncPipe } from './pipes/custom-async.pipe';\r\nimport { ImagePipe } from './pipes/image.pipe';\r\nimport { PublicPipe } from './pipes/public.pipe';\r\nimport { SegmentPipe } from './pipes/segment.pipe';\r\nimport { RoutePipe } from './routes/route.pipe';\r\nimport { SlugAsyncPipe } from './slugs/slug-async.pipe';\r\nimport { SlugPipe } from './slugs/slug.pipe';\r\nimport { CookieStorageService, LocalStorageService, SessionStorageService, StorageService } from './storage/storage.service';\r\nimport { TranslatePipe } from './translate/translate.pipe';\r\nimport { SafeStylePipe } from './trust/safe-style.pipe';\r\nimport { SafeUrlPipe } from './trust/safe-url.pipe';\r\nimport { TrustPipe } from './trust/trust.pipe';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tCoreRouting,\r\n\t],\r\n\tdeclarations: [\r\n\t\tAssetPipe,\r\n\t\tControlComponent,\r\n\t\tCoreModuleComponent,\r\n\t\tCustomAsyncPipe,\r\n\t\tDefaultContentDirective,\r\n\t\tDisposableComponent,\r\n\t\tExistsValidator,\r\n\t\tHighlightPipe,\r\n\t\tImagePipe,\r\n\t\tJsonFormatterComponent,\r\n\t\tLabelAsyncPipe,\r\n\t\tLabelDirective,\r\n\t\tLabelPipe,\r\n\t\tLoggerComponent,\r\n\t\tMatchValidator,\r\n\t\tPageComponent,\r\n\t\tPageNotFoundComponent,\r\n\t\tPageOutletComponent,\r\n\t\tPublicPipe,\r\n\t\tRoutePipe,\r\n\t\tSafeStylePipe,\r\n\t\tSafeUrlPipe,\r\n\t\tSegmentPipe,\r\n\t\tSlugAsyncPipe,\r\n\t\tSlugPipe,\r\n\t\tTranslatePipe,\r\n\t\tTrustPipe,\r\n\t\tUppercaseDirective,\r\n\t],\r\n\texports: [\r\n\t\tAssetPipe,\r\n\t\tControlComponent,\r\n\t\tCoreModuleComponent,\r\n\t\tCustomAsyncPipe,\r\n\t\tDefaultContentDirective,\r\n\t\tExistsValidator,\r\n\t\tHighlightPipe,\r\n\t\tImagePipe,\r\n\t\tJsonFormatterComponent,\r\n\t\tLabelAsyncPipe,\r\n\t\tLabelDirective,\r\n\t\tLabelPipe,\r\n\t\tLoggerComponent,\r\n\t\tMatchValidator,\r\n\t\tPageComponent,\r\n\t\tPublicPipe,\r\n\t\tRoutePipe,\r\n\t\tSafeStylePipe,\r\n\t\tSafeUrlPipe,\r\n\t\tSegmentPipe,\r\n\t\tSlugAsyncPipe,\r\n\t\tSlugPipe,\r\n\t\tTranslatePipe,\r\n\t\tTrustPipe,\r\n\t\tUppercaseDirective,\r\n\t],\r\n\tproviders: [\r\n\t\t{ provide: HTTP_INTERCEPTORS, useClass: HttpResponseInterceptor, multi: true },\r\n\t\tAssetPipe,\r\n\t\tAuthService,\r\n\t\tConfigService,\r\n\t\tControlService,\r\n\t\tCookieStorageService,\r\n\t\tCustomAsyncPipe,\r\n\t\tEventDispatcherService,\r\n\t\tExistsValidator,\r\n\t\tFormService,\r\n\t\tHighlightPipe,\r\n\t\tHttpStatusCodeService,\r\n\t\tImagePipe,\r\n\t\tLabelPipe,\r\n\t\tLabelService,\r\n\t\tLocalStorageService,\r\n\t\tLogger,\r\n\t\tMatchValidator,\r\n\t\tMenuService,\r\n\t\tOnceService,\r\n\t\tPageGuard, StaticGuard,\r\n\t\tPageService,\r\n\t\tPublicPipe,\r\n\t\tRoutePipe,\r\n\t\tSafeUrlPipe,\r\n\t\tSegmentPipe,\r\n\t\tSessionStorageService,\r\n\t\tSlugAsyncPipe,\r\n\t\tSlugPipe,\r\n\t\tStorageService,\r\n\t\tTranslatePipe,\r\n\t\tTrustPipe,\r\n\t],\r\n})\r\n\r\nexport class CoreModule {\r\n\r\n\tconstructor(\r\n\t\t@Optional() @SkipSelf() parentModule: CoreModule\r\n\t) {\r\n\t\tif (parentModule) {\r\n\t\t\tthrow new Error('CoreModule is already loaded. Import it in the AppModule only');\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static forRoot(\r\n\t\tconfig?: CoreConfig,\r\n\t): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: CoreModule,\r\n\t\t\tproviders: [{\r\n\t\t\t\tprovide: CORE_CONFIG, useValue: config\r\n\t\t\t}]\r\n\t\t};\r\n\t}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CoreService {\n\n\tconstructor() { }\n}\n","import { Entity } from '../models/entity';\n\nexport class Label implements Entity {\n\tid: number | string;\n\tname: string;\n\tlang: string;\n\tlabels?: any;\n}\n","import { Entity } from './entity';\n\nexport class Document implements Entity {\n\tid: number | string;\n\tname?: string;\n\ttitle?: string;\n\tdescription?: string;\n\tslug?: string;\n}\n\nexport class DocumentIndex {\n\tid: number | string;\n\tmnemonic?: string;\n\tslug?: string;\n}\n\n","import { Document } from './document';\nimport { Image } from './image';\n\nexport class MenuItem implements Document {\n\tid: number | string;\n\tname?: string;\n\ttitle?: string;\n\tabstract?: string;\n\tslug?: string;\n\turl?: string;\n\ttype?: number | string;\n\timages?: Image[];\n\titems?: MenuItem[];\n\n\tconstructor(options?: any) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t\tif (options.items) {\n\t\t\t\tthis.items = options.items.map(item => new MenuItem(item));\n\t\t\t}\n\t\t}\n\t}\n}\n"]}