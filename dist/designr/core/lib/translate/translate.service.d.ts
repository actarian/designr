import { EventEmitter, Injector } from '@angular/core';
import { Observable } from 'rxjs';
import { ApiService } from '../api/api.service';
import { Translate } from './translate';
export declare class TranslateService<T extends Translate> extends ApiService<T> {
    protected injector: Injector;
    readonly collection: string;
    events: EventEmitter<any>;
    missingHandler?: Function;
    private lang_;
    private language_;
    private languages_;
    private cache_;
    lang: string;
    readonly language: any;
    readonly languages: any[];
    constructor(injector: Injector);
    observe$(): Observable<{}>;
    getTranslation(lang: string): Observable<{}>;
    getTranslate(key: string, defaultValue?: string, params?: any): string | any;
    transform(key: string, defaultValue?: string, params?: any): string | undefined;
    private parseTranslate;
    private missingTranslate;
    private parseParams;
    use(lang: string): void;
    setDefaultLang(lang: string): void;
    addLangs(lang: string[]): void;
    getBrowserLang(): string;
    getFirstBrowserLang(): any;
    getFirstBrowserLocale(): any;
}
