{"version":3,"sources":["ng://@designr/data/lib/config/data.config.ts","ng://@designr/data/lib/memory/status-codes.ts","ng://@designr/data/lib/config/data.service.ts","ng://@designr/data/lib/data-module.component.ts","node_modules/tslib/tslib.es6.js","ng://@designr/data/lib/memory/memory.ts","ng://@designr/data/lib/memory/backend.service.ts","ng://@designr/data/lib/memory/delay-response.ts","ng://@designr/data/lib/memory/memory.module.ts","ng://@designr/data/lib/data.module.ts"],"names":["DATA_CONFIG","InjectionToken","DataConfig","options","this","datas","STATUS_CODE","STATUS_CODE_INFO","100","code","text","description","spec_title","spec_href","101","200","201","202","203","204","205","206","300","301","302","303","304","305","307","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","426","500","501","502","503","504","505","102","207","226","308","422","423","424","428","429","431","451","506","507","511","DataService","config","prototype","createDb","parseRequestUrl","url","service","requestInterceptor","request","body","method","collectionName","map","x","collection","find","c","mnemonic","filter","headers","bodify","status","id","Injectable","args","providedIn","decorators","type","Inject","DataModuleComponent","version","ngOnInit","Component","selector","template","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","MemoryDataService","MemoryBackendConfig","Object","assign","caseSensitiveSearch","dataEncapsulation","delay","delete404","passThruUnknownUrl","post204","post409","put204","put404","apiBase","undefined","host","rootPath","BackendService","dataService","factory","location","getLocation","path","defineProperty","databaseReadySubject","BehaviorSubject","resetDb","asObservable","pipe","first","ready","handleRequest","_this","databaseReady","concatMap","handleRequest_","urlWithParams","parsed","database","memoryRequest","HttpHeaders","Content-Type","parseId","toLowerCase","query","resourceUrl","interceptor","bind","test","commands","methodInterceptor","interceptorResponse","response","createResponse$","collectionHandler","getPassThruBackend","handle","createErrorResponse","location_1","drop","urlRoot","protocol","pathSegments","substring","split","segmentIx","removeTrailingSlash","replace","trim","createQueryMap","message","Error","isCollectionIdNumeric","idNum","parseFloat","isNaN","addDelay","delayResponse","response$","ms","Observable","observer","complete","subscription","subscribe","setTimeout","unsubscribe","applyQuery","conditions","caseSensitive","forEach","name","regexp","RegExp","decodeURI","row","has","cond","methodName","data","clone","JSON","parse","stringify","get","post","put","delete","memoryResponseFactory","withDelay","memoryResponse$","createMemoryResponse$","createResponse$fromMemoryResponse$","statusText","getStatusText","isSuccess","findById","item","genId","genIdDefault","maxId","reduce","prev","Math","max","startsWith","document_","document","base","parseUri","str","exec","uri","source","authority","userInfo","user","password","port","relative","directory","file","anchor","keys","passThruBackend","createPassThruBackend","indexOf","findIndex","removeById","index","splice","then","from","of","command","_a","requestBody","console","existingIx","set","response_1","search","Map","params_1","HttpParams","fromString","p","getAll","HttpResponse","HttpXhrBackend","XhrFactory","BackendServiceFactory","MemoryModule","forRoot","ngModule","providers","provide","useClass","useValue","HttpBackend","useFactory","deps","forFeature","NgModule","services","components","DataModule","parentModule","memory","imports","CommonModule","HttpClientModule","CoreModule","declarations","exports","Optional","SkipSelf"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { MemoryBackendConfig } from '../memory/memory';\n\nexport const DATA_CONFIG = new InjectionToken<DataConfig>('data.config');\n\nexport interface Datas { [key: string]: any[]; }\n\nexport class DataConfig {\n\tdatas?: Datas = {};\n\tmemory?: MemoryBackendConfig;\n\n\tconstructor(options?: DataConfig) {\n\t\t// console.log('DataConfig', options);\n\t\tif (options) {\n\t\t\tthis.datas = options.datas || {};\n\t\t}\n\t}\n}\n","export const STATUS_CODE = {\n\tCONTINUE: 100,\n\tSWITCHING_PROTOCOLS: 101,\n\tOK: 200,\n\tCREATED: 201,\n\tACCEPTED: 202,\n\tNON_AUTHORITATIVE_INFORMATION: 203,\n\tNO_CONTENT: 204,\n\tRESET_CONTENT: 205,\n\tPARTIAL_CONTENT: 206,\n\tMULTIPLE_CHOICES: 300,\n\tMOVED_PERMANTENTLY: 301,\n\tFOUND: 302,\n\tSEE_OTHER: 303,\n\tNOT_MODIFIED: 304,\n\tUSE_PROXY: 305,\n\tTEMPORARY_REDIRECT: 307,\n\tBAD_REQUEST: 400,\n\tUNAUTHORIZED: 401,\n\tPAYMENT_REQUIRED: 402,\n\tFORBIDDEN: 403,\n\tNOT_FOUND: 404,\n\tMETHOD_NOT_ALLOWED: 405,\n\tNOT_ACCEPTABLE: 406,\n\tPROXY_AUTHENTICATION_REQUIRED: 407,\n\tREQUEST_TIMEOUT: 408,\n\tCONFLICT: 409,\n\tGONE: 410,\n\tLENGTH_REQUIRED: 411,\n\tPRECONDITION_FAILED: 412,\n\tPAYLOAD_TO_LARGE: 413,\n\tURI_TOO_LONG: 414,\n\tUNSUPPORTED_MEDIA_TYPE: 415,\n\tRANGE_NOT_SATISFIABLE: 416,\n\tEXPECTATION_FAILED: 417,\n\tIM_A_TEAPOT: 418,\n\tUPGRADE_REQUIRED: 426,\n\tINTERNAL_SERVER_ERROR: 500,\n\tNOT_IMPLEMENTED: 501,\n\tBAD_GATEWAY: 502,\n\tSERVICE_UNAVAILABLE: 503,\n\tGATEWAY_TIMEOUT: 504,\n\tHTTP_VERSION_NOT_SUPPORTED: 505,\n\tPROCESSING: 102,\n\tMULTI_STATUS: 207,\n\tIM_USED: 226,\n\tPERMANENT_REDIRECT: 308,\n\tUNPROCESSABLE_ENTRY: 422,\n\tLOCKED: 423,\n\tFAILED_DEPENDENCY: 424,\n\tPRECONDITION_REQUIRED: 428,\n\tTOO_MANY_REQUESTS: 429,\n\tREQUEST_HEADER_FIELDS_TOO_LARGE: 431,\n\tUNAVAILABLE_FOR_LEGAL_REASONS: 451,\n\tVARIANT_ALSO_NEGOTIATES: 506,\n\tINSUFFICIENT_STORAGE: 507,\n\tNETWORK_AUTHENTICATION_REQUIRED: 511\n};\n\n/*tslint:disable:quotemark max-line-length one-line */\nexport const STATUS_CODE_INFO = {\n\t'100': {\n\t\t'code': 100,\n\t\t'text': 'Continue',\n\t\t'description': '\\\"The initial part of a request has been received and has not yet been rejected by the server.\\\"',\n\t\t'spec_title': 'RFC7231#6.2.1',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.2.1'\n\t},\n\t'101': {\n\t\t'code': 101,\n\t\t'text': 'Switching Protocols',\n\t\t'description': '\\\"The server understands and is willing to comply with the client\\'s request, via the Upgrade header field, for a change in the application protocol being used on this connection.\\\"',\n\t\t'spec_title': 'RFC7231#6.2.2',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.2.2'\n\t},\n\t'200': {\n\t\t'code': 200,\n\t\t'text': 'OK',\n\t\t'description': '\\\"The request has succeeded.\\\"',\n\t\t'spec_title': 'RFC7231#6.3.1',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.3.1'\n\t},\n\t'201': {\n\t\t'code': 201,\n\t\t'text': 'Created',\n\t\t'description': '\\\"The request has been fulfilled and has resulted in one or more new resources being created.\\\"',\n\t\t'spec_title': 'RFC7231#6.3.2',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.3.2'\n\t},\n\t'202': {\n\t\t'code': 202,\n\t\t'text': 'Accepted',\n\t\t'description': '\\\"The request has been accepted for processing, but the processing has not been completed.\\\"',\n\t\t'spec_title': 'RFC7231#6.3.3',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.3.3'\n\t},\n\t'203': {\n\t\t'code': 203,\n\t\t'text': 'Non-Authoritative Information',\n\t\t'description': '\\\"The request was successful but the enclosed payload has been modified from that of the origin server\\'s 200 (OK) response by a transforming proxy.\\\"',\n\t\t'spec_title': 'RFC7231#6.3.4',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.3.4'\n\t},\n\t'204': {\n\t\t'code': 204,\n\t\t'text': 'No Content',\n\t\t'description': '\\\"The server has successfully fulfilled the request and that there is no additional content to send in the response payload body.\\\"',\n\t\t'spec_title': 'RFC7231#6.3.5',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.3.5'\n\t},\n\t'205': {\n\t\t'code': 205,\n\t\t'text': 'Reset Content',\n\t\t'description': '\\\"The server has fulfilled the request and desires that the user agent reset the \\\"document view\\\", which caused the request to be sent, to its original state as received from the origin server.\\\"',\n\t\t'spec_title': 'RFC7231#6.3.6',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.3.6'\n\t},\n\t'206': {\n\t\t'code': 206,\n\t\t'text': 'Partial Content',\n\t\t'description': '\\\"The server is successfully fulfilling a range request for the target resource by transferring one or more parts of the selected representation that correspond to the satisfiable ranges found in the requests\\'s Range header field.\\\"',\n\t\t'spec_title': 'RFC7233#4.1',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7233#section-4.1'\n\t},\n\t'300': {\n\t\t'code': 300,\n\t\t'text': 'Multiple Choices',\n\t\t'description': '\\\"The target resource has more than one representation, each with its own more specific identifier, and information about the alternatives is being provided so that the user (or user agent) can select a preferred representation by redirecting its request to one or more of those identifiers.\\\"',\n\t\t'spec_title': 'RFC7231#6.4.1',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.4.1'\n\t},\n\t'301': {\n\t\t'code': 301,\n\t\t'text': 'Moved Permanently',\n\t\t'description': '\\\"The target resource has been assigned a new permanent URI and any future references to this resource ought to use one of the enclosed URIs.\\\"',\n\t\t'spec_title': 'RFC7231#6.4.2',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.4.2'\n\t},\n\t'302': {\n\t\t'code': 302,\n\t\t'text': 'Found',\n\t\t'description': '\\\"The target resource resides temporarily under a different URI.\\\"',\n\t\t'spec_title': 'RFC7231#6.4.3',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.4.3'\n\t},\n\t'303': {\n\t\t'code': 303,\n\t\t'text': 'See Other',\n\t\t'description': '\\\"The server is redirecting the user agent to a different resource, as indicated by a URI in the Location header field, that is intended to provide an indirect response to the original request.\\\"',\n\t\t'spec_title': 'RFC7231#6.4.4',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.4.4'\n\t},\n\t'304': {\n\t\t'code': 304,\n\t\t'text': 'Not Modified',\n\t\t'description': '\\\"A conditional GET request has been received and would have resulted in a 200 (OK) response if it were not for the fact that the condition has evaluated to false.\\\"',\n\t\t'spec_title': 'RFC7232#4.1',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7232#section-4.1'\n\t},\n\t'305': {\n\t\t'code': 305,\n\t\t'text': 'Use Proxy',\n\t\t'description': '*deprecated*',\n\t\t'spec_title': 'RFC7231#6.4.5',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.4.5'\n\t},\n\t'307': {\n\t\t'code': 307,\n\t\t'text': 'Temporary Redirect',\n\t\t'description': '\\\"The target resource resides temporarily under a different URI and the user agent MUST NOT change the request method if it performs an automatic redirection to that URI.\\\"',\n\t\t'spec_title': 'RFC7231#6.4.7',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.4.7'\n\t},\n\t'400': {\n\t\t'code': 400,\n\t\t'text': 'Bad Request',\n\t\t'description': '\\\"The server cannot or will not process the request because the received syntax is invalid, nonsensical, or exceeds some limitation on what the server is willing to process.\\\"',\n\t\t'spec_title': 'RFC7231#6.5.1',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.5.1'\n\t},\n\t'401': {\n\t\t'code': 401,\n\t\t'text': 'Unauthorized',\n\t\t'description': '\\\"The request has not been applied because it lacks valid authentication credentials for the target resource.\\\"',\n\t\t'spec_title': 'RFC7235#6.3.1',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7235#section-3.1'\n\t},\n\t'402': {\n\t\t'code': 402,\n\t\t'text': 'Payment Required',\n\t\t'description': '*reserved*',\n\t\t'spec_title': 'RFC7231#6.5.2',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.5.2'\n\t},\n\t'403': {\n\t\t'code': 403,\n\t\t'text': 'Forbidden',\n\t\t'description': '\\\"The server understood the request but refuses to authorize it.\\\"',\n\t\t'spec_title': 'RFC7231#6.5.3',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.5.3'\n\t},\n\t'404': {\n\t\t'code': 404,\n\t\t'text': 'Not Found',\n\t\t'description': '\\\"The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.\\\"',\n\t\t'spec_title': 'RFC7231#6.5.4',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.5.4'\n\t},\n\t'405': {\n\t\t'code': 405,\n\t\t'text': 'Method Not Allowed',\n\t\t'description': '\\\"The method specified in the request-line is known by the origin server but not supported by the target resource.\\\"',\n\t\t'spec_title': 'RFC7231#6.5.5',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.5.5'\n\t},\n\t'406': {\n\t\t'code': 406,\n\t\t'text': 'Not Acceptable',\n\t\t'description': '\\\"The target resource does not have a current representation that would be acceptable to the user agent, according to the proactive negotiation header fields received in the request, and the server is unwilling to supply a default representation.\\\"',\n\t\t'spec_title': 'RFC7231#6.5.6',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.5.6'\n\t},\n\t'407': {\n\t\t'code': 407,\n\t\t'text': 'Proxy Authentication Required',\n\t\t'description': '\\\"The client needs to authenticate itself in order to use a proxy.\\\"',\n\t\t'spec_title': 'RFC7231#6.3.2',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.3.2'\n\t},\n\t'408': {\n\t\t'code': 408,\n\t\t'text': 'Request Timeout',\n\t\t'description': '\\\"The server did not receive a complete request message within the time that it was prepared to wait.\\\"',\n\t\t'spec_title': 'RFC7231#6.5.7',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.5.7'\n\t},\n\t'409': {\n\t\t'code': 409,\n\t\t'text': 'Conflict',\n\t\t'description': '\\\"The request could not be completed due to a conflict with the current state of the resource.\\\"',\n\t\t'spec_title': 'RFC7231#6.5.8',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.5.8'\n\t},\n\t'410': {\n\t\t'code': 410,\n\t\t'text': 'Gone',\n\t\t'description': '\\\"Access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.\\\"',\n\t\t'spec_title': 'RFC7231#6.5.9',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.5.9'\n\t},\n\t'411': {\n\t\t'code': 411,\n\t\t'text': 'Length Required',\n\t\t'description': '\\\"The server refuses to accept the request without a defined Content-Length.\\\"',\n\t\t'spec_title': 'RFC7231#6.5.10',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.5.10'\n\t},\n\t'412': {\n\t\t'code': 412,\n\t\t'text': 'Precondition Failed',\n\t\t'description': '\\\"One or more preconditions given in the request header fields evaluated to false when tested on the server.\\\"',\n\t\t'spec_title': 'RFC7232#4.2',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7232#section-4.2'\n\t},\n\t'413': {\n\t\t'code': 413,\n\t\t'text': 'Payload Too Large',\n\t\t'description': '\\\"The server is refusing to process a request because the request payload is larger than the server is willing or able to process.\\\"',\n\t\t'spec_title': 'RFC7231#6.5.11',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.5.11'\n\t},\n\t'414': {\n\t\t'code': 414,\n\t\t'text': 'URI Too Long',\n\t\t'description': '\\\"The server is refusing to service the request because the request-target is longer than the server is willing to interpret.\\\"',\n\t\t'spec_title': 'RFC7231#6.5.12',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.5.12'\n\t},\n\t'415': {\n\t\t'code': 415,\n\t\t'text': 'Unsupported Media Type',\n\t\t'description': '\\\"The origin server is refusing to service the request because the payload is in a format not supported by the target resource for this method.\\\"',\n\t\t'spec_title': 'RFC7231#6.5.13',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.5.13'\n\t},\n\t'416': {\n\t\t'code': 416,\n\t\t'text': 'Range Not Satisfiable',\n\t\t'description': '\\\"None of the ranges in the request\\'s Range header field overlap the current extent of the selected resource or that the set of ranges requested has been rejected due to invalid ranges or an excessive request of small or overlapping ranges.\\\"',\n\t\t'spec_title': 'RFC7233#4.4',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7233#section-4.4'\n\t},\n\t'417': {\n\t\t'code': 417,\n\t\t'text': 'Expectation Failed',\n\t\t'description': '\\\"The expectation given in the request\\'s Expect header field could not be met by at least one of the inbound servers.\\\"',\n\t\t'spec_title': 'RFC7231#6.5.14',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.5.14'\n\t},\n\t'418': {\n\t\t'code': 418,\n\t\t'text': 'I\\'m a teapot',\n\t\t'description': '\\\"1988 April Fools Joke. Returned by tea pots requested to brew coffee.\\\"',\n\t\t'spec_title': 'RFC 2324',\n\t\t'spec_href': 'https://tools.ietf.org/html/rfc2324'\n\t},\n\t'426': {\n\t\t'code': 426,\n\t\t'text': 'Upgrade Required',\n\t\t'description': '\\\"The server refuses to perform the request using the current protocol but might be willing to do so after the client upgrades to a different protocol.\\\"',\n\t\t'spec_title': 'RFC7231#6.5.15',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.5.15'\n\t},\n\t'500': {\n\t\t'code': 500,\n\t\t'text': 'Internal Server Error',\n\t\t'description': '\\\"The server encountered an unexpected condition that prevented it from fulfilling the request.\\\"',\n\t\t'spec_title': 'RFC7231#6.6.1',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.6.1'\n\t},\n\t'501': {\n\t\t'code': 501,\n\t\t'text': 'Not Implemented',\n\t\t'description': '\\\"The server does not support the functionality required to fulfill the request.\\\"',\n\t\t'spec_title': 'RFC7231#6.6.2',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.6.2'\n\t},\n\t'502': {\n\t\t'code': 502,\n\t\t'text': 'Bad Gateway',\n\t\t'description': '\\\"The server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.\\\"',\n\t\t'spec_title': 'RFC7231#6.6.3',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.6.3'\n\t},\n\t'503': {\n\t\t'code': 503,\n\t\t'text': 'Service Unavailable',\n\t\t'description': '\\\"The server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.\\\"',\n\t\t'spec_title': 'RFC7231#6.6.4',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.6.4'\n\t},\n\t'504': {\n\t\t'code': 504,\n\t\t'text': 'Gateway Time-out',\n\t\t'description': '\\\"The server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.\\\"',\n\t\t'spec_title': 'RFC7231#6.6.5',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.6.5'\n\t},\n\t'505': {\n\t\t'code': 505,\n\t\t'text': 'HTTP Version Not Supported',\n\t\t'description': '\\\"The server does not support, or refuses to support, the protocol version that was used in the request message.\\\"',\n\t\t'spec_title': 'RFC7231#6.6.6',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7231#section-6.6.6'\n\t},\n\t'102': {\n\t\t'code': 102,\n\t\t'text': 'Processing',\n\t\t'description': '\\\"An interim response to inform the client that the server has accepted the complete request, but has not yet completed it.\\\"',\n\t\t'spec_title': 'RFC5218#10.1',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc2518#section-10.1'\n\t},\n\t'207': {\n\t\t'code': 207,\n\t\t'text': 'Multi-Status',\n\t\t'description': '\\\"Status for multiple independent operations.\\\"',\n\t\t'spec_title': 'RFC5218#10.2',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc2518#section-10.2'\n\t},\n\t'226': {\n\t\t'code': 226,\n\t\t'text': 'IM Used',\n\t\t'description': '\\\"The server has fulfilled a GET request for the resource, and the response is a representation of the result of one or more instance-manipulations applied to the current instance.\\\"',\n\t\t'spec_title': 'RFC3229#10.4.1',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc3229#section-10.4.1'\n\t},\n\t'308': {\n\t\t'code': 308,\n\t\t'text': 'Permanent Redirect',\n\t\t'description': '\\\"The target resource has been assigned a new permanent URI and any future references to this resource SHOULD use one of the returned URIs. [...] This status code is similar to 301 Moved Permanently (Section 7.3.2 of rfc7231), except that it does not allow rewriting the request method from POST to GET.\\\"',\n\t\t'spec_title': 'RFC7238',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc7238'\n\t},\n\t'422': {\n\t\t'code': 422,\n\t\t'text': 'Unprocessable Entity',\n\t\t'description': '\\\"The server understands the content type of the request entity (hence a 415(Unsupported Media Type) status code is inappropriate), and the syntax of the request entity is correct (thus a 400 (Bad Request) status code is inappropriate) but was unable to process the contained instructions.\\\"',\n\t\t'spec_title': 'RFC5218#10.3',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc2518#section-10.3'\n\t},\n\t'423': {\n\t\t'code': 423,\n\t\t'text': 'Locked',\n\t\t'description': '\\\"The source or destination resource of a method is locked.\\\"',\n\t\t'spec_title': 'RFC5218#10.4',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc2518#section-10.4'\n\t},\n\t'424': {\n\t\t'code': 424,\n\t\t'text': 'Failed Dependency',\n\t\t'description': '\\\"The method could not be performed on the resource because the requested action depended on another action and that action failed.\\\"',\n\t\t'spec_title': 'RFC5218#10.5',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc2518#section-10.5'\n\t},\n\t'428': {\n\t\t'code': 428,\n\t\t'text': 'Precondition Required',\n\t\t'description': '\\\"The origin server requires the request to be conditional.\\\"',\n\t\t'spec_title': 'RFC6585#3',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc6585#section-3'\n\t},\n\t'429': {\n\t\t'code': 429,\n\t\t'text': 'Too Many Requests',\n\t\t'description': '\\\"The user has sent too many requests in a given amount of time (\\\"rate limiting\\\").\\\"',\n\t\t'spec_title': 'RFC6585#4',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc6585#section-4'\n\t},\n\t'431': {\n\t\t'code': 431,\n\t\t'text': 'Request Header Fields Too Large',\n\t\t'description': '\\\"The server is unwilling to process the request because its header fields are too large.\\\"',\n\t\t'spec_title': 'RFC6585#5',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc6585#section-5'\n\t},\n\t'451': {\n\t\t'code': 451,\n\t\t'text': 'Unavailable For Legal Reasons',\n\t\t'description': '\\\"The server is denying access to the resource in response to a legal demand.\\\"',\n\t\t'spec_title': 'draft-ietf-httpbis-legally-restricted-status',\n\t\t'spec_href': 'http://tools.ietf.org/html/draft-ietf-httpbis-legally-restricted-status'\n\t},\n\t'506': {\n\t\t'code': 506,\n\t\t'text': 'Variant Also Negotiates',\n\t\t'description': '\\\"The server has an internal configuration error: the chosen variant resource is configured to engage in transparent content negotiation itself, and is therefore not a proper end point in the negotiation process.\\\"',\n\t\t'spec_title': 'RFC2295#8.1',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc2295#section-8.1'\n\t},\n\t'507': {\n\t\t'code': 507,\n\t\t'text': 'Insufficient Storage',\n\t\t'description': '\\The method could not be performed on the resource because the server is unable to store the representation needed to successfully complete the request.\\\"',\n\t\t'spec_title': 'RFC5218#10.6',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc2518#section-10.6'\n\t},\n\t'511': {\n\t\t'code': 511,\n\t\t'text': 'Network Authentication Required',\n\t\t'description': '\\\"The client needs to authenticate to gain network access.\\\"',\n\t\t'spec_title': 'RFC6585#6',\n\t\t'spec_href': 'http://tools.ietf.org/html/rfc6585#section-6'\n\t}\n};\n\n/**\n * get the status text from StatusCode\n */\nexport function getStatusText(status: number) {\n\treturn STATUS_CODE_INFO[status].text || 'Unknown Status';\n}\n\n/**\n * Returns true if the the Http Status Code is 200-299 (success)\n */\nexport function isSuccess(status: number): boolean {\n\treturn status >= 200 && status < 300;\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { DataConfig, DATA_CONFIG } from '../config/data.config';\nimport { BackendService } from '../memory/backend.service';\nimport { MemoryDataService, MemoryRequest, MemoryResponse, ParsedRequestUrl } from '../memory/memory';\nimport { STATUS_CODE } from '../memory/status-codes';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class DataService implements MemoryDataService {\n\n\tpublic config: DataConfig;\n\n\tconstructor(\n\t\t@Inject(DATA_CONFIG) config: DataConfig\n\t\t// @Inject(forwardRef(() => DataService)) public dataService: DataService\n\t\t// private dataService: DataService,\n\t) {\n\t\t// console.log('DataService', config);\n\t\tconfig = config || {};\n\t\tthis.config = new DataConfig(config);\n\t}\n\n\tcreateDb() {\n\t\t// console.log('DataService.createDb', this.config.datas);\n\t\treturn this.config.datas || {};\n\t}\n\n\tparseRequestUrl(url: string, service): ParsedRequestUrl {\n\t\t// !!! REMAPPING\n\t\t/*\n\t\tif (this.dataService.config.memory && this.dataService.config.memory.remap) {\n\t\t\tObject.keys(this.dataService.config.memory.remap).forEach((k: string) => {\n\t\t\t\turl = url.replace(k, this.dataService.config.memory.remap[k]);\n\t\t\t});\n\t\t}\n\t\t*/\n\t\tconst parsed: ParsedRequestUrl = service.parseRequestUrl(url);\n\t\treturn parsed;\n\t}\n\n\trequestInterceptor(request: MemoryRequest, service: BackendService): MemoryResponse {\n\t\t// console.log('requestInterceptor', request);\n\t\tlet body: any;\n\t\tif (request.method === 'post') {\n\t\t\tswitch (request.collectionName) {\n\t\t\t\tcase 'slug':\n\t\t\t\t\tconst mnemonics = request.body;\n\t\t\t\t\tbody = request.body.map(x => request.collection.find(c => c.mnemonic === x) || null).filter(x => x);\n\t\t\t\t\t// console.log(item);\n\t\t\t\t\treturn { headers: request.headers, body: service.bodify(body), status: STATUS_CODE.OK };\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'label':\n\t\t\t\t\tconst ids = request.body.map(x => x.id);\n\t\t\t\t\tbody = request.body.map(x => request.collection.find(c => c.id === x.id) || x);\n\t\t\t\t\t// console.log(item);\n\t\t\t\t\treturn { headers: request.headers, body: service.bodify(body), status: STATUS_CODE.OK };\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/*\n\tresponseInterceptor(response: MemoryResponse, request: MemoryRequest): MemoryResponse {\n\t\tconsole.log('responseInterceptor', response, request);\n\t\treturn response;\n\t}\n\t*/\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'data-module',\n\ttemplate: `<span class=\"data-module\">data {{version}}</span>`,\n\tstyles: []\n})\nexport class DataModuleComponent implements OnInit {\n\n\tversion: string = '0.0.3';\n\n\tconstructor() { }\n\n\tngOnInit() {\n\t}\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { HttpHeaders, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BackendService } from './backend.service';\n\n/** Return information (UriInfo) about a URI  */\nexport function parseUri(str: string): UriInfo {\n\t// Adapted from parseuri package - http://blog.stevenlevithan.com/archives/parseuri\n\t// tslint:disable-next-line:max-line-length\n\tconst URL_REGEX = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\tconst m = URL_REGEX.exec(str);\n\tconst uri: UriInfo = {\n\t\tsource: '',\n\t\tprotocol: '',\n\t\tauthority: '',\n\t\tuserInfo: '',\n\t\tuser: '',\n\t\tpassword: '',\n\t\thost: '',\n\t\tport: '',\n\t\trelative: '',\n\t\tpath: '',\n\t\tdirectory: '',\n\t\tfile: '',\n\t\tquery: '',\n\t\tanchor: ''\n\t};\n\tconst keys = Object.keys(uri);\n\tlet i = keys.length;\n\twhile (i--) { uri[keys[i]] = m[i] || ''; }\n\treturn uri;\n}\n\nexport function removeTrailingSlash(path: string) {\n\treturn path.replace(/\\/$/, '');\n}\n\n/**\n* Interface for a class that creates an in-memory database\n*\n* Its `createDb` method creates a hash of named collections that represents the database\n*\n* For maximum flexibility, the service may define HTTP method overrides.\n* Such methods must match the spelling of an HTTP method in lower case (e.g, \"get\").\n* If a request has a matching method, it will be called as in\n* `get(info: requestInfo, db: {})` where `db` is the database object described above.\n*/\nexport abstract class MemoryDataService {\n\t/**\n\t* Creates an in-memory \"database\" hash whose keys are collection names\n\t* and whose values are arrays of collection objects to return or update.\n\t*\n\t* returns Observable of the database because could have to create it asynchronously.\n\t*\n\t* This method must be safe to call repeatedly.\n\t* Each time it should return a new object with new arrays containing new item objects.\n\t* This condition allows the in-memory backend service to mutate the collections\n\t* and their items without touching the original source data.\n\t*\n\t* The in-mem backend service calls this method without a value the first time.\n\t* The service calls it with the `MemoryRequest` when it receives a POST `commands/resetDb` request.\n\t* Your MemoryDataService can adjust its behavior accordingly.\n\t*/\n\tabstract createDb(reqInfo?: MemoryRequest): {} | Observable<{}> | Promise<{}>;\n}\n\n/////////////////////////////////\n/**\n*  MemoryBackendConfig configuration options\n*  Usage:\n*    MemoryModule.forRoot(InMemHeroService, {delay: 600})\n*\n*  or if providing separately:\n*    provide(MemoryBackendConfig, {useValue: {delay: 600}}),\n*/\n@Injectable()\nexport class MemoryBackendConfig {\n\t/**\n\t * The base path to the api, e.g, 'api/'.\n\t * If not specified than `parseRequestUrl` assumes it is the first path segment in the request.\n\t */\n\tapiBase?: string;\n\t/**\n\t * false (default) if search match should be case insensitive\n\t */\n\tcaseSensitiveSearch?: boolean;\n\t/**\n\t * false (default) put content directly inside the response body.\n\t * true: encapsulate content in a `data` property inside the response body, `{ data: ... }`.\n\t */\n\tdataEncapsulation?: boolean;\n\t/**\n\t * delay (in ms) to simulate latency\n\t */\n\tdelay?: number;\n\t/**\n\t * false (default) should 204 when object-to-delete not found; true: 404\n\t */\n\tdelete404?: boolean;\n\t/**\n\t * host for this service, e.g., 'localhost'\n\t */\n\thost?: string;\n\t/**\n\t * false (default) should pass unrecognized request URL through to original backend; true: 404\n\t */\n\tpassThruUnknownUrl?: boolean;\n\t/**\n\t * true (default) should NOT return the item (204) after a POST. false: return the item (200).\n\t */\n\tpost204?: boolean;\n\t/**\n\t* false (default) should NOT update existing item with POST. false: OK to update.\n\t*/\n\tpost409?: boolean;\n\t/**\n\t* true (default) should NOT return the item (204) after a POST. false: return the item (200).\n\t*/\n\tput204?: boolean;\n\t/**\n\t * false (default) if item not found, create as new item; false: should 404.\n\t */\n\tput404?: boolean;\n\t/**\n\t * root path _before_ any API call, e.g., ''\n\t */\n\trootPath?: string;\n\n\tconstructor(config: MemoryBackendConfig = {}) {\n\t\tObject.assign(this, {\n\t\t\t// default config:\n\t\t\tcaseSensitiveSearch: false,\n\t\t\tdataEncapsulation: false, // do NOT wrap content within an object with a `data` property\n\t\t\tdelay: 500, // simulate latency by delaying response\n\t\t\tdelete404: false, // don't complain if can't find entity to delete\n\t\t\tpassThruUnknownUrl: false, // 404 if can't process URL\n\t\t\tpost204: true, // don't return the item after a POST\n\t\t\tpost409: false, // don't update existing item with that ID\n\t\t\tput204: true,  // don't return the item after a PUT\n\t\t\tput404: false, // create new item if PUT item with that ID not found\n\t\t\tapiBase: undefined, // assumed to be the first path segment\n\t\t\thost: undefined,    // default value is actually set in MemoryBackendConfig ctor\n\t\t\trootPath: undefined // default value is actually set in MemoryBackendConfig ctor\n\t\t}, config);\n\t}\n}\n\n/**\n *\n * Interface for the result of the `parseRequestUrl` method:\n *   Given URL \"http://localhost:8080/api/customers/42?foo=1 the default implementation returns\n *     base: 'api/'\n *     collectionName: 'customers'\n *     id: '42'\n *     query: this.createQuery('foo=1')\n *     resourceUrl: 'http://localhost/api/customers/'\n */\nexport interface ParsedRequestUrl {\n\tapiBase: string;           // the slash-terminated \"base\" for api requests (e.g. `api/`)\n\tcollectionName: string; // the name of the collection of data items (e.g.,`customers`)\n\tid: string;             // the (optional) id of the item in the collection (e.g., `42`)\n\tquery: Map<string, string[]>; // the query parameters;\n\tresourceUrl: string;    // the effective URL for the resource (e.g., 'http://localhost/api/customers/')\n}\n\nexport interface PassThruBackend {\n\t/**\n\t * Handle an HTTP request and return an Observable of HTTP response\n\t * Both the request type and the response type are determined by the supporting HTTP library.\n\t */\n\thandle(req: any): Observable<any>;\n}\n\n/** Interface of information about a Uri  */\nexport interface UriInfo {\n\tsource: string;\n\tprotocol: string;\n\tauthority: string;\n\tuserInfo: string;\n\tuser: string;\n\tpassword: string;\n\thost: string;\n\tport: string;\n\trelative: string;\n\tpath: string;\n\tdirectory: string;\n\tfile: string;\n\tquery: string;\n\tanchor: string;\n}\n\n/**\n* Interface for object w/ info about the current request url\n* extracted from an Http Request.\n* Also holds utility methods and configuration data from this service\n*/\nexport interface MemoryRequest {\n\trequest: HttpRequest<any>; // concrete type depends upon the Http library\n\tbody: any;\n\tapiBase: string;\n\tcollectionName: string;\n\tcollection: any;\n\theaders: HttpHeaders;\n\tmethod: string;\n\tid: any;\n\tquery: Map<string, string[]>;\n\tresourceUrl: string;\n\turl: string; // request URL\n}\n\nexport interface MemoryResponse {\n\t/**\n\t * String, Object, ArrayBuffer or Blob representing the body of the {@link Response}.\n\t */\n\tbody?: string | Object | ArrayBuffer | Blob;\n\n\t/**\n\t * Response headers\n\t */\n\theaders?: HttpHeaders;\n\n\t/**\n\t * Http {@link http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html status code}\n\t * associated with the response.\n\t */\n\tstatus?: number;\n\n\t/**\n\t * Status text for the status code\n\t */\n\tstatusText?: string;\n\t/**\n\t * request url\n\t */\n\turl?: string;\n}\n\n/**\n * Provide a `requestInterceptor` method of this type in your `MemoryDataService` to\n * intercept the created MemoryRequest.\n */\nexport type RequestInterceptor = (request: MemoryRequest, service: BackendService) => MemoryResponse | undefined;\n\n/**\n * Provide a `responseInterceptor` method of this type in your `MemoryDataService` to\n * morph the response options created in the `collectionHandler`.\n */\nexport type ResponseInterceptor = (response: MemoryResponse, request: MemoryRequest) => MemoryResponse;\n","import { HttpBackend, HttpEvent, HttpHeaders, HttpParams, HttpRequest, HttpResponse, HttpResponseBase, HttpXhrBackend, XhrFactory } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, Observer, of } from 'rxjs';\nimport { concatMap, first, map } from 'rxjs/operators';\nimport { delayResponse } from './delay-response';\nimport { MemoryBackendConfig, MemoryDataService, MemoryRequest, MemoryResponse, ParsedRequestUrl, parseUri, PassThruBackend, removeTrailingSlash, UriInfo } from './memory';\nimport { getStatusText, isSuccess, STATUS_CODE } from './status-codes';\n\n@Injectable()\nexport class BackendService implements HttpBackend {\n\n\tprivate passThruBackend: PassThruBackend;\n\tprotected config: MemoryBackendConfig = new MemoryBackendConfig();\n\tprotected database: Object;\n\tprotected databaseReadySubject: BehaviorSubject<boolean>;\n\n\tconstructor(\n\t\tprotected dataService: MemoryDataService,\n\t\tconfig: MemoryBackendConfig = {},\n\t\tprivate factory: XhrFactory,\n\t) {\n\t\tconst location = this.getLocation('/');\n\t\tthis.config.host = location.host; // default to app web server host\n\t\tthis.config.rootPath = location.path; // default to path when app is served (e.g.'/')\n\t\tObject.assign(this.config, config);\n\t}\n\n\tprotected get databaseReady(): Observable<boolean> {\n\t\tif (!this.databaseReadySubject) {\n\t\t\t// first time the service is called.\n\t\t\tthis.databaseReadySubject = new BehaviorSubject(false);\n\t\t\tthis.resetDb();\n\t\t}\n\t\treturn this.databaseReadySubject.asObservable().pipe(\n\t\t\tfirst((ready: boolean) => ready)\n\t\t);\n\t}\n\n\t/**\n\t * Process Request and return an Observable of Http Response object\n\t * in the manner of a RESTy web api.\n\t *\n\t * Expect URI pattern in the form :base/:collectionName/:id?\n\t * Examples:\n\t *   // for store with a 'customers' collection\n\t *   GET api/customers          // all customers\n\t *   GET api/customers/42       // the character with id=42\n\t *   GET api/customers?name=^j  // 'j' is a regex; returns customers whose name starts with 'j' or 'J'\n\t *   GET api/customers.json/42  // ignores the \".json\"\n\t *\n\t * Also accepts direct commands to the service in which the last segment of the apiBase is the word \"commands\"\n\t * Examples:\n\t *     POST commands/resetDb,\n\t *     GET/POST commands/config - get or (re)set the config\n\t *\n\t *   HTTP overrides:\n\t *     If the injected dataService defines an HTTP method (lowercase)\n\t *     The request is forwarded to that method as in\n\t *     `dataService.get(memoryRequest)`\n\t *     which must return either an Observable of the response type\n\t *     for this http library or null|undefined (which means \"keep processing\").\n\t */\n\tprotected handleRequest(request: HttpRequest<any>): Observable<any> {\n\t\t//  handle the request when there is an in-memory database\n\t\treturn this.databaseReady.pipe(concatMap(() => this.handleRequest_(request)));\n\t}\n\n\tprotected handleRequest_(request: HttpRequest<any>): Observable<any> {\n\t\tconst url = request.urlWithParams ? request.urlWithParams : request.url;\n\t\t// Try override parser\n\t\t// If no override parser or it returns nothing, use default parser\n\t\t// const parser = this.bind('parseRequestUrl');\n\t\t// const parsed: ParsedRequestUrl = (parser && parser(url, this)) || this.parseRequestUrl(url);\n\t\tconst parsed: ParsedRequestUrl = this.parseRequestUrl(url);\n\t\tconst collectionName = parsed.collectionName;\n\t\tconst collection = this.database[collectionName];\n\t\tconst memoryRequest: MemoryRequest = {\n\t\t\trequest: request,\n\t\t\tbody: request.body,\n\t\t\tapiBase: parsed.apiBase,\n\t\t\tcollection: collection,\n\t\t\tcollectionName: collectionName,\n\t\t\theaders: new HttpHeaders({ 'Content-Type': 'application/json' }),\n\t\t\tid: this.parseId(collection, collectionName, parsed.id),\n\t\t\tmethod: (request.method || 'get').toLowerCase(),\n\t\t\tquery: parsed.query,\n\t\t\tresourceUrl: parsed.resourceUrl,\n\t\t\turl: url,\n\t\t};\n\t\t// If `dataService.requestInterceptor` exists, let it morph the response options\n\t\tconst interceptor = this.bind('requestInterceptor');\n\t\tif (/commands\\/?$/i.test(memoryRequest.apiBase)) {\n\t\t\treturn this.commands(memoryRequest);\n\t\t}\n\t\tconst methodInterceptor = this.bind(memoryRequest.method);\n\t\tif (methodInterceptor) {\n\t\t\t// MemoryDataService intercepts this HTTP method.\n\t\t\t// if interceptor produced a response, return it.\n\t\t\t// else MemoryDataService chose not to intercept; continue processing.\n\t\t\tconst interceptorResponse = methodInterceptor(memoryRequest);\n\t\t\tif (interceptorResponse) {\n\t\t\t\treturn interceptorResponse;\n\t\t\t}\n\t\t}\n\t\t// !!!\n\t\tlet response: MemoryResponse = interceptor ? interceptor(memoryRequest, this) : null;\n\t\tif (response) {\n\t\t\treturn this.createResponse$(() => response);\n\t\t}\n\t\tif (this.database[collectionName]) {\n\t\t\t// request is for a known collection of the MemoryDataService\n\t\t\treturn this.createResponse$(() => this.collectionHandler(memoryRequest));\n\t\t}\n\t\tif (this.config.passThruUnknownUrl) {\n\t\t\t// unknown collection; pass request thru to a \"real\" backend.\n\t\t\treturn this.getPassThruBackend().handle(request);\n\t\t}\n\t\t// 404 - can't handle this request\n\t\tresponse = this.createErrorResponse(url, STATUS_CODE.NOT_FOUND, `Collection '${collectionName}' not found`);\n\t\treturn this.createResponse$(() => response);\n\t}\n\n\t/**\n\t * Parses the request URL into a `ParsedRequestUrl` object.\n\t * Parsing depends upon certain values of `config`: `apiBase`, `host`, and `urlRoot`.\n\t *\n\t * Configuring the `apiBase` yields the most interesting changes to `parseRequestUrl` behavior:\n\t *   When apiBase=undefined and url='http://localhost/api/collection/42'\n\t *     {base: 'api/', collectionName: 'collection', id: '42', ...}\n\t *   When apiBase='some/api/root/' and url='http://localhost/some/api/root/collection'\n\t *     {base: 'some/api/root/', collectionName: 'collection', id: undefined, ...}\n\t *   When apiBase='/' and url='http://localhost/collection'\n\t *     {base: '/', collectionName: 'collection', id: undefined, ...}\n\t *\n\t * The actual api base segment values are ignored. Only the number of segments matters.\n\t * The following api base strings are considered identical: 'a/b' ~ 'some/api/' ~ `two/segments'\n\t *\n\t * To replace this default method, assign your alternative to your MemoryDataService['parseRequestUrl']\n\t */\n\tprotected parseRequestUrl(url: string): ParsedRequestUrl {\n\t\ttry {\n\t\t\tconst location = this.getLocation(url);\n\t\t\tlet drop = this.config.rootPath.length;\n\t\t\tlet urlRoot = '';\n\t\t\tif (location.host !== this.config.host) {\n\t\t\t\t// url for a server on a different host!\n\t\t\t\t// assume it's collection is actually here too.\n\t\t\t\tdrop = 1; // the leading slash\n\t\t\t\turlRoot = location.protocol + '//' + location.host + '/';\n\t\t\t}\n\t\t\tconst path = location.path.substring(drop);\n\t\t\tconst pathSegments = path.split('/');\n\t\t\tlet segmentIx = 0;\n\t\t\t// apiBase: the front part of the path devoted to getting to the api route\n\t\t\t// Assumes first path segment if no config.apiBase\n\t\t\t// else ignores as many path segments as are in config.apiBase\n\t\t\t// Does NOT care what the api base chars actually are.\n\t\t\tlet apiBase: string;\n\t\t\t// tslint:disable-next-line:triple-equals\n\t\t\tif (this.config.apiBase == undefined) {\n\t\t\t\tapiBase = pathSegments[segmentIx++];\n\t\t\t} else {\n\t\t\t\tapiBase = removeTrailingSlash(this.config.apiBase.trim());\n\t\t\t\tif (apiBase) {\n\t\t\t\t\tsegmentIx = apiBase.split('/').length;\n\t\t\t\t} else {\n\t\t\t\t\tsegmentIx = 0; // no api base at all; unwise but allowed.\n\t\t\t\t}\n\t\t\t}\n\t\t\tapiBase += '/';\n\t\t\tlet collectionName = pathSegments[segmentIx++];\n\t\t\t// ignore anything after a '.' (e.g.,the \"json\" in \"customers.json\")\n\t\t\tcollectionName = collectionName && collectionName.split('.')[0];\n\t\t\tconst id = pathSegments[segmentIx++];\n\t\t\tconst query = this.createQueryMap(location.query);\n\t\t\tconst resourceUrl = urlRoot + apiBase + collectionName + '/';\n\t\t\treturn { apiBase, collectionName, id, query, resourceUrl };\n\t\t} catch (error) {\n\t\t\tconst message = `unable to parse url '${url}'; original error: ${error.message}`;\n\t\t\tthrow new Error(message);\n\t\t}\n\t}\n\n\t/** Parse the id as a number. Return original value if not a number. */\n\tprotected parseId(collection: any[], collectionName: string, id: string): any {\n\t\tif (!this.isCollectionIdNumeric(collection, collectionName)) {\n\t\t\t// Can't confirm that `id` is a numeric type; don't parse as a number\n\t\t\t// or else `'42'` -> `42` and _get by id_ fails.\n\t\t\treturn id;\n\t\t}\n\t\tconst idNum = parseFloat(id);\n\t\treturn isNaN(idNum) ? id : idNum;\n\t}\n\n\t/**\n\t * Add configured delay to response observable unless delay === 0\n\t */\n\tprotected addDelay(response: Observable<any>): Observable<any> {\n\t\tconst delay = this.config.delay;\n\t\treturn delay === 0 ? response : delayResponse(response, delay || 500);\n\t}\n\n\t/**\n\t * Apply query/search parameters as a filter over the collection\n\t * This impl only supports RegExp queries on string properties of the collection\n\t * ANDs the conditions together\n\t */\n\tprotected applyQuery(collection: any[], query: Map<string, string[]>): any[] {\n\t\t// extract filtering conditions - {propertyName, RegExps) - from query/search parameters\n\t\tconst conditions: { name: string, regexp: RegExp }[] = [];\n\t\tconst caseSensitive = this.config.caseSensitiveSearch ? undefined : 'i';\n\t\tquery.forEach((value: string[], name: string) => {\n\t\t\tvalue.forEach(x => conditions.push({\n\t\t\t\tname,\n\t\t\t\tregexp: new RegExp(decodeURI(x), caseSensitive)\n\t\t\t}));\n\t\t});\n\t\tconst length = conditions.length;\n\t\tif (!length) {\n\t\t\treturn collection;\n\t\t}\n\t\t// AND the RegExp conditions\n\t\treturn collection.filter(row => {\n\t\t\tlet has = true;\n\t\t\tlet i = length;\n\t\t\twhile (has && i) {\n\t\t\t\ti -= 1;\n\t\t\t\tconst cond = conditions[i];\n\t\t\t\thas = cond.regexp.test(row[cond.name]);\n\t\t\t}\n\t\t\treturn has;\n\t\t});\n\t}\n\n\t/**\n\t * Get a method from the `MemoryDataService` (if it exists), bound to that service\n\t */\n\tprotected bind<T extends Function>(methodName: string) {\n\t\tconst method = this.dataService[methodName] as T;\n\t\treturn method ? <T>method.bind(this.dataService) : undefined;\n\t}\n\n\tpublic bodify(data: any) {\n\t\treturn this.config.dataEncapsulation ? { data } : data;\n\t}\n\n\tprotected clone(data: any) {\n\t\treturn JSON.parse(JSON.stringify(data));\n\t}\n\n\tprotected collectionHandler(request: MemoryRequest): MemoryResponse {\n\t\t// const request = request.request;\n\t\tlet response: MemoryResponse;\n\t\tswitch (request.method) {\n\t\t\tcase 'get':\n\t\t\t\tresponse = this.get(request);\n\t\t\t\tbreak;\n\t\t\tcase 'post':\n\t\t\t\tresponse = this.post(request);\n\t\t\t\tbreak;\n\t\t\tcase 'put':\n\t\t\t\tresponse = this.put(request);\n\t\t\t\tbreak;\n\t\t\tcase 'delete':\n\t\t\t\tresponse = this.delete(request);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tresponse = this.createErrorResponse(request.url, STATUS_CODE.METHOD_NOT_ALLOWED, 'Method not allowed');\n\t\t\t\tbreak;\n\t\t}\n\t\t// If `dataService.responseInterceptor` exists, let it morph the response options\n\t\tconst interceptor = this.bind('responseInterceptor');\n\t\t// !!!\n\t\treturn interceptor ? interceptor(response, request) : response;\n\t}\n\n\tpublic createErrorResponse(url: string, status: number, message: string): MemoryResponse {\n\t\treturn {\n\t\t\tbody: {\n\t\t\t\terror: `${message}`,\n\t\t\t},\n\t\t\turl: url,\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}),\n\t\t\tstatus: status\n\t\t};\n\t}\n\n\t/**\n\t * Create a cold response Observable from a factory for MemoryResponse\n\t * @param memoryResponseFactory - creates MemoryResponse when observable is subscribed\n\t * @param withDelay - if true (default), add simulated latency delay from configuration\n\t */\n\tprotected createResponse$(memoryResponseFactory: () => MemoryResponse, withDelay = true): Observable<any> {\n\t\tconst memoryResponse$ = this.createMemoryResponse$(memoryResponseFactory);\n\t\tconst response$ = this.createResponse$fromMemoryResponse$(memoryResponse$);\n\t\treturn withDelay ? this.addDelay(response$) : response$;\n\t}\n\n\t/**\n\t * Create a cold Observable of MemoryResponse.\n\t * @param memoryResponseFactory - creates MemoryResponse when observable is subscribed\n\t */\n\tprotected createMemoryResponse$(memoryResponseFactory: () => MemoryResponse): Observable<MemoryResponse> {\n\t\treturn new Observable<MemoryResponse>((observer: Observer<MemoryResponse>) => {\n\t\t\tlet response: MemoryResponse;\n\t\t\ttry {\n\t\t\t\tresponse = memoryResponseFactory();\n\t\t\t} catch (error) {\n\t\t\t\terror = error.message || error;\n\t\t\t\tresponse = this.createErrorResponse('', STATUS_CODE.INTERNAL_SERVER_ERROR, `${error}`);\n\t\t\t}\n\t\t\tconst status = response.status;\n\t\t\ttry {\n\t\t\t\tresponse.statusText = getStatusText(status);\n\t\t\t} catch (error) { /* ignore failure */ }\n\t\t\tif (isSuccess(status)) {\n\t\t\t\tobserver.next(response);\n\t\t\t\tobserver.complete();\n\t\t\t} else {\n\t\t\t\tobserver.error(response);\n\t\t\t}\n\t\t\treturn () => { }; // unsubscribe function\n\t\t});\n\t}\n\n\t/**\n\t * Find first instance of item in collection by `item.id`\n\t * @param collection\n\t * @param id\n\t */\n\tprotected findById<T extends { id: any }>(collection: T[], id: any): T {\n\t\treturn collection.find((item: T) => item.id === id);\n\t}\n\n\t/**\n\t * Generate the next available id for item in this collection\n\t * Use method from `dataService` if it exists and returns a value,\n\t * else delegates to `genIdDefault`.\n\t * @param collection - collection of items with `id` key property\n\t */\n\tprotected genId<T extends { id: any }>(collection: T[], collectionName: string): any {\n\t\tconst genId = this.bind('genId');\n\t\tif (genId) {\n\t\t\tconst id = genId(collection, collectionName);\n\t\t\t// tslint:disable-next-line:triple-equals\n\t\t\tif (id != undefined) {\n\t\t\t\treturn id;\n\t\t\t}\n\t\t}\n\t\treturn this.genIdDefault(collection, collectionName);\n\t}\n\n\t/**\n\t * Default generator of the next available id for item in this collection\n\t * This default implementation works only for numeric ids.\n\t * @param collection - collection of items with `id` key property\n\t * @param collectionName - name of the collection\n\t */\n\tprotected genIdDefault<T extends { id: any }>(collection: T[], collectionName: string): any {\n\t\tif (!this.isCollectionIdNumeric(collection, collectionName)) {\n\t\t\tthrow new Error(`Collection '${collectionName}' id type is non-numeric or unknown. Can only generate numeric ids.`);\n\t\t}\n\t\tlet maxId = 0;\n\t\tcollection.reduce((prev: any, item: any) => {\n\t\t\tmaxId = Math.max(maxId, typeof item.id === 'number' ? item.id : maxId);\n\t\t}, undefined);\n\t\treturn maxId + 1;\n\t}\n\n\t/**\n\t * Get location info from a url, even on server where `document` is not defined\n\t */\n\tprotected getLocation(url: string): UriInfo {\n\t\tif (!url.startsWith('http')) {\n\t\t\t// get the document if running in browser\n\t\t\tconst document_: Document = (typeof document === 'undefined') ? undefined : document;\n\t\t\t// add host info to url before parsing.  Use a fake host when not in browser.\n\t\t\tconst base = document_ ? document_.location.protocol + '//' + document_.location.host : 'http://fake';\n\t\t\turl = url.startsWith('/') ? base + url : base + '/' + url;\n\t\t}\n\t\treturn parseUri(url);\n\t}\n\n\t/**\n\t * get or create the function that passes unhandled requests\n\t * through to the \"real\" backend.\n\t */\n\tprotected getPassThruBackend(): PassThruBackend {\n\t\treturn this.passThruBackend ? this.passThruBackend : this.passThruBackend = this.createPassThruBackend();\n\t}\n\n\tprotected indexOf(collection: any[], id: number) {\n\t\treturn collection.findIndex((item: any) => item.id === id);\n\t}\n\n\t/**\n\t * return true if can determine that the collection's `item.id` is a number\n\t * This implementation can't tell if the collection is empty so it assumes NO\n\t * */\n\tprotected isCollectionIdNumeric<T extends { id: any }>(collection: T[], collectionName: string): boolean {\n\t\t// collectionName not used now but override might maintain collection type information\n\t\t// so that it could know the type of the `id` even when the collection is empty.\n\t\t// return !!(collection && collection[0]) && typeof collection[0].id === 'number';\n\t\treturn !!(collection && collection[0]);\n\t}\n\n\tprotected removeById(collection: any[], id: number) {\n\t\tconst index = this.indexOf(collection, id);\n\t\tif (index > -1) {\n\t\t\tcollection.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tell your in-mem \"database\" to reset.\n\t * returns Observable of the database because resetting it could be async\n\t */\n\tprotected resetDb(request?: MemoryRequest): Observable<boolean> {\n\t\tthis.databaseReadySubject.next(false);\n\t\tconst database = this.dataService.createDb(request);\n\t\tconst database$ = database instanceof Observable ? database :\n\t\t\ttypeof (database as any).then === 'function' ? from(database as Promise<any>) :\n\t\t\t\tof(database);\n\t\tdatabase$.pipe(first()).subscribe((database: {}) => {\n\t\t\tthis.database = database;\n\t\t\tthis.databaseReadySubject.next(true);\n\t\t});\n\t\treturn this.databaseReady;\n\t}\n\n\t/**\n\t * Commands reconfigure the in-memory web api service or extract information from it.\n\t * Commands ignore the latency delay and respond ASAP.\n\t *\n\t * When the last segment of the `apiBase` path is \"commands\",\n\t * the `collectionName` is the command.\n\t *\n\t * Example URLs:\n\t *   commands/resetdb (POST) // Reset the \"database\" to its original state\n\t *   commands/config (GET)   // Return this service's config object\n\t *   commands/config (POST)  // Update the config (e.g. the delay)\n\t *\n\t * Usage:\n\t *   http.post('commands/resetdb', undefined);\n\t *   http.get('commands/config');\n\t *   http.post('commands/config', '{\"delay\":1000}');\n\t */\n\tprotected commands(request: MemoryRequest): Observable<any> {\n\t\tconst command = request.collectionName.toLowerCase();\n\t\tconst method = request.method;\n\t\tlet response: MemoryResponse = {\n\t\t\turl: request.url\n\t\t};\n\t\tswitch (command) {\n\t\t\tcase 'resetdb':\n\t\t\t\tresponse.status = STATUS_CODE.NO_CONTENT;\n\t\t\t\treturn this.resetDb(request).pipe(\n\t\t\t\t\tconcatMap(() => this.createResponse$(() => response, false /* no latency delay */))\n\t\t\t\t);\n\t\t\tcase 'config':\n\t\t\t\tif (method === 'get') {\n\t\t\t\t\tresponse.status = STATUS_CODE.OK;\n\t\t\t\t\tresponse.body = this.clone(this.config);\n\t\t\t\t\t// any other HTTP method is assumed to be a config update\n\t\t\t\t} else {\n\t\t\t\t\tconst body = request.request.body;\n\t\t\t\t\tObject.assign(this.config, body);\n\t\t\t\t\tthis.passThruBackend = undefined; // re-create when needed\n\t\t\t\t\tresponse.status = STATUS_CODE.NO_CONTENT;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tresponse = this.createErrorResponse(request.url, STATUS_CODE.INTERNAL_SERVER_ERROR, `Unknown command \"${command}\"`);\n\t\t}\n\t\treturn this.createResponse$(() => response, false /* no latency delay */);\n\t}\n\n\tprotected get({ collection, collectionName, headers, id, query, url }: MemoryRequest): MemoryResponse {\n\t\tlet data = collection;\n\t\t// tslint:disable-next-line:triple-equals\n\t\tif (id != undefined && id !== '') {\n\t\t\tdata = this.findById(collection, id);\n\t\t\tif (!data) {\n\t\t\t\treturn this.createErrorResponse(url, STATUS_CODE.NOT_FOUND, `'${collectionName}' with id='${id}' not found`);\n\t\t\t}\n\t\t} else if (query) {\n\t\t\tdata = this.applyQuery(collection, query);\n\t\t\tif (!data.length) {\n\t\t\t\treturn this.createErrorResponse(url, STATUS_CODE.NOT_FOUND, `'${collectionName}' with id='${id}' not found`);\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tbody: this.bodify(this.clone(data)),\n\t\t\theaders: headers,\n\t\t\tstatus: STATUS_CODE.OK\n\t\t};\n\t}\n\n\t// Create entity\n\t// Can update an existing entity too if post409 is false.\n\tprotected post({ collection, collectionName, headers, id, request, resourceUrl, url }: MemoryRequest): MemoryResponse {\n\t\tconst requestBody = request.body;\n\t\tconst item: any = this.clone(requestBody);\n\t\t// tslint:disable-next-line:triple-equals\n\t\tif (item.id == undefined) {\n\t\t\ttry {\n\t\t\t\titem.id = id || this.genId(collection, collectionName);\n\t\t\t} catch (error) {\n\t\t\t\tconst message: string = error.message || '';\n\t\t\t\tif (/id type is non-numeric/.test(message)) {\n\t\t\t\t\treturn this.createErrorResponse(url, STATUS_CODE.UNPROCESSABLE_ENTRY, message);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\treturn this.createErrorResponse(url, STATUS_CODE.INTERNAL_SERVER_ERROR, `Failed to generate new id for '${collectionName}'`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (id && id !== item.id) {\n\t\t\treturn this.createErrorResponse(url, STATUS_CODE.BAD_REQUEST, `Request id does not match item.id`);\n\t\t} else {\n\t\t\tid = item.id;\n\t\t}\n\t\tconst existingIx = this.indexOf(collection, id);\n\t\tconst body = this.bodify(item);\n\t\tif (existingIx === -1) {\n\t\t\tcollection.push(item);\n\t\t\theaders.set('Location', resourceUrl + '/' + id);\n\t\t\treturn { headers, body, status: STATUS_CODE.CREATED };\n\t\t} else if (this.config.post409) {\n\t\t\treturn this.createErrorResponse(url, STATUS_CODE.CONFLICT, `'${collectionName}' item with id='${id} exists and may not be updated with POST; use PUT instead.`);\n\t\t} else {\n\t\t\tcollection[existingIx] = item;\n\t\t\treturn this.config.post204 ?\n\t\t\t\t{ headers, status: STATUS_CODE.NO_CONTENT } : // successful; no content\n\t\t\t\t{ headers, body, status: STATUS_CODE.OK }; // successful; return entity\n\t\t}\n\t}\n\n\t// Update existing entity\n\t// Can create an entity too if put404 is false.\n\tprotected put({ collection, collectionName, headers, id, request, url }: MemoryRequest): MemoryResponse {\n\t\tconst item = this.clone(request.body);\n\t\t// tslint:disable-next-line:triple-equals\n\t\tif (item.id == undefined) {\n\t\t\treturn this.createErrorResponse(url, STATUS_CODE.NOT_FOUND, `Missing '${collectionName}' id`);\n\t\t}\n\t\tif (id && id !== item.id) {\n\t\t\treturn this.createErrorResponse(url, STATUS_CODE.BAD_REQUEST, `Request for '${collectionName}' id does not match item.id`);\n\t\t} else {\n\t\t\tid = item.id;\n\t\t}\n\t\tconst existingIx = this.indexOf(collection, id);\n\t\tconst body = this.bodify(item);\n\t\tif (existingIx > -1) {\n\t\t\tcollection[existingIx] = item;\n\t\t\treturn this.config.put204 ?\n\t\t\t\t{ headers, status: STATUS_CODE.NO_CONTENT } : // successful; no content\n\t\t\t\t{ headers, body, status: STATUS_CODE.OK }; // successful; return entity\n\t\t} else if (this.config.put404) {\n\t\t\t// item to update not found; use POST to create new item for this id.\n\t\t\treturn this.createErrorResponse(url, STATUS_CODE.NOT_FOUND, `'${collectionName}' item with id='${id} not found and may not be created with PUT; use POST instead.`);\n\t\t} else {\n\t\t\t// create new item for id not found\n\t\t\tcollection.push(item);\n\t\t\treturn { headers, body, status: STATUS_CODE.CREATED };\n\t\t}\n\t}\n\n\tprotected delete({ collection, collectionName, headers, id, url }: MemoryRequest): MemoryResponse {\n\t\t// tslint:disable-next-line:triple-equals\n\t\tif (id == undefined) {\n\t\t\treturn this.createErrorResponse(url, STATUS_CODE.NOT_FOUND, `Missing \"${collectionName}\" id`);\n\t\t}\n\t\tconst exists = this.removeById(collection, id);\n\t\treturn {\n\t\t\theaders: headers,\n\t\t\tstatus: (exists || !this.config.delete404) ? STATUS_CODE.NO_CONTENT : STATUS_CODE.NOT_FOUND\n\t\t};\n\t}\n\n\t///////\n\n\n\thandle(request: HttpRequest<any>): Observable<HttpEvent<any>> {\n\t\ttry {\n\t\t\treturn this.handleRequest(request);\n\t\t} catch (error) {\n\t\t\tconst response = this.createErrorResponse(request.url, STATUS_CODE.INTERNAL_SERVER_ERROR, `${error.message || error}`);\n\t\t\treturn this.createResponse$(() => response);\n\t\t}\n\t}\n\n\tprotected createQueryMap(search: string): Map<string, string[]> {\n\t\tconst map = new Map<string, string[]>();\n\t\tif (search) {\n\t\t\tconst params = new HttpParams({ fromString: search });\n\t\t\tparams.keys().forEach(p => map.set(p, params.getAll(p)));\n\t\t}\n\t\treturn map;\n\t}\n\n\tprotected createResponse$fromMemoryResponse$(response$: Observable<MemoryResponse>): Observable<HttpResponse<any>> {\n\t\treturn response$.pipe(\n\t\t\tmap((options: HttpResponseBase) => new HttpResponse<any>(options)),\n\t\t);\n\t}\n\n\tprotected createPassThruBackend() {\n\t\ttry {\n\t\t\treturn new HttpXhrBackend(this.factory);\n\t\t} catch (error) {\n\t\t\terror.message = 'Cannot create passThru404 backend; ' + (error.message || '');\n\t\t\tthrow error;\n\t\t}\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nexport function delayResponse<T>(response$: Observable<T>, ms: number): Observable<T> {\n\treturn new Observable<T>(observer => {\n\t\tlet complete = false;\n\t\tlet next = false;\n\t\tconst subscription = response$.subscribe(\n\t\t\tvalue => {\n\t\t\t\tnext = true;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tobserver.next(value);\n\t\t\t\t\tif (complete) {\n\t\t\t\t\t\tobserver.complete();\n\t\t\t\t\t}\n\t\t\t\t}, ms);\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tobserver.error(error);\n\t\t\t\t}, ms)\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tcomplete = true;\n\t\t\t\tif (!next) {\n\t\t\t\t\tobserver.complete();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\treturn () => {\n\t\t\treturn subscription.unsubscribe();\n\t\t};\n\t});\n}\n","////// HttpClient-Only version ////\n\nimport { HttpBackend, XhrFactory } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule, Type } from '@angular/core';\nimport { BackendService } from './backend.service';\nimport { MemoryBackendConfig, MemoryDataService } from './memory';\n\n// Internal - Creates the in-mem backend for the HttpClient module\n// AoT requires factory to be exported\nexport function BackendServiceFactory(\n\tdataService: MemoryDataService,\n\tconfig: MemoryBackendConfig,\n\tfactory: XhrFactory,\n): HttpBackend {\n\tconst backend: any = new BackendService(dataService, config, factory);\n\treturn backend;\n}\n\n@NgModule({})\nexport class MemoryModule {\n\n\tstatic forRoot(\n\t\tdataService: Type<MemoryDataService>,\n\t\tconfig?: MemoryBackendConfig\n\t): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: MemoryModule,\n\t\t\tproviders: [\n\t\t\t\t{ provide: MemoryDataService, useClass: dataService },\n\t\t\t\t{ provide: MemoryBackendConfig, useValue: config },\n\t\t\t\t{ provide: HttpBackend, useFactory: BackendServiceFactory, deps: [MemoryDataService, MemoryBackendConfig, XhrFactory] }\n\t\t\t]\n\t\t};\n\t}\n\n\tstatic forFeature(\n\t\tdataService: Type<MemoryDataService>,\n\t\tconfig?: MemoryBackendConfig\n\t): ModuleWithProviders {\n\t\treturn MemoryModule.forRoot(dataService, config);\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CoreModule } from '@designr/core';\r\nimport { DataConfig, DATA_CONFIG } from './config/data.config';\r\nimport { DataService } from './config/data.service';\r\nimport { DataModuleComponent } from './data-module.component';\r\nimport { MemoryModule } from './memory/memory.module';\r\n\r\nconst services = [\r\n\tDataService,\r\n];\r\n\r\nconst components = [\r\n\tDataModuleComponent,\r\n];\r\n\r\nconst directives = [\r\n];\r\n\r\nconst pipes = [\r\n];\r\n\r\nconst validators = [\r\n];\r\n\r\nconst guards = [\r\n];\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tHttpClientModule,\r\n\t\tMemoryModule,\r\n\t\tCoreModule,\r\n\t],\r\n\tproviders: [\r\n\t\t...services,\r\n\t],\r\n\tdeclarations: [\r\n\t\t...components,\r\n\t],\r\n\texports: [\r\n\t\tMemoryModule,\r\n\t\tCoreModule,\r\n\t\t...components,\r\n\t],\r\n})\r\n\r\nexport class DataModule {\r\n\r\n\tconstructor(\r\n\t\t@Optional() @SkipSelf() parentModule: DataModule\r\n\t) {\r\n\t\tif (parentModule) {\r\n\t\t\tthrow new Error('DataModule is already loaded. Import it in the AppModule only');\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static forRoot(\r\n\t\tconfig?: DataConfig,\r\n\t): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: DataModule,\r\n\t\t\tproviders: [\r\n\t\t\t\t{ provide: DATA_CONFIG, useValue: config },\r\n\t\t\t\t...MemoryModule.forRoot(DataService, config.memory).providers\r\n\t\t\t]\r\n\t\t};\r\n\t}\r\n\r\n}\r\n"]}